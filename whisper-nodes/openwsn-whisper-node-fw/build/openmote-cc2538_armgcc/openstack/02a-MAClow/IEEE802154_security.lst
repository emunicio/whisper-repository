   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"IEEE802154_security.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  23              	rreg_uriquery:
  24 0000 683D7563 		.ascii	"h=ucb\000"
  24      6200
  25 0006 0000     		.align	2
  28              	infoBoardname:
  29 0008 43433235 		.ascii	"CC2538\000"
  29      333800
  30 000f 00       		.align	2
  33              	infouCName:
  34 0010 43433235 		.ascii	"CC2538\000"
  34      333800
  35 0017 00       		.align	2
  38              	infoRadioName:
  39 0018 43433235 		.ascii	"CC2538 SoC\000"
  39      33382053 
  39      6F4300
  40 0023 00       		.align	2
  43              	infoStackName:
  44 0024 4F70656E 		.ascii	"OpenWSN \000"
  44      57534E20 
  44      00
  45 002d 000000   		.align	2
  48              	chTemplate_default:
  49 0030 05       		.byte	5
  50 0031 06       		.byte	6
  51 0032 0C       		.byte	12
  52 0033 07       		.byte	7
  53 0034 0F       		.byte	15
  54 0035 04       		.byte	4
  55 0036 0E       		.byte	14
  56 0037 0B       		.byte	11
  57 0038 08       		.byte	8
  58 0039 00       		.byte	0
  59 003a 01       		.byte	1
  60 003b 02       		.byte	2
  61 003c 0D       		.byte	13
  62 003d 03       		.byte	3
  63 003e 09       		.byte	9
  64 003f 0A       		.byte	10
  65              		.align	2
  68              	ebIEsBytestream:
  69 0040 1A       		.byte	26
  70 0041 88       		.byte	-120
  71 0042 06       		.byte	6
  72 0043 1A       		.byte	26
  73 0044 00       		.byte	0
  74 0045 00       		.byte	0
  75 0046 00       		.byte	0
  76 0047 00       		.byte	0
  77 0048 00       		.byte	0
  78 0049 00       		.byte	0
  79 004a 01       		.byte	1
  80 004b 1C       		.byte	28
  81 004c 00       		.byte	0
  82 004d 01       		.byte	1
  83 004e C8       		.byte	-56
  84 004f 00       		.byte	0
  85 0050 0A       		.byte	10
  86 0051 1B       		.byte	27
  87 0052 01       		.byte	1
  88 0053 00       		.byte	0
  89 0054 17       		.byte	23
  90 0055 00       		.byte	0
  91 0056 01       		.byte	1
  92 0057 00       		.byte	0
  93 0058 00       		.byte	0
  94 0059 00       		.byte	0
  95 005a 00       		.byte	0
  96 005b 0F       		.byte	15
  97              		.align	2
 100              	linklocalprefix:
 101 005c FE       		.byte	-2
 102 005d 80       		.byte	-128
 103 005e 00       		.byte	0
 104 005f 00       		.byte	0
 105 0060 00       		.byte	0
 106 0061 00       		.byte	0
 107 0062 00       		.byte	0
 108 0063 00       		.byte	0
 109              		.align	2
 112              	all_routers_multicast:
 113 0064 FF       		.byte	-1
 114 0065 02       		.byte	2
 115 0066 00       		.byte	0
 116 0067 00       		.byte	0
 117 0068 00       		.byte	0
 118 0069 00       		.byte	0
 119 006a 00       		.byte	0
 120 006b 00       		.byte	0
 121 006c 00       		.byte	0
 122 006d 00       		.byte	0
 123 006e 00       		.byte	0
 124 006f 00       		.byte	0
 125 0070 00       		.byte	0
 126 0071 00       		.byte	0
 127 0072 00       		.byte	0
 128 0073 1A       		.byte	26
 129              		.comm	ieee802154_security_vars,36,4
 130              		.text
 131              		.align	2
 132              		.global	IEEE802154_security_init
 133              		.thumb
 134              		.thumb_func
 136              	IEEE802154_security_init:
 137              	.LFB0:
 138              		.file 1 "build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c"
   1:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** /**
   2:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \brief Security operations defined by IEEE802.15.4e standard
   3:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
   4:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \author Savio Sciancalepore <savio.sciancalepore@poliba.it>, June 2015.
   5:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \author Giuseppe Piro <giuseppe.piro@poliba.it> June 2015.
   6:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \author Gennaro Boggia <gennaro.boggia@poliba.it> June 2015.
   7:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \author Luigi Alfredo Grieco <alfredo.grieco@poliba.it>, June 2015.
   8:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \author Malisa Vucinic <malishav@gmail.com>, June 2015.
   9:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** */
  10:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  11:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** #include "packetfunctions.h"
  12:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** #include "cryptoengine.h"
  13:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** #include "IEEE802154.h"
  14:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** #include "IEEE802154E.h"
  15:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** #include "idmanager.h"
  16:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** #include "openserial.h"
  17:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** #include "neighbors.h"
  18:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** #include "IEEE802154_security.h"
  19:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  20:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** //=============================define==========================================
  21:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** //=========================== variables =======================================
  22:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  23:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** ieee802154_security_vars_t ieee802154_security_vars;
  24:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  25:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** //========= common functions regardless of whether L2SEC is used or not =======
  26:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** // following 7 functions are also called when L2SEC is not used. This is to facilitate
  27:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** // automated testing of SECJOIN without L2SEC and to ensure the order in which nodes
  28:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** // start sending out EBs. With the current implementation, EBs are sent only once the
  29:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** // node has received a Join Response from the JRC.
  30:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  31:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_init(void) {
 139              		.loc 1 31 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 80B5     		push	{r7, lr}
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147 0002 00AF     		add	r7, sp, #0
 148              		.cfi_def_cfa_register 7
  32:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  33:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // By default, we assume that no dynamic keying (SEC JOIN) is used
  34:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // if an app is linked with dynamic keying support, it should set
  35:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // this flag to true by calling IEEE802154_security_setDynamicKeying()
  36:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    ieee802154_security_vars.dynamicKeying = FALSE;
 149              		.loc 1 36 0
 150 0004 0B4B     		ldr	r3, .L2
 151 0006 0022     		movs	r2, #0
 152 0008 1A70     		strb	r2, [r3]
  37:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  38:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     // TODO joinPermitted flag should be set dynamically upon a button press
  39:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     // and propagated through the network via EBs
  40:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     ieee802154_security_vars.joinPermitted = TRUE;
 153              		.loc 1 40 0
 154 000a 0A4B     		ldr	r3, .L2
 155 000c 0122     		movs	r2, #1
 156 000e 5A70     		strb	r2, [r3, #1]
  41:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  42:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // invalidate beacon key (key 1)
  43:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    ieee802154_security_vars.k1.index = IEEE802154_SECURITY_KEYINDEX_INVALID;
 157              		.loc 1 43 0
 158 0010 084B     		ldr	r3, .L2
 159 0012 0022     		movs	r2, #0
 160 0014 9A70     		strb	r2, [r3, #2]
  44:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    memset(&ieee802154_security_vars.k1.value[0], 0x00, 16);
 161              		.loc 1 44 0
 162 0016 1022     		movs	r2, #16
 163 0018 0021     		movs	r1, #0
 164 001a 0748     		ldr	r0, .L2+4
 165 001c FFF7FEFF 		bl	memset
  45:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  46:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // invalidate data key (key 2)
  47:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    ieee802154_security_vars.k2.index = IEEE802154_SECURITY_KEYINDEX_INVALID;
 166              		.loc 1 47 0
 167 0020 044B     		ldr	r3, .L2
 168 0022 0022     		movs	r2, #0
 169 0024 DA74     		strb	r2, [r3, #19]
  48:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    memset(&ieee802154_security_vars.k2.value[0], 0x00, 16);
 170              		.loc 1 48 0
 171 0026 1022     		movs	r2, #16
 172 0028 0021     		movs	r1, #0
 173 002a 0448     		ldr	r0, .L2+8
 174 002c FFF7FEFF 		bl	memset
  49:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 175              		.loc 1 49 0
 176 0030 00BF     		nop
 177 0032 80BD     		pop	{r7, pc}
 178              	.L3:
 179              		.align	2
 180              	.L2:
 181 0034 00000000 		.word	ieee802154_security_vars
 182 0038 03000000 		.word	ieee802154_security_vars+3
 183 003c 14000000 		.word	ieee802154_security_vars+20
 184              		.cfi_endproc
 185              	.LFE0:
 187              		.align	2
 188              		.global	IEEE802154_security_getBeaconKeyIndex
 189              		.thumb
 190              		.thumb_func
 192              	IEEE802154_security_getBeaconKeyIndex:
 193              	.LFB1:
  50:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  51:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_getBeaconKeyIndex(void) {
 194              		.loc 1 51 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199 0040 80B4     		push	{r7}
 200              		.cfi_def_cfa_offset 4
 201              		.cfi_offset 7, -4
 202 0042 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
  52:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return ieee802154_security_vars.k1.index;
 204              		.loc 1 52 0
 205 0044 024B     		ldr	r3, .L6
 206 0046 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
  53:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 207              		.loc 1 53 0
 208 0048 1846     		mov	r0, r3
 209 004a BD46     		mov	sp, r7
 210              		.cfi_def_cfa_register 13
 211              		@ sp needed
 212 004c 80BC     		pop	{r7}
 213              		.cfi_restore 7
 214              		.cfi_def_cfa_offset 0
 215 004e 7047     		bx	lr
 216              	.L7:
 217              		.align	2
 218              	.L6:
 219 0050 00000000 		.word	ieee802154_security_vars
 220              		.cfi_endproc
 221              	.LFE1:
 223              		.align	2
 224              		.global	IEEE802154_security_getDataKeyIndex
 225              		.thumb
 226              		.thumb_func
 228              	IEEE802154_security_getDataKeyIndex:
 229              	.LFB2:
  54:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_getDataKeyIndex(void) {
 230              		.loc 1 54 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235 0054 80B4     		push	{r7}
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 0056 00AF     		add	r7, sp, #0
 239              		.cfi_def_cfa_register 7
  55:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return ieee802154_security_vars.k2.index;
 240              		.loc 1 55 0
 241 0058 024B     		ldr	r3, .L10
 242 005a DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
  56:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 243              		.loc 1 56 0
 244 005c 1846     		mov	r0, r3
 245 005e BD46     		mov	sp, r7
 246              		.cfi_def_cfa_register 13
 247              		@ sp needed
 248 0060 80BC     		pop	{r7}
 249              		.cfi_restore 7
 250              		.cfi_def_cfa_offset 0
 251 0062 7047     		bx	lr
 252              	.L11:
 253              		.align	2
 254              	.L10:
 255 0064 00000000 		.word	ieee802154_security_vars
 256              		.cfi_endproc
 257              	.LFE2:
 259              		.align	2
 260              		.global	IEEE802154_security_setBeaconKey
 261              		.thumb
 262              		.thumb_func
 264              	IEEE802154_security_setBeaconKey:
 265              	.LFB3:
  57:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  58:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_setBeaconKey(uint8_t index, uint8_t* value) {
 266              		.loc 1 58 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 8
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 271 0068 90B4     		push	{r4, r7}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 7, -4
 275 006a 82B0     		sub	sp, sp, #8
 276              		.cfi_def_cfa_offset 16
 277 006c 00AF     		add	r7, sp, #0
 278              		.cfi_def_cfa_register 7
 279 006e 0346     		mov	r3, r0
 280 0070 3960     		str	r1, [r7]
 281 0072 FB71     		strb	r3, [r7, #7]
  59:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     ieee802154_security_vars.k1.index = index;
 282              		.loc 1 59 0
 283 0074 094A     		ldr	r2, .L13
 284 0076 FB79     		ldrb	r3, [r7, #7]
 285 0078 9370     		strb	r3, [r2, #2]
  60:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     memcpy(ieee802154_security_vars.k1.value, value, 16);
 286              		.loc 1 60 0
 287 007a 084B     		ldr	r3, .L13
 288 007c 3A68     		ldr	r2, [r7]
 289 007e 0333     		adds	r3, r3, #3
 290 0080 1468     		ldr	r4, [r2]	@ unaligned
 291 0082 5068     		ldr	r0, [r2, #4]	@ unaligned
 292 0084 9168     		ldr	r1, [r2, #8]	@ unaligned
 293 0086 D268     		ldr	r2, [r2, #12]	@ unaligned
 294 0088 1C60     		str	r4, [r3]	@ unaligned
 295 008a 5860     		str	r0, [r3, #4]	@ unaligned
 296 008c 9960     		str	r1, [r3, #8]	@ unaligned
 297 008e DA60     		str	r2, [r3, #12]	@ unaligned
  61:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 298              		.loc 1 61 0
 299 0090 00BF     		nop
 300 0092 0837     		adds	r7, r7, #8
 301              		.cfi_def_cfa_offset 8
 302 0094 BD46     		mov	sp, r7
 303              		.cfi_def_cfa_register 13
 304              		@ sp needed
 305 0096 90BC     		pop	{r4, r7}
 306              		.cfi_restore 7
 307              		.cfi_restore 4
 308              		.cfi_def_cfa_offset 0
 309 0098 7047     		bx	lr
 310              	.L14:
 311 009a 00BF     		.align	2
 312              	.L13:
 313 009c 00000000 		.word	ieee802154_security_vars
 314              		.cfi_endproc
 315              	.LFE3:
 317              		.align	2
 318              		.global	IEEE802154_security_setDataKey
 319              		.thumb
 320              		.thumb_func
 322              	IEEE802154_security_setDataKey:
 323              	.LFB4:
  62:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  63:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_setDataKey(uint8_t index, uint8_t* value) {
 324              		.loc 1 63 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 8
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 329 00a0 90B4     		push	{r4, r7}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 4, -8
 332              		.cfi_offset 7, -4
 333 00a2 82B0     		sub	sp, sp, #8
 334              		.cfi_def_cfa_offset 16
 335 00a4 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
 337 00a6 0346     		mov	r3, r0
 338 00a8 3960     		str	r1, [r7]
 339 00aa FB71     		strb	r3, [r7, #7]
  64:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     ieee802154_security_vars.k2.index = index;
 340              		.loc 1 64 0
 341 00ac 094A     		ldr	r2, .L16
 342 00ae FB79     		ldrb	r3, [r7, #7]
 343 00b0 D374     		strb	r3, [r2, #19]
  65:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     memcpy(ieee802154_security_vars.k2.value, value, 16);
 344              		.loc 1 65 0
 345 00b2 084B     		ldr	r3, .L16
 346 00b4 3A68     		ldr	r2, [r7]
 347 00b6 1433     		adds	r3, r3, #20
 348 00b8 1468     		ldr	r4, [r2]	@ unaligned
 349 00ba 5068     		ldr	r0, [r2, #4]	@ unaligned
 350 00bc 9168     		ldr	r1, [r2, #8]	@ unaligned
 351 00be D268     		ldr	r2, [r2, #12]	@ unaligned
 352 00c0 1C60     		str	r4, [r3]	@ unaligned
 353 00c2 5860     		str	r0, [r3, #4]	@ unaligned
 354 00c4 9960     		str	r1, [r3, #8]	@ unaligned
 355 00c6 DA60     		str	r2, [r3, #12]	@ unaligned
  66:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 356              		.loc 1 66 0
 357 00c8 00BF     		nop
 358 00ca 0837     		adds	r7, r7, #8
 359              		.cfi_def_cfa_offset 8
 360 00cc BD46     		mov	sp, r7
 361              		.cfi_def_cfa_register 13
 362              		@ sp needed
 363 00ce 90BC     		pop	{r4, r7}
 364              		.cfi_restore 7
 365              		.cfi_restore 4
 366              		.cfi_def_cfa_offset 0
 367 00d0 7047     		bx	lr
 368              	.L17:
 369 00d2 00BF     		.align	2
 370              	.L16:
 371 00d4 00000000 		.word	ieee802154_security_vars
 372              		.cfi_endproc
 373              	.LFE4:
 375              		.align	2
 376              		.global	IEEE802154_security_isConfigured
 377              		.thumb
 378              		.thumb_func
 380              	IEEE802154_security_isConfigured:
 381              	.LFB5:
  67:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  68:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** bool IEEE802154_security_isConfigured() {
 382              		.loc 1 68 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387 00d8 80B4     		push	{r7}
 388              		.cfi_def_cfa_offset 4
 389              		.cfi_offset 7, -4
 390 00da 00AF     		add	r7, sp, #0
 391              		.cfi_def_cfa_register 7
  69:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     if (ieee802154_security_vars.dynamicKeying == FALSE) {
 392              		.loc 1 69 0
 393 00dc 0B4B     		ldr	r3, .L22
 394 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 395 00e0 83F00103 		eor	r3, r3, #1
 396 00e4 DBB2     		uxtb	r3, r3
 397 00e6 002B     		cmp	r3, #0
 398 00e8 01D0     		beq	.L19
  70:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         return TRUE;
 399              		.loc 1 70 0
 400 00ea 0123     		movs	r3, #1
 401 00ec 0AE0     		b	.L20
 402              	.L19:
  71:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     }
  72:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  73:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     if (ieee802154_security_vars.k1.index != IEEE802154_SECURITY_KEYINDEX_INVALID &&
 403              		.loc 1 73 0
 404 00ee 074B     		ldr	r3, .L22
 405 00f0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 406 00f2 002B     		cmp	r3, #0
 407 00f4 05D0     		beq	.L21
  74:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          ieee802154_security_vars.k2.index != IEEE802154_SECURITY_KEYINDEX_INVALID) {
 408              		.loc 1 74 0 discriminator 1
 409 00f6 054B     		ldr	r3, .L22
 410 00f8 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
  73:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          ieee802154_security_vars.k2.index != IEEE802154_SECURITY_KEYINDEX_INVALID) {
 411              		.loc 1 73 0 discriminator 1
 412 00fa 002B     		cmp	r3, #0
 413 00fc 01D0     		beq	.L21
  75:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         return TRUE;
 414              		.loc 1 75 0
 415 00fe 0123     		movs	r3, #1
 416 0100 00E0     		b	.L20
 417              	.L21:
  76:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     }
  77:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return FALSE;
 418              		.loc 1 77 0
 419 0102 0023     		movs	r3, #0
 420              	.L20:
  78:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 421              		.loc 1 78 0
 422 0104 1846     		mov	r0, r3
 423 0106 BD46     		mov	sp, r7
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 0108 80BC     		pop	{r7}
 427              		.cfi_restore 7
 428              		.cfi_def_cfa_offset 0
 429 010a 7047     		bx	lr
 430              	.L23:
 431              		.align	2
 432              	.L22:
 433 010c 00000000 		.word	ieee802154_security_vars
 434              		.cfi_endproc
 435              	.LFE5:
 437              		.align	2
 438              		.global	IEEE802154_security_setDynamicKeying
 439              		.thumb
 440              		.thumb_func
 442              	IEEE802154_security_setDynamicKeying:
 443              	.LFB6:
  79:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  80:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_setDynamicKeying() {
 444              		.loc 1 80 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449 0110 80B4     		push	{r7}
 450              		.cfi_def_cfa_offset 4
 451              		.cfi_offset 7, -4
 452 0112 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
  81:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     ieee802154_security_vars.dynamicKeying = TRUE;
 454              		.loc 1 81 0
 455 0114 034B     		ldr	r3, .L25
 456 0116 0122     		movs	r2, #1
 457 0118 1A70     		strb	r2, [r3]
  82:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 458              		.loc 1 82 0
 459 011a 00BF     		nop
 460 011c BD46     		mov	sp, r7
 461              		.cfi_def_cfa_register 13
 462              		@ sp needed
 463 011e 80BC     		pop	{r7}
 464              		.cfi_restore 7
 465              		.cfi_def_cfa_offset 0
 466 0120 7047     		bx	lr
 467              	.L26:
 468 0122 00BF     		.align	2
 469              	.L25:
 470 0124 00000000 		.word	ieee802154_security_vars
 471              		.cfi_endproc
 472              	.LFE6:
 474              		.align	2
 475              		.global	IEEE802154_security_prependAuxiliarySecurityHeader
 476              		.thumb
 477              		.thumb_func
 479              	IEEE802154_security_prependAuxiliarySecurityHeader:
 480              	.LFB7:
  83:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  84:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** //=========================== public ==========================================
  85:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** #ifdef L2_SECURITY_ACTIVE
  86:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** /**
  87:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \brief Adding of Auxiliary Security Header to the IEEE802.15.4 MAC header
  88:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** */
  89:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_prependAuxiliarySecurityHeader(OpenQueueEntry_t* msg){
  90:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  91:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t frameCounterSuppression;
  92:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t temp8b;
  93:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    open_addr_t* temp_keySource;
  94:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t auxiliaryLength;
  95:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  96:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    frameCounterSuppression = IEEE154_ASH_FRAMECOUNTER_SUPPRESSED; //the frame counter is carried in
  97:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
  98:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //max length of MAC frames
  99:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // length of authentication Tag
 100:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    msg->l2_authenticationLength = IEEE802154_security_authLengthChecking(msg->l2_securityLevel);
 101:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 102:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //length of auxiliary security header
 103:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    auxiliaryLength = IEEE802154_security_auxLengthChecking(msg->l2_keyIdMode,
 104:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                                            frameCounterSuppression, // frame counte
 105:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                                            0); //length of Key ID field
 106:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 107:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 108:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    if ((msg->length+auxiliaryLength+msg->l2_authenticationLength+2) >= 128 ){ //2 bytes of CRC, 127
 109:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       return;
 110:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 111:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 112:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //start setting the Auxiliary Security Header
 113:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    if (msg->l2_keyIdMode != IEEE154_ASH_KEYIDMODE_IMPLICIT){//if the KeyIdMode is zero, keyIndex an
 114:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       temp8b = msg->l2_keyIndex; //key index field
 115:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       packetfunctions_reserveHeaderSize(msg, sizeof(uint8_t));
 116:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       *((uint8_t*)(msg->payload)) = temp8b;
 117:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 118:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 119:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //insert the keyIdMode field
 120:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    switch (msg->l2_keyIdMode){
 121:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_IMPLICIT: //no KeyIDMode field - implicit
 122:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_DEFAULTKEYSOURCE:// macDefaultKeySource
 123:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 124:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_16: //keySource with 16b address
 125:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          temp_keySource = &msg->l2_keySource;
 126:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          packetfunctions_reserveHeaderSize(msg, sizeof(uint8_t));
 127:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          *((uint8_t*)(msg->payload)) = temp_keySource->addr_64b[6];
 128:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          packetfunctions_reserveHeaderSize(msg, sizeof(uint8_t));
 129:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          *((uint8_t*)(msg->payload)) = temp_keySource->addr_64b[7];
 130:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 131:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_64: //keySource with 64b address
 132:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          temp_keySource = &msg->l2_keySource;
 133:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          packetfunctions_writeAddress(msg,temp_keySource,OW_LITTLE_ENDIAN);
 134:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 135:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       default://error
 136:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 137:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)msg->l2_frameType,
 138:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)0);
 139:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          return;
 140:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 141:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 142:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //security control field
 143:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    packetfunctions_reserveHeaderSize(msg, sizeof(uint8_t));
 144:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****  
 145:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    temp8b = 0;
 146:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    temp8b |= msg->l2_securityLevel << IEEE154_ASH_SCF_SECURITY_LEVEL;//3b
 147:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    temp8b |= msg->l2_keyIdMode << IEEE154_ASH_SCF_KEY_IDENTIFIER_MODE;//2b
 148:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    temp8b |= frameCounterSuppression << IEEE154_ASH_SCF_FRAME_CNT_MODE; //1b
 149:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 150:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    temp8b |= 1 << IEEE154_ASH_SCF_FRAME_CNT_SIZE; //1b
 151:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 152:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    temp8b |= 0 << 1;//1b reserved
 153:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    *((uint8_t*)(msg->payload)) = temp8b;
 154:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 155:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 156:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** /**
 157:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \brief Key searching and encryption/authentication operations.
 158:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** */
 159:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** owerror_t IEEE802154_security_outgoingFrameSecurity(OpenQueueEntry_t*   msg){
 160:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t nonce[13];
 161:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t *key;
 162:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    owerror_t outStatus;
 163:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t* a;
 164:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t len_a;
 165:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t* m;
 166:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t len_m;
 167:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 168:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    key = msg->l2_frameType == IEEE154_TYPE_BEACON ? ieee802154_security_vars.k1.value : ieee802154_
 169:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 170:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // First 8 bytes of the nonce are always the source address of the frame
 171:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    memcpy(&nonce[0],idmanager_getMyID(ADDR_64B)->addr_64b,8);
 172:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 173:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // Fill last 5 bytes with the ASN part of the nonce
 174:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    ieee154e_getAsn(&nonce[8]);
 175:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    packetfunctions_reverseArrayByteOrder(&nonce[8], 5);  // reverse ASN bytes to big endian 
 176:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 177:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //identify data to be authenticated and data to be encrypted
 178:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    switch (msg->l2_securityLevel) {
 179:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_32:  // authentication only cases
 180:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_64:
 181:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_128: 
 182:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          a = msg->payload;             // first byte of the frame
 183:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          len_a = msg->length;          // whole frame
 184:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          m = &msg->payload[len_a];     // concatenate MIC at the end of the frame
 185:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          len_m = 0;                    // length of the encrypted part
 186:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 187:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_32:  // authentication + encryption cases
 188:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_64:
 189:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_128:
 190:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          a = msg->payload;             // first byte of the frame
 191:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          m = msg->l2_payload;          // first byte where we should start encrypting (see 15.4 std
 192:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          len_a = m - a;                // part that is only authenticated is the difference of two 
 193:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          len_m = msg->length - len_a;  // part that is encrypted+authenticated is the rest of the f
 194:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 195:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     case IEEE154_ASH_SLF_TYPE_ENC:    // encryption only
 196:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          // unsecure, should not support it
 197:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          return E_FAIL;
 198:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     default:
 199:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          // reject anything else
 200:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          return E_FAIL;
 201:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 202:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 203:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // assert
 204:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    if (len_a + len_m > 125) {
 205:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 206:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)msg->l2_frameType,
 207:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)2);
 208:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       return E_FAIL;
 209:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 210:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 211:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    if (msg->l2_authenticationLength != 0) {
 212:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       //update the length of the packet
 213:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       packetfunctions_reserveFooterSize(msg,msg->l2_authenticationLength);
 214:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 215:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 216:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //Encryption and/or authentication
 217:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // cryptoengine overwrites m[] with ciphertext and appends the MIC
 218:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    outStatus = cryptoengine_aes_ccms_enc(a,
 219:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     len_a,
 220:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     m,
 221:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     &len_m,
 222:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     nonce,
 223:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     2, // L=2 in 15.4 std
 224:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     key,
 225:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     msg->l2_authenticationLength);
 226:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 227:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //verify that no errors occurred
 228:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    if (outStatus != E_SUCCESS) {
 229:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 230:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       (errorparameter_t)msg->l2_frameType,
 231:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       (errorparameter_t)3);
 232:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 233:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    
 234:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    return outStatus;
 235:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 236:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 237:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** /**
 238:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \brief Parsing of IEEE802.15.4 Auxiliary Security Header.
 239:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** */
 240:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_retrieveAuxiliarySecurityHeader(OpenQueueEntry_t*      msg, 
 241:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                                         ieee802154_header_iht* tempheader){
 242:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 243:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t frameCnt_Suppression;
 244:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t frameCnt_Size;
 245:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t temp8b;
 246:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t i;
 247:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t receivedASN[5];
 248:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    macFrameCounter_t l2_frameCounter;
 249:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 250:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //Retrieve the Security Control field
 251:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //1byte, Security Control Field
 252:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    temp8b = *((uint8_t*)(msg->payload)+tempheader->headerLength);
 253:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    msg->l2_securityLevel = (temp8b >> IEEE154_ASH_SCF_SECURITY_LEVEL)& 0x07;//3b
 254:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 255:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //identify the length of the MIC looking the security level
 256:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    msg->l2_authenticationLength = IEEE802154_security_authLengthChecking(msg->l2_securityLevel);
 257:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 258:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //retrieve the KeyIdMode field
 259:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    msg->l2_keyIdMode = (temp8b >> IEEE154_ASH_SCF_KEY_IDENTIFIER_MODE)& 0x03;//2b
 260:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 261:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //retrieve information on the Frame Counter Mode
 262:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    frameCnt_Suppression = (temp8b >> IEEE154_ASH_SCF_FRAME_CNT_MODE)& 0x01;//1b
 263:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    frameCnt_Size = (temp8b >> IEEE154_ASH_SCF_FRAME_CNT_SIZE)& 0x01;//1b
 264:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 265:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //if the frame counter is zero, it is 4-bytes long, 5 otherwise
 266:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    if (frameCnt_Size == IEEE154_ASH_FRAMECOUNTER_COUNTER) {
 267:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       frameCnt_Size = 4;
 268:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    } else {
 269:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       frameCnt_Size = 5;
 270:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 271:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 272:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    tempheader->headerLength++;
 273:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 274:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //Frame Counter field
 275:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    if (frameCnt_Suppression == IEEE154_ASH_FRAMECOUNTER_PRESENT) { //the frame counter is here
 276:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       //the frame counter size can be 4 or 5 bytes
 277:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       for (i=0;i<frameCnt_Size;i++){
 278:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****           receivedASN[i] = *((uint8_t*)(msg->payload)+tempheader->headerLength);
 279:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****           tempheader->headerLength++;
 280:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       }
 281:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 282:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       l2_frameCounter.bytes0and1 = receivedASN[0]+256*receivedASN[1];
 283:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       l2_frameCounter.bytes2and3 = receivedASN[2]+256*receivedASN[3];
 284:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       if (frameCnt_Size == 5){ //we have the ASN as the frame counter
 285:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          l2_frameCounter.byte4 = receivedASN[4];
 286:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       }
 287:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 288:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       if (l2_frameCounter.byte4 == 0xff){ //frame counter overflow
 289:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 290:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)msg->l2_frameType,
 291:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)4);
 292:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          return;
 293:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       }
 294:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 295:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 296:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 297:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //retrieve the Key Identifier field
 298:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    switch (msg->l2_keyIdMode){
 299:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_IMPLICIT:
 300:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_DEFAULTKEYSOURCE:
 301:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          //key is derived implicitly
 302:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          memcpy(&(msg->l2_keySource), &tempheader->src, sizeof(open_addr_t));
 303:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 304:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_16:
 305:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          packetfunctions_readAddress(((uint8_t*)(msg->payload)+tempheader->headerLength),
 306:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                      ADDR_16B,
 307:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                      &msg->l2_keySource,
 308:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                      OW_LITTLE_ENDIAN);
 309:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          tempheader->headerLength+=2;
 310:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 311:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_64:
 312:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          packetfunctions_readAddress(((uint8_t*)(msg->payload)+tempheader->headerLength),
 313:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                      ADDR_64B,
 314:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                      &msg->l2_keySource,
 315:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                      OW_LITTLE_ENDIAN);
 316:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          tempheader->headerLength+=8;
 317:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 318:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       default: //error
 319:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 320:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)msg->l2_frameType,
 321:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                               (errorparameter_t)5);
 322:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          return;
 323:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       }
 324:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 325:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //retrieve the KeyIndex
 326:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    if (msg->l2_keyIdMode != IEEE154_ASH_KEYIDMODE_IMPLICIT){
 327:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       temp8b = *((uint8_t*)(msg->payload)+tempheader->headerLength);
 328:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       msg->l2_keyIndex = (temp8b);
 329:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       tempheader->headerLength++;
 330:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    } else {
 331:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       //key is derived implicitly
 332:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       msg->l2_keyIndex = 1;
 333:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 334:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 335:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 336:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** /**
 337:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \brief Identification of the key used to protect the frame and unsecuring operations.
 338:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** */
 339:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** owerror_t IEEE802154_security_incomingFrame(OpenQueueEntry_t* msg){
 340:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t nonce[13];
 341:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    owerror_t outStatus;
 342:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t* a;
 343:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t len_a;
 344:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t* c;
 345:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t len_c;
 346:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t *key;
 347:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    
 348:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    key = msg->l2_frameType == IEEE154_TYPE_BEACON ? ieee802154_security_vars.k1.value : ieee802154_
 349:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 350:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // First 8 bytes of the nonce are always the source address of the frame
 351:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    memcpy(&nonce[0],msg->l2_nextORpreviousHop.addr_64b, 8);
 352:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // Fill last 5 bytes with ASN part of the nonce
 353:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    ieee154e_getAsn(&nonce[8]);
 354:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    packetfunctions_reverseArrayByteOrder(&nonce[8], 5);  // reverse ASN bytes to big endian 
 355:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 356:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //identify data to be authenticated and data to be decrypted
 357:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    switch (msg->l2_securityLevel) {
 358:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_32:  // authentication only cases
 359:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_64:
 360:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_128: 
 361:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          a = msg->payload;                                           // first byte of the frame
 362:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          len_a = msg->length-msg->l2_authenticationLength;           // whole frame
 363:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          c = &msg->payload[len_a];                                   // MIC is at the end of the fr
 364:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          len_c = msg->l2_authenticationLength;                       // length of the encrypted par
 365:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 366:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_32:  // authentication + encryption cases
 367:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_64:
 368:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_128:
 369:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          a = msg->payload;             // first byte of the frame
 370:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          c = msg->l2_payload;          // first byte where we should start decrypting 
 371:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          len_a = c - a;                // part that is only authenticated is the difference of two 
 372:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          len_c = msg->length - len_a;  // part that is decrypted+authenticated is the rest of the f
 373:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 374:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC:    // encryption only
 375:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          // unsecure, should not support it
 376:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          return E_FAIL;
 377:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       default:
 378:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          // reject anything else
 379:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          return E_FAIL;
 380:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     }
 381:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 382:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    // assert
 383:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    if (len_a + len_c > 125) {
 384:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 385:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)msg->l2_frameType,
 386:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)11);
 387:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       return E_FAIL;
 388:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 389:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 390:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //decrypt and/or verify authenticity of the frame
 391:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    outStatus = cryptoengine_aes_ccms_dec(a,
 392:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     len_a,
 393:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     c,
 394:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     &len_c,
 395:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     nonce,
 396:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     2,
 397:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     key,
 398:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                     msg->l2_authenticationLength);
 399:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 400:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    //verify if any error occurs
 401:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    if (outStatus != E_SUCCESS){
 402:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       openserial_printError(COMPONENT_SECURITY,ERR_SECURITY,
 403:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)msg->l2_frameType,
 404:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                            (errorparameter_t)12);
 405:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 406:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 407:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    packetfunctions_tossFooter(msg,msg->l2_authenticationLength);
 408:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    
 409:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    return outStatus;
 410:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 411:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 412:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** /**
 413:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \brief Identification of the length of the MIC based on the security Level in the frame
 414:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** */
 415:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_authLengthChecking(uint8_t securityLevel){
 416:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 417:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t authlen;
 418:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    switch (securityLevel) {
 419:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_NOSEC:
 420:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC:
 421:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          authlen = 0;
 422:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 423:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_32:
 424:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_32:
 425:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          authlen = 4;
 426:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 427:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_64:
 428:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_64:
 429:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          authlen = 8;
 430:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 431:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_MIC_128:
 432:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_SLF_TYPE_ENC_MIC_128:
 433:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          authlen = 16;
 434:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 435:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       }
 436:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 437:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    return authlen;
 438:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 439:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 440:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** /**
 441:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** \brief Identification of the length of the IEEE802.15.4 Auxiliary Security Header.
 442:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** */
 443:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_auxLengthChecking(uint8_t KeyIdMode, 
 444:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                              uint8_t frameCounterSuppression, 
 445:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****                                              uint8_t frameCounterSize){
 446:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t auxilary_len;
 447:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    uint8_t frameCntLength;
 448:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 449:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    auxilary_len = 0;
 450:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 451:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    if (frameCounterSuppression == IEEE154_ASH_FRAMECOUNTER_PRESENT){
 452:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       if (frameCounterSize == 4){
 453:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          frameCntLength = 4;
 454:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       } else {
 455:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          frameCntLength = 5;
 456:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       }
 457:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    } else {
 458:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       frameCntLength = 0;
 459:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 460:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 461:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    switch (KeyIdMode){
 462:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_IMPLICIT:
 463:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          auxilary_len = frameCntLength + 1; //only SecLev and FrameCnt
 464:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 465:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_DEFAULTKEYSOURCE:
 466:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          auxilary_len = frameCntLength + 1 + 1; //SecLev, FrameCnt, KeyIndex
 467:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 468:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_16:
 469:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          auxilary_len = frameCntLength + 1 + 3; //SecLev, FrameCnt, KeyIdMode (2 bytes) and KeyInde
 470:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 471:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       case IEEE154_ASH_KEYIDMODE_EXPLICIT_64:
 472:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          auxilary_len = frameCntLength + 1 + 9; //SecLev, FrameCnt, KeyIdMode (8 bytes) and KeyInde
 473:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 474:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****       default:
 475:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          break;
 476:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    }
 477:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 478:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****    return auxilary_len;
 479:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 480:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 481:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_getSecurityLevel(OpenQueueEntry_t *msg) {
 482:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured() == FALSE) {
 483:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         return IEEE154_ASH_SLF_TYPE_NOSEC;
 484:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     }
 485:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     
 486:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     if (packetfunctions_isBroadcastMulticast(&msg->l2_nextORpreviousHop)) {
 487:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         return IEEE802154_SECURITY_LEVEL;
 488:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     }
 489:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 490:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     if(neighbors_isInsecureNeighbor(&msg->l2_nextORpreviousHop) &&
 491:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****        ieee802154_security_vars.joinPermitted == TRUE) {
 492:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         return IEEE154_ASH_SLF_TYPE_NOSEC;
 493:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     }
 494:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     
 495:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return IEEE802154_SECURITY_LEVEL;
 496:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 497:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 498:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** bool IEEE802154_security_acceptableLevel(OpenQueueEntry_t* msg, ieee802154_header_iht* parsedHeader
 499:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured() == FALSE     &&
 500:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_NOSEC) {
 501:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         return TRUE;
 502:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     }
 503:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 504:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured() == FALSE             &&
 505:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         msg->l2_frameType == IEEE154_TYPE_BEACON                &&
 506:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         (msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_32   ||
 507:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_64   ||
 508:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_128)) {
 509:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         return TRUE;
 510:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     }
 511:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     
 512:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured()               == TRUE &&
 513:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_NOSEC      &&
 514:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         ieee802154_security_vars.joinPermitted           == TRUE &&
 515:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         neighbors_isInsecureNeighbor(&parsedHeader->src) == TRUE) {
 516:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         return TRUE;
 517:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     }
 518:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 519:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured() == TRUE              &&
 520:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         msg->l2_frameType == IEEE154_TYPE_BEACON                &&
 521:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         (msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_32   ||
 522:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_64   ||
 523:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_MIC_128)) {
 524:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         return TRUE;
 525:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     }
 526:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****  
 527:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     if (IEEE802154_security_isConfigured() == TRUE                  &&
 528:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         (msg->l2_frameType == IEEE154_TYPE_DATA                     ||
 529:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          msg->l2_frameType == IEEE154_TYPE_ACK                      ||
 530:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          msg->l2_frameType == IEEE154_TYPE_CMD)                     &&
 531:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         (msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_ENC_MIC_32   ||
 532:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_ENC_MIC_64   ||
 533:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****          msg->l2_securityLevel == IEEE154_ASH_SLF_TYPE_ENC_MIC_128)) {
 534:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****         return TRUE;
 535:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     }
 536:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return FALSE;
 537:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 538:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 539:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** #else /* L2_SECURITY_ACTIVE */
 540:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 541:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_prependAuxiliarySecurityHeader(OpenQueueEntry_t* msg){
 481              		.loc 1 541 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 8
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486 0128 80B4     		push	{r7}
 487              		.cfi_def_cfa_offset 4
 488              		.cfi_offset 7, -4
 489 012a 83B0     		sub	sp, sp, #12
 490              		.cfi_def_cfa_offset 16
 491 012c 00AF     		add	r7, sp, #0
 492              		.cfi_def_cfa_register 7
 493 012e 7860     		str	r0, [r7, #4]
 542:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return;
 494              		.loc 1 542 0
 495 0130 00BF     		nop
 543:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 496              		.loc 1 543 0
 497 0132 0C37     		adds	r7, r7, #12
 498              		.cfi_def_cfa_offset 4
 499 0134 BD46     		mov	sp, r7
 500              		.cfi_def_cfa_register 13
 501              		@ sp needed
 502 0136 80BC     		pop	{r7}
 503              		.cfi_restore 7
 504              		.cfi_def_cfa_offset 0
 505 0138 7047     		bx	lr
 506              		.cfi_endproc
 507              	.LFE7:
 509 013a 00BF     		.align	2
 510              		.global	IEEE802154_security_retrieveAuxiliarySecurityHeader
 511              		.thumb
 512              		.thumb_func
 514              	IEEE802154_security_retrieveAuxiliarySecurityHeader:
 515              	.LFB8:
 544:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 545:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** void IEEE802154_security_retrieveAuxiliarySecurityHeader(OpenQueueEntry_t* msg, ieee802154_header_i
 516              		.loc 1 545 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 8
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521 013c 80B4     		push	{r7}
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 7, -4
 524 013e 83B0     		sub	sp, sp, #12
 525              		.cfi_def_cfa_offset 16
 526 0140 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 528 0142 7860     		str	r0, [r7, #4]
 529 0144 3960     		str	r1, [r7]
 546:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return;
 530              		.loc 1 546 0
 531 0146 00BF     		nop
 547:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 532              		.loc 1 547 0
 533 0148 0C37     		adds	r7, r7, #12
 534              		.cfi_def_cfa_offset 4
 535 014a BD46     		mov	sp, r7
 536              		.cfi_def_cfa_register 13
 537              		@ sp needed
 538 014c 80BC     		pop	{r7}
 539              		.cfi_restore 7
 540              		.cfi_def_cfa_offset 0
 541 014e 7047     		bx	lr
 542              		.cfi_endproc
 543              	.LFE8:
 545              		.align	2
 546              		.global	IEEE802154_security_outgoingFrameSecurity
 547              		.thumb
 548              		.thumb_func
 550              	IEEE802154_security_outgoingFrameSecurity:
 551              	.LFB9:
 548:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 549:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** owerror_t IEEE802154_security_outgoingFrameSecurity(OpenQueueEntry_t* msg) {
 552              		.loc 1 549 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 8
 555              		@ frame_needed = 1, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557 0150 80B4     		push	{r7}
 558              		.cfi_def_cfa_offset 4
 559              		.cfi_offset 7, -4
 560 0152 83B0     		sub	sp, sp, #12
 561              		.cfi_def_cfa_offset 16
 562 0154 00AF     		add	r7, sp, #0
 563              		.cfi_def_cfa_register 7
 564 0156 7860     		str	r0, [r7, #4]
 550:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return E_SUCCESS;
 565              		.loc 1 550 0
 566 0158 0023     		movs	r3, #0
 551:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 567              		.loc 1 551 0
 568 015a 1846     		mov	r0, r3
 569 015c 0C37     		adds	r7, r7, #12
 570              		.cfi_def_cfa_offset 4
 571 015e BD46     		mov	sp, r7
 572              		.cfi_def_cfa_register 13
 573              		@ sp needed
 574 0160 80BC     		pop	{r7}
 575              		.cfi_restore 7
 576              		.cfi_def_cfa_offset 0
 577 0162 7047     		bx	lr
 578              		.cfi_endproc
 579              	.LFE9:
 581              		.align	2
 582              		.global	IEEE802154_security_incomingFrame
 583              		.thumb
 584              		.thumb_func
 586              	IEEE802154_security_incomingFrame:
 587              	.LFB10:
 552:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 553:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** owerror_t IEEE802154_security_incomingFrame(OpenQueueEntry_t* msg) {
 588              		.loc 1 553 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 8
 591              		@ frame_needed = 1, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593 0164 80B4     		push	{r7}
 594              		.cfi_def_cfa_offset 4
 595              		.cfi_offset 7, -4
 596 0166 83B0     		sub	sp, sp, #12
 597              		.cfi_def_cfa_offset 16
 598 0168 00AF     		add	r7, sp, #0
 599              		.cfi_def_cfa_register 7
 600 016a 7860     		str	r0, [r7, #4]
 554:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return E_SUCCESS;
 601              		.loc 1 554 0
 602 016c 0023     		movs	r3, #0
 555:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 603              		.loc 1 555 0
 604 016e 1846     		mov	r0, r3
 605 0170 0C37     		adds	r7, r7, #12
 606              		.cfi_def_cfa_offset 4
 607 0172 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0174 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0176 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE10:
 617              		.align	2
 618              		.global	IEEE802154_security_authLengthChecking
 619              		.thumb
 620              		.thumb_func
 622              	IEEE802154_security_authLengthChecking:
 623              	.LFB11:
 556:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 557:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_authLengthChecking(uint8_t sec_level) {
 624              		.loc 1 557 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 8
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 629 0178 80B4     		push	{r7}
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 7, -4
 632 017a 83B0     		sub	sp, sp, #12
 633              		.cfi_def_cfa_offset 16
 634 017c 00AF     		add	r7, sp, #0
 635              		.cfi_def_cfa_register 7
 636 017e 0346     		mov	r3, r0
 637 0180 FB71     		strb	r3, [r7, #7]
 558:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return (uint8_t) 0;
 638              		.loc 1 558 0
 639 0182 0023     		movs	r3, #0
 559:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 640              		.loc 1 559 0
 641 0184 1846     		mov	r0, r3
 642 0186 0C37     		adds	r7, r7, #12
 643              		.cfi_def_cfa_offset 4
 644 0188 BD46     		mov	sp, r7
 645              		.cfi_def_cfa_register 13
 646              		@ sp needed
 647 018a 80BC     		pop	{r7}
 648              		.cfi_restore 7
 649              		.cfi_def_cfa_offset 0
 650 018c 7047     		bx	lr
 651              		.cfi_endproc
 652              	.LFE11:
 654 018e 00BF     		.align	2
 655              		.global	IEEE802154_security_auxLengthChecking
 656              		.thumb
 657              		.thumb_func
 659              	IEEE802154_security_auxLengthChecking:
 660              	.LFB12:
 560:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 561:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_auxLengthChecking(uint8_t kid, uint8_t sup, uint8_t size) {
 661              		.loc 1 561 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 8
 664              		@ frame_needed = 1, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666 0190 80B4     		push	{r7}
 667              		.cfi_def_cfa_offset 4
 668              		.cfi_offset 7, -4
 669 0192 83B0     		sub	sp, sp, #12
 670              		.cfi_def_cfa_offset 16
 671 0194 00AF     		add	r7, sp, #0
 672              		.cfi_def_cfa_register 7
 673 0196 0346     		mov	r3, r0
 674 0198 FB71     		strb	r3, [r7, #7]
 675 019a 0B46     		mov	r3, r1
 676 019c BB71     		strb	r3, [r7, #6]
 677 019e 1346     		mov	r3, r2
 678 01a0 7B71     		strb	r3, [r7, #5]
 562:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return (uint8_t) 0;
 679              		.loc 1 562 0
 680 01a2 0023     		movs	r3, #0
 563:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 681              		.loc 1 563 0
 682 01a4 1846     		mov	r0, r3
 683 01a6 0C37     		adds	r7, r7, #12
 684              		.cfi_def_cfa_offset 4
 685 01a8 BD46     		mov	sp, r7
 686              		.cfi_def_cfa_register 13
 687              		@ sp needed
 688 01aa 80BC     		pop	{r7}
 689              		.cfi_restore 7
 690              		.cfi_def_cfa_offset 0
 691 01ac 7047     		bx	lr
 692              		.cfi_endproc
 693              	.LFE12:
 695 01ae 00BF     		.align	2
 696              		.global	IEEE802154_security_getSecurityLevel
 697              		.thumb
 698              		.thumb_func
 700              	IEEE802154_security_getSecurityLevel:
 701              	.LFB13:
 564:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 565:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** uint8_t IEEE802154_security_getSecurityLevel(OpenQueueEntry_t *msg) {
 702              		.loc 1 565 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 8
 705              		@ frame_needed = 1, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707 01b0 80B4     		push	{r7}
 708              		.cfi_def_cfa_offset 4
 709              		.cfi_offset 7, -4
 710 01b2 83B0     		sub	sp, sp, #12
 711              		.cfi_def_cfa_offset 16
 712 01b4 00AF     		add	r7, sp, #0
 713              		.cfi_def_cfa_register 7
 714 01b6 7860     		str	r0, [r7, #4]
 566:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return IEEE154_ASH_SLF_TYPE_NOSEC;
 715              		.loc 1 566 0
 716 01b8 0023     		movs	r3, #0
 567:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 717              		.loc 1 567 0
 718 01ba 1846     		mov	r0, r3
 719 01bc 0C37     		adds	r7, r7, #12
 720              		.cfi_def_cfa_offset 4
 721 01be BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 01c0 80BC     		pop	{r7}
 725              		.cfi_restore 7
 726              		.cfi_def_cfa_offset 0
 727 01c2 7047     		bx	lr
 728              		.cfi_endproc
 729              	.LFE13:
 731              		.align	2
 732              		.global	IEEE802154_security_acceptableLevel
 733              		.thumb
 734              		.thumb_func
 736              	IEEE802154_security_acceptableLevel:
 737              	.LFB14:
 568:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** 
 569:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** bool IEEE802154_security_acceptableLevel(OpenQueueEntry_t* msg, ieee802154_header_iht* parsedheader
 738              		.loc 1 569 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 8
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 743 01c4 80B4     		push	{r7}
 744              		.cfi_def_cfa_offset 4
 745              		.cfi_offset 7, -4
 746 01c6 83B0     		sub	sp, sp, #12
 747              		.cfi_def_cfa_offset 16
 748 01c8 00AF     		add	r7, sp, #0
 749              		.cfi_def_cfa_register 7
 750 01ca 7860     		str	r0, [r7, #4]
 751 01cc 3960     		str	r1, [r7]
 570:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c ****     return TRUE;
 752              		.loc 1 570 0
 753 01ce 0123     		movs	r3, #1
 571:build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.c **** }
 754              		.loc 1 571 0
 755 01d0 1846     		mov	r0, r3
 756 01d2 0C37     		adds	r7, r7, #12
 757              		.cfi_def_cfa_offset 4
 758 01d4 BD46     		mov	sp, r7
 759              		.cfi_def_cfa_register 13
 760              		@ sp needed
 761 01d6 80BC     		pop	{r7}
 762              		.cfi_restore 7
 763              		.cfi_def_cfa_offset 0
 764 01d8 7047     		bx	lr
 765              		.cfi_endproc
 766              	.LFE14:
 768              	.Letext0:
 769              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 770              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 771              		.file 4 "inc/opendefs.h"
 772              		.file 5 "build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154.h"
 773              		.file 6 "build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154_security.h"
 774              		.file 7 "bsp/boards/openmote-cc2538/board_info.h"
 775              		.file 8 "build/openmote-cc2538_armgcc/openstack/02a-MAClow/IEEE802154E.h"
 776              		.file 9 "openstack/cross-layers/idmanager.h"
 777              		.file 10 "openstack/03b-IPv6/icmpv6rpl.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 IEEE802154_security.c
     /tmp/cc8op9FH.s:20     .rodata:0000000000000000 $d
     /tmp/cc8op9FH.s:23     .rodata:0000000000000000 rreg_uriquery
     /tmp/cc8op9FH.s:28     .rodata:0000000000000008 infoBoardname
     /tmp/cc8op9FH.s:33     .rodata:0000000000000010 infouCName
     /tmp/cc8op9FH.s:38     .rodata:0000000000000018 infoRadioName
     /tmp/cc8op9FH.s:43     .rodata:0000000000000024 infoStackName
     /tmp/cc8op9FH.s:48     .rodata:0000000000000030 chTemplate_default
     /tmp/cc8op9FH.s:68     .rodata:0000000000000040 ebIEsBytestream
     /tmp/cc8op9FH.s:100    .rodata:000000000000005c linklocalprefix
     /tmp/cc8op9FH.s:112    .rodata:0000000000000064 all_routers_multicast
                            *COM*:0000000000000024 ieee802154_security_vars
     /tmp/cc8op9FH.s:131    .text:0000000000000000 $t
     /tmp/cc8op9FH.s:136    .text:0000000000000000 IEEE802154_security_init
     /tmp/cc8op9FH.s:181    .text:0000000000000034 $d
     /tmp/cc8op9FH.s:187    .text:0000000000000040 $t
     /tmp/cc8op9FH.s:192    .text:0000000000000040 IEEE802154_security_getBeaconKeyIndex
     /tmp/cc8op9FH.s:219    .text:0000000000000050 $d
     /tmp/cc8op9FH.s:223    .text:0000000000000054 $t
     /tmp/cc8op9FH.s:228    .text:0000000000000054 IEEE802154_security_getDataKeyIndex
     /tmp/cc8op9FH.s:255    .text:0000000000000064 $d
     /tmp/cc8op9FH.s:259    .text:0000000000000068 $t
     /tmp/cc8op9FH.s:264    .text:0000000000000068 IEEE802154_security_setBeaconKey
     /tmp/cc8op9FH.s:313    .text:000000000000009c $d
     /tmp/cc8op9FH.s:317    .text:00000000000000a0 $t
     /tmp/cc8op9FH.s:322    .text:00000000000000a0 IEEE802154_security_setDataKey
     /tmp/cc8op9FH.s:371    .text:00000000000000d4 $d
     /tmp/cc8op9FH.s:375    .text:00000000000000d8 $t
     /tmp/cc8op9FH.s:380    .text:00000000000000d8 IEEE802154_security_isConfigured
     /tmp/cc8op9FH.s:433    .text:000000000000010c $d
     /tmp/cc8op9FH.s:437    .text:0000000000000110 $t
     /tmp/cc8op9FH.s:442    .text:0000000000000110 IEEE802154_security_setDynamicKeying
     /tmp/cc8op9FH.s:470    .text:0000000000000124 $d
     /tmp/cc8op9FH.s:474    .text:0000000000000128 $t
     /tmp/cc8op9FH.s:479    .text:0000000000000128 IEEE802154_security_prependAuxiliarySecurityHeader
     /tmp/cc8op9FH.s:514    .text:000000000000013c IEEE802154_security_retrieveAuxiliarySecurityHeader
     /tmp/cc8op9FH.s:550    .text:0000000000000150 IEEE802154_security_outgoingFrameSecurity
     /tmp/cc8op9FH.s:586    .text:0000000000000164 IEEE802154_security_incomingFrame
     /tmp/cc8op9FH.s:622    .text:0000000000000178 IEEE802154_security_authLengthChecking
     /tmp/cc8op9FH.s:659    .text:0000000000000190 IEEE802154_security_auxLengthChecking
     /tmp/cc8op9FH.s:700    .text:00000000000001b0 IEEE802154_security_getSecurityLevel
     /tmp/cc8op9FH.s:736    .text:00000000000001c4 IEEE802154_security_acceptableLevel
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.8e445c0106ab795ab4704214cba6f089
                           .group:0000000000000000 wm4._newlib_version.h.4.ad342815780c8db09778091a421b5b5b
                           .group:0000000000000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.b82bf99f69d6a5c085fc866de0d3eb9b
                           .group:0000000000000000 wm4._stdint.h.10.7a5f60e6741af4a5594a3867d347e1f9
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.toolchain_defs.h.2.e5fd326231d01413e5361944b26cde07
                           .group:0000000000000000 wm4.newlib.h.8.36dd0417407b0a085bc04c49cc2ed13a
                           .group:0000000000000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:0000000000000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:0000000000000000 wm4.reent.h.17.850ac0a908956e5fb788be1b80de2f32
                           .group:0000000000000000 wm4.cdefs.h.47.ba62642086d429b4f95c2381cae1c0aa
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.board_info.h.22.1291259c351bc018e4d4402148b3c6db
                           .group:0000000000000000 wm4.opendefs.h.23.47191652995b7fa35f12da40c3552cda
                           .group:0000000000000000 wm4.cryptoengine.h.8.da068b9149b7576990bbc3b5f1e9b415
                           .group:0000000000000000 wm4.IEEE802154.h.2.38fb510ed33a23a9a0660164e6dfab69
                           .group:0000000000000000 wm4.opentimers.h.8.4ddb88466c5d61beaa6758270059ffcf
                           .group:0000000000000000 wm4.schedule.h.2.f2fa95bbe9ed29a9f7520419b69ab7c7
                           .group:0000000000000000 wm4.IEEE802154E.h.31.271a7efed26b0cf3ba6fc5c3c902092c
                           .group:0000000000000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe
                           .group:0000000000000000 wm4.openserial.h.9.80102eae1ecef6075819c4ea201ac3a9
                           .group:0000000000000000 wm4.icmpv6rpl.h.2.f00b74af734e37e670811ca7fb590996
                           .group:0000000000000000 wm4.neighbors.h.15.fcaa645de5cf4f9d77d36838589f9838
                           .group:0000000000000000 wm4.IEEE802154_security.h.12.01376db633007f86cc7c78f3ee4cf764

UNDEFINED SYMBOLS
memset
