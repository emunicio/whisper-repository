   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ccm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	CCMAuthEncryptStart
  21              		.thumb
  22              		.thumb_func
  24              	CCMAuthEncryptStart:
  25              	.LFB0:
  26              		.file 1 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c"
   1:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** /******************************************************************************
   2:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  Filename:       ccm.c
   3:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  Revised:        $Date: 2013-03-22 16:13:31 +0100 (Fri, 22 Mar 2013) $
   4:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  Revision:       $Revision: 9513 $
   5:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *
   6:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  Description:    Support for Hardware CCM encryption and authentication.
   7:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *
   8:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
   9:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *
  10:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *
  11:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  Redistribution and use in source and binary forms, with or without
  12:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  modification, are permitted provided that the following conditions
  13:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  are met:
  14:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *
  15:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *    Redistributions of source code must retain the above copyright
  16:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *    notice, this list of conditions and the following disclaimer.
  17:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *
  18:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *    Redistributions in binary form must reproduce the above copyright
  19:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *    notice, this list of conditions and the following disclaimer in the
  20:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *    documentation and/or other materials provided with the distribution.
  21:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *
  22:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *    Neither the name of Texas Instruments Incorporated nor the names of
  23:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *    its contributors may be used to endorse or promote products derived
  24:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *    from this software without specific prior written permission.
  25:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *
  26:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  27:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  28:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  29:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  30:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  31:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  32:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  33:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  34:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  35:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** *
  38:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** ******************************************************************************/
  39:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
  40:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
  41:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
  42:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \addtogroup ccm_api
  43:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! @{
  44:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
  45:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
  46:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
  47:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** #include "aes.h"
  48:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** #include "ccm.h"
  49:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
  50:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
  51:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
  52:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
  53:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! CCMAuthEncryptStart starts the CCM operation
  54:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
  55:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param bEncrypt if set to 'true' then run encryption and set to 'false' for
  56:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! authentication only.
  57:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param ui8Mval is the length of authentication field in octets [0,2,4,6,8,10,
  58:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! 12, 14 or 16].
  59:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  pui8N is the pointer to 13-byte or 12-byte Nonce.
  60:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  pui8M  is the pointer to octet string 'm'/input message.
  61:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  ui16LenM is the length of pui8M[] in octets.
  62:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  pui8A is the pointer to octet string 'a'.
  63:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  ui16LenA is the Length of pui8A[] in octets.
  64:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  ui8KeyLocation is the location where the Key is stored in Key RAM.
  65:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  pui8Cstate is the pointer to output buffer.
  66:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  ui8CCMLVal is the ccm L Value to be used.
  67:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  ui8IntEnable if set to 'true' to enable interrupts or 'false' to
  68:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! disable interrupts.  Should be 'false' if \e bEncrypt is set to 'false'.
  69:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
  70:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
  71:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! The function will place in \e pui8Cstate the first ui8Mval bytes
  72:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! containing the Authentication Tag.
  73:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
  74:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! The \e ui8KeyLocation parameter is an enumerated type which specifies
  75:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! the Key Ram location in which the key is stored.
  76:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! This parameter can have any of the following values:
  77:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
  78:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_0
  79:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_1
  80:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_2,
  81:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_3,
  82:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_4,
  83:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_5,
  84:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_6,
  85:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_7
  86:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
  87:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \return  AES_SUCCESS if successful.
  88:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
  89:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
  90:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** uint8_t CCMAuthEncryptStart(bool bEncrypt,
  91:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                             uint8_t ui8Mval,
  92:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                             uint8_t *pui8N,
  93:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                             uint8_t *pui8M,
  94:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                             uint16_t ui16LenM,
  95:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                             uint8_t *pui8A,
  96:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                             uint16_t ui16LenA,
  97:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                             uint8_t ui8KeyLocation,
  98:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                             uint8_t *pui8Cstate,
  99:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                             uint8_t ui8CCMLVal,
 100:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                             uint8_t ui8IntEnable)
 101:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** {
  27              		.loc 1 101 0
  28              		.cfi_startproc
  29              		@ args = 28, pretend = 0, frame = 40
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 8AB0     		sub	sp, sp, #40
  36              		.cfi_def_cfa_offset 48
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 BA60     		str	r2, [r7, #8]
  40 0008 7B60     		str	r3, [r7, #4]
  41 000a 0346     		mov	r3, r0
  42 000c FB73     		strb	r3, [r7, #15]
  43 000e 0B46     		mov	r3, r1
  44 0010 BB73     		strb	r3, [r7, #14]
 102:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint8_t  ui8A0[16];
 103:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint32_t ui32CtrlVal;
 104:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint8_t  ui8I;
 105:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     g_ui8CurrentAESOp = AES_CCM;
  45              		.loc 1 105 0
  46 0012 704B     		ldr	r3, .L15
  47 0014 0322     		movs	r2, #3
  48 0016 1A70     		strb	r2, [r3]
 106:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 107:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     IntDisable(INT_AES);
  49              		.loc 1 107 0
  50 0018 9F20     		movs	r0, #159
  51 001a FFF7FEFF 		bl	IntDisable
 108:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 109:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // workaround for AES registers not retained after PM2
 110:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CFG) = AES_CTRL_INT_CFG_LEVEL;
  52              		.loc 1 110 0
  53 001e 6E4B     		ldr	r3, .L15+4
  54 0020 0122     		movs	r2, #1
  55 0022 1A60     		str	r2, [r3]
 111:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_EN) = (AES_CTRL_INT_EN_RESULT_AV |
  56              		.loc 1 111 0
  57 0024 6D4B     		ldr	r3, .L15+8
  58 0026 0322     		movs	r2, #3
  59 0028 1A60     		str	r2, [r3]
 112:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                               AES_CTRL_INT_EN_DMA_IN_DONE);
 113:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 114:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_ALG_SEL) = AES_CTRL_ALG_SEL_AES;
  60              		.loc 1 114 0
  61 002a 6D4B     		ldr	r3, .L15+12
  62 002c 0222     		movs	r2, #2
  63 002e 1A60     		str	r2, [r3]
 115:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) |= (AES_CTRL_INT_CLR_DMA_IN_DONE |
  64              		.loc 1 115 0
  65 0030 6C4A     		ldr	r2, .L15+16
  66 0032 6C4B     		ldr	r3, .L15+16
  67 0034 1B68     		ldr	r3, [r3]
  68 0036 43F00303 		orr	r3, r3, #3
  69 003a 1360     		str	r3, [r2]
 116:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                 AES_CTRL_INT_CLR_RESULT_AV);
 117:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 118:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_KEY_STORE_READ_AREA) = (uint32_t)ui8KeyLocation;
  70              		.loc 1 118 0
  71 003c 6A4A     		ldr	r2, .L15+20
  72 003e 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
  73 0042 1360     		str	r3, [r2]
  74              	.L2:
 119:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 120:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     //wait until key is loaded to the AES module
 121:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     do
 122:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 123:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ASM_NOP;
  75              		.loc 1 123 0 discriminator 1
  76              		.syntax unified
  77              	@ 123 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c" 1
  78 0044 00BF     		NOP
  79              	@ 0 "" 2
 124:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 125:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     while((HWREG(AES_KEY_STORE_READ_AREA) & AES_KEY_STORE_READ_AREA_BUSY));
  80              		.loc 1 125 0 discriminator 1
  81              		.thumb
  82              		.syntax unified
  83 0046 684B     		ldr	r3, .L15+20
  84 0048 1B68     		ldr	r3, [r3]
  85 004a 002B     		cmp	r3, #0
  86 004c FADB     		blt	.L2
 126:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 127:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     //check for Key Store read error
 128:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT)& AES_CTRL_INT_STAT_KEY_ST_RD_ERR))
  87              		.loc 1 128 0
  88 004e 674B     		ldr	r3, .L15+24
  89 0050 1B68     		ldr	r3, [r3]
  90 0052 03F00053 		and	r3, r3, #536870912
  91 0056 002B     		cmp	r3, #0
  92 0058 07D0     		beq	.L3
 129:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 130:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // clear the Keystore Read error bit
 131:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_RD_ERR;
  93              		.loc 1 131 0
  94 005a 624A     		ldr	r2, .L15+16
  95 005c 614B     		ldr	r3, .L15+16
  96 005e 1B68     		ldr	r3, [r3]
  97 0060 43F00053 		orr	r3, r3, #536870912
  98 0064 1360     		str	r3, [r2]
 132:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         return (AES_KEYSTORE_READ_ERROR);
  99              		.loc 1 132 0
 100 0066 0123     		movs	r3, #1
 101 0068 AFE0     		b	.L14
 102              	.L3:
 133:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 134:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 135:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // Prepare the initialization vector
 136:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui8A0[0] = ui8CCMLVal - 1;  // Lval
 103              		.loc 1 136 0
 104 006a 97F84430 		ldrb	r3, [r7, #68]
 105 006e 013B     		subs	r3, r3, #1
 106 0070 DBB2     		uxtb	r3, r3
 107 0072 3B74     		strb	r3, [r7, #16]
 137:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 138:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     for(ui8I = 0; ui8I < 13; ui8I++)
 108              		.loc 1 138 0
 109 0074 0023     		movs	r3, #0
 110 0076 87F82330 		strb	r3, [r7, #35]
 111 007a 11E0     		b	.L5
 112              	.L6:
 139:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 140:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ui8A0[ui8I + 1] = pui8N[ui8I];
 113              		.loc 1 140 0 discriminator 3
 114 007c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 115 0080 0133     		adds	r3, r3, #1
 116 0082 97F82320 		ldrb	r2, [r7, #35]	@ zero_extendqisi2
 117 0086 B968     		ldr	r1, [r7, #8]
 118 0088 0A44     		add	r2, r2, r1
 119 008a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 120 008c 07F12801 		add	r1, r7, #40
 121 0090 0B44     		add	r3, r3, r1
 122 0092 03F8182C 		strb	r2, [r3, #-24]
 138:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 123              		.loc 1 138 0 discriminator 3
 124 0096 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 125 009a 0133     		adds	r3, r3, #1
 126 009c 87F82330 		strb	r3, [r7, #35]
 127              	.L5:
 138:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 128              		.loc 1 138 0 is_stmt 0 discriminator 1
 129 00a0 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 130 00a4 0C2B     		cmp	r3, #12
 131 00a6 E9D9     		bls	.L6
 141:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 142:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if(3 == ui8CCMLVal)
 132              		.loc 1 142 0 is_stmt 1
 133 00a8 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 134 00ac 032B     		cmp	r3, #3
 135 00ae 01D1     		bne	.L7
 143:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 144:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ui8A0[13] = 0;
 136              		.loc 1 144 0
 137 00b0 0023     		movs	r3, #0
 138 00b2 7B77     		strb	r3, [r7, #29]
 139              	.L7:
 145:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 146:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui8A0[14] = 0;  // initialize counter to 0
 140              		.loc 1 146 0
 141 00b4 0023     		movs	r3, #0
 142 00b6 BB77     		strb	r3, [r7, #30]
 147:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui8A0[15] = 0;  // initialize counter to 0
 143              		.loc 1 147 0
 144 00b8 0023     		movs	r3, #0
 145 00ba FB77     		strb	r3, [r7, #31]
 148:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 149:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // write initialization vector
 150:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_IV_0) = ((uint32_t  *)&ui8A0)[0];
 146              		.loc 1 150 0
 147 00bc 4C4A     		ldr	r2, .L15+28
 148 00be 07F11003 		add	r3, r7, #16
 149 00c2 1B68     		ldr	r3, [r3]
 150 00c4 1360     		str	r3, [r2]
 151:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_IV_1) = ((uint32_t  *)&ui8A0)[1];
 151              		.loc 1 151 0
 152 00c6 4B4A     		ldr	r2, .L15+32
 153 00c8 7B69     		ldr	r3, [r7, #20]
 154 00ca 1360     		str	r3, [r2]
 152:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_IV_2) = ((uint32_t  *)&ui8A0)[2];
 155              		.loc 1 152 0
 156 00cc 4A4A     		ldr	r2, .L15+36
 157 00ce BB69     		ldr	r3, [r7, #24]
 158 00d0 1360     		str	r3, [r2]
 153:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_IV_3) = ((uint32_t  *)&ui8A0)[3];
 159              		.loc 1 153 0
 160 00d2 4A4A     		ldr	r2, .L15+40
 161 00d4 FB69     		ldr	r3, [r7, #28]
 162 00d6 1360     		str	r3, [r2]
 154:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 155:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // configure AES engine
 156:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal = ((ui8CCMLVal - 1) <<
 163              		.loc 1 156 0
 164 00d8 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 165 00dc 013B     		subs	r3, r3, #1
 166 00de DB04     		lsls	r3, r3, #19
 167 00e0 7B62     		str	r3, [r7, #36]
 157:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                    AES_AES_CTRL_CCM_L_S);            // CCM_L
 158:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 159:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if(ui8Mval >= 2)
 168              		.loc 1 159 0
 169 00e2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 170 00e4 012B     		cmp	r3, #1
 171 00e6 07D9     		bls	.L9
 160:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 161:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ui32CtrlVal |= (((ui8Mval - 2) >> 1) <<
 172              		.loc 1 161 0
 173 00e8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 174 00ea 023B     		subs	r3, r3, #2
 175 00ec 5B10     		asrs	r3, r3, #1
 176 00ee 9B05     		lsls	r3, r3, #22
 177 00f0 1A46     		mov	r2, r3
 178 00f2 7B6A     		ldr	r3, [r7, #36]
 179 00f4 1343     		orrs	r3, r3, r2
 180 00f6 7B62     		str	r3, [r7, #36]
 181              	.L9:
 162:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                         AES_AES_CTRL_CCM_M_S);           // CCM_M
 163:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 164:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     else
 165:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 166:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ui32CtrlVal |= (0 <<
 167:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                         AES_AES_CTRL_CCM_M_S);           // CCM_M
 168:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 169:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= (AES_AES_CTRL_CCM);               // CCM
 182              		.loc 1 169 0
 183 00f8 7B6A     		ldr	r3, [r7, #36]
 184 00fa 43F48023 		orr	r3, r3, #262144
 185 00fe 7B62     		str	r3, [r7, #36]
 170:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= (1 << AES_AES_CTRL_key_size_S);   // key = 128
 186              		.loc 1 170 0
 187 0100 7B6A     		ldr	r3, [r7, #36]
 188 0102 43F00803 		orr	r3, r3, #8
 189 0106 7B62     		str	r3, [r7, #36]
 171:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= (1 << AES_AES_CTRL_input_ready);  // encryption
 190              		.loc 1 171 0
 191 0108 7B6A     		ldr	r3, [r7, #36]
 192 010a 43F00403 		orr	r3, r3, #4
 193 010e 7B62     		str	r3, [r7, #36]
 172:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= AES_AES_CTRL_CTR;                 // CTR
 194              		.loc 1 172 0
 195 0110 7B6A     		ldr	r3, [r7, #36]
 196 0112 43F04003 		orr	r3, r3, #64
 197 0116 7B62     		str	r3, [r7, #36]
 173:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= AES_AES_CTRL_save_context;        // save context
 198              		.loc 1 173 0
 199 0118 7B6A     		ldr	r3, [r7, #36]
 200 011a 43F00053 		orr	r3, r3, #536870912
 201 011e 7B62     		str	r3, [r7, #36]
 174:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= (0x3 << AES_AES_CTRL_ctr_width_S);// CTR width 128
 202              		.loc 1 174 0
 203 0120 7B6A     		ldr	r3, [r7, #36]
 204 0122 43F4C073 		orr	r3, r3, #384
 205 0126 7B62     		str	r3, [r7, #36]
 175:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // program AES-CCM-128 encryption
 176:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_CTRL) = ui32CtrlVal;
 206              		.loc 1 176 0
 207 0128 354A     		ldr	r2, .L15+44
 208 012a 7B6A     		ldr	r3, [r7, #36]
 209 012c 1360     		str	r3, [r2]
 177:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 178:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // write the length of the crypto block (lo)
 179:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_C_LENGTH_0) = (uint16_t)(ui16LenM) ;
 210              		.loc 1 179 0
 211 012e 354A     		ldr	r2, .L15+48
 212 0130 3B8E     		ldrh	r3, [r7, #48]
 213 0132 1360     		str	r3, [r2]
 180:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // write the length of the crypto block (hi)
 181:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_C_LENGTH_1)  =  0;
 214              		.loc 1 181 0
 215 0134 344B     		ldr	r3, .L15+52
 216 0136 0022     		movs	r2, #0
 217 0138 1A60     		str	r2, [r3]
 182:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 183:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // write the length of the AAD data block may be non-block size aligned
 184:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_AUTH_LENGTH) = ui16LenA;
 218              		.loc 1 184 0
 219 013a 344A     		ldr	r2, .L15+56
 220 013c 3B8F     		ldrh	r3, [r7, #56]
 221 013e 1360     		str	r3, [r2]
 185:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 186:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if(ui16LenA != 0)
 222              		.loc 1 186 0
 223 0140 3B8F     		ldrh	r3, [r7, #56]
 224 0142 002B     		cmp	r3, #0
 225 0144 1BD0     		beq	.L10
 187:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 188:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // configure DMAC to fetch the AAD data
 189:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // enable DMA channel 0
 190:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_CTRL)     = AES_DMAC_CH0_CTRL_EN;
 226              		.loc 1 190 0
 227 0146 324B     		ldr	r3, .L15+60
 228 0148 0122     		movs	r2, #1
 229 014a 1A60     		str	r2, [r3]
 191:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // base address of the AAD input data in ext. memory
 192:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_EXTADDR)  = (uint32_t)pui8A;
 230              		.loc 1 192 0
 231 014c 314A     		ldr	r2, .L15+64
 232 014e 7B6B     		ldr	r3, [r7, #52]
 233 0150 1360     		str	r3, [r2]
 193:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // AAD data length in bytes, equal to the AAD length len
 194:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         //({aad data}) (may be non-block size aligned)
 195:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 196:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_DMALENGTH) = ui16LenA;
 234              		.loc 1 196 0
 235 0152 314A     		ldr	r2, .L15+68
 236 0154 3B8F     		ldrh	r3, [r7, #56]
 237 0156 1360     		str	r3, [r2]
 238              	.L11:
 197:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 198:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // wait for completion of the AAD data transfer, DMA_IN_DONE
 199:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         do
 200:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         {
 201:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             ASM_NOP;
 239              		.loc 1 201 0 discriminator 1
 240              		.syntax unified
 241              	@ 201 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c" 1
 242 0158 00BF     		NOP
 243              	@ 0 "" 2
 202:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         }
 203:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         while(!(HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_IN_DONE));
 244              		.loc 1 203 0 discriminator 1
 245              		.thumb
 246              		.syntax unified
 247 015a 244B     		ldr	r3, .L15+24
 248 015c 1B68     		ldr	r3, [r3]
 249 015e 03F00203 		and	r3, r3, #2
 250 0162 002B     		cmp	r3, #0
 251 0164 F8D0     		beq	.L11
 204:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 205:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // check for the absence of error
 206:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR))
 252              		.loc 1 206 0
 253 0166 214B     		ldr	r3, .L15+24
 254 0168 1B68     		ldr	r3, [r3]
 255 016a 002B     		cmp	r3, #0
 256 016c 07DA     		bge	.L10
 207:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         {
 208:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             //clear the DMA error
 209:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_DMA_BUS_ERR;
 257              		.loc 1 209 0
 258 016e 1D4A     		ldr	r2, .L15+16
 259 0170 1C4B     		ldr	r3, .L15+16
 260 0172 1B68     		ldr	r3, [r3]
 261 0174 43F00043 		orr	r3, r3, #-2147483648
 262 0178 1360     		str	r3, [r2]
 210:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             return (AES_DMA_BUS_ERROR);
 263              		.loc 1 210 0
 264 017a 0323     		movs	r3, #3
 265 017c 25E0     		b	.L14
 266              	.L10:
 211:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         }
 212:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 213:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 214:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // clear interrupt status
 215:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) = (AES_CTRL_INT_CLR_DMA_IN_DONE |
 267              		.loc 1 215 0
 268 017e 194B     		ldr	r3, .L15+16
 269 0180 0322     		movs	r2, #3
 270 0182 1A60     		str	r2, [r3]
 216:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                AES_CTRL_INT_CLR_RESULT_AV);
 217:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if(ui8IntEnable)
 271              		.loc 1 217 0
 272 0184 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 273 0188 002B     		cmp	r3, #0
 274 018a 05D0     		beq	.L12
 218:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 219:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         IntPendClear(INT_AES);
 275              		.loc 1 219 0
 276 018c 9F20     		movs	r0, #159
 277 018e FFF7FEFF 		bl	IntPendClear
 220:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         IntEnable(INT_AES);
 278              		.loc 1 220 0
 279 0192 9F20     		movs	r0, #159
 280 0194 FFF7FEFF 		bl	IntEnable
 281              	.L12:
 221:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 222:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 223:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // enable result available bit in interrupt enable
 224:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_EN) = AES_CTRL_INT_EN_RESULT_AV;
 282              		.loc 1 224 0
 283 0198 104B     		ldr	r3, .L15+8
 284 019a 0122     		movs	r2, #1
 285 019c 1A60     		str	r2, [r3]
 225:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 226:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if(bEncrypt)
 286              		.loc 1 226 0
 287 019e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 288 01a0 002B     		cmp	r3, #0
 289 01a2 11D0     		beq	.L13
 227:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 228:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // configure DMAC
 229:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // enable DMA channel 0
 230:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_CTRL) = AES_DMAC_CH0_CTRL_EN;
 290              		.loc 1 230 0
 291 01a4 1A4B     		ldr	r3, .L15+60
 292 01a6 0122     		movs	r2, #1
 293 01a8 1A60     		str	r2, [r3]
 231:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // base address of the payload data in ext. memory
 232:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_EXTADDR) = (uint32_t)pui8M;
 294              		.loc 1 232 0
 295 01aa 1A4A     		ldr	r2, .L15+64
 296 01ac 7B68     		ldr	r3, [r7, #4]
 297 01ae 1360     		str	r3, [r2]
 233:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // payload data length in bytes, equal to the message length
 234:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         //len({crypto_data})
 235:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_DMALENGTH) = (ui16LenM);
 298              		.loc 1 235 0
 299 01b0 194A     		ldr	r2, .L15+68
 300 01b2 3B8E     		ldrh	r3, [r7, #48]
 301 01b4 1360     		str	r3, [r2]
 236:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 237:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // enable DMA channel 1
 238:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_CTRL) = AES_DMAC_CH1_CTRL_EN;
 302              		.loc 1 238 0
 303 01b6 194B     		ldr	r3, .L15+72
 304 01b8 0122     		movs	r2, #1
 305 01ba 1A60     		str	r2, [r3]
 239:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // base address of the output data buffer
 240:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_EXTADDR) = (uint32_t)pui8M;
 306              		.loc 1 240 0
 307 01bc 184A     		ldr	r2, .L15+76
 308 01be 7B68     		ldr	r3, [r7, #4]
 309 01c0 1360     		str	r3, [r2]
 241:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // output data length in bytes, equal to the result data length
 242:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // len({crypto data})
 243:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_DMALENGTH) = ui16LenM;
 310              		.loc 1 243 0
 311 01c2 184A     		ldr	r2, .L15+80
 312 01c4 3B8E     		ldrh	r3, [r7, #48]
 313 01c6 1360     		str	r3, [r2]
 314              	.L13:
 244:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 245:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     return (AES_SUCCESS);
 315              		.loc 1 245 0
 316 01c8 0023     		movs	r3, #0
 317              	.L14:
 246:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 247:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** }
 318              		.loc 1 247 0 discriminator 1
 319 01ca 1846     		mov	r0, r3
 320 01cc 2837     		adds	r7, r7, #40
 321              		.cfi_def_cfa_offset 8
 322 01ce BD46     		mov	sp, r7
 323              		.cfi_def_cfa_register 13
 324              		@ sp needed
 325 01d0 80BD     		pop	{r7, pc}
 326              	.L16:
 327 01d2 00BF     		.align	2
 328              	.L15:
 329 01d4 00000000 		.word	g_ui8CurrentAESOp
 330 01d8 80B70840 		.word	1074313088
 331 01dc 84B70840 		.word	1074313092
 332 01e0 00B70840 		.word	1074312960
 333 01e4 88B70840 		.word	1074313096
 334 01e8 0CB40840 		.word	1074312204
 335 01ec 90B70840 		.word	1074313104
 336 01f0 40B50840 		.word	1074312512
 337 01f4 44B50840 		.word	1074312516
 338 01f8 48B50840 		.word	1074312520
 339 01fc 4CB50840 		.word	1074312524
 340 0200 50B50840 		.word	1074312528
 341 0204 54B50840 		.word	1074312532
 342 0208 58B50840 		.word	1074312536
 343 020c 5CB50840 		.word	1074312540
 344 0210 00B00840 		.word	1074311168
 345 0214 04B00840 		.word	1074311172
 346 0218 0CB00840 		.word	1074311180
 347 021c 20B00840 		.word	1074311200
 348 0220 24B00840 		.word	1074311204
 349 0224 2CB00840 		.word	1074311212
 350              		.cfi_endproc
 351              	.LFE0:
 353              		.align	2
 354              		.global	CCMAuthEncryptCheckResult
 355              		.thumb
 356              		.thumb_func
 358              	CCMAuthEncryptCheckResult:
 359              	.LFB1:
 248:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 249:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
 250:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
 251:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! CCMAuthEncryptCheckResult checks the status of CCM encrypt operation.
 252:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 253:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \return  if result is available or error occurs, function returns true.  
 254:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! If result is not yet available or no error occurs, returns false
 255:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 256:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
 257:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
 258:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** uint8_t CCMAuthEncryptCheckResult(void)
 259:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** {
 360              		.loc 1 259 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 1, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 365 0228 80B4     		push	{r7}
 366              		.cfi_def_cfa_offset 4
 367              		.cfi_offset 7, -4
 368 022a 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 260:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     return (((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_RESULT_AV)) ||
 370              		.loc 1 260 0
 371 022c 0F4B     		ldr	r3, .L22
 372 022e 1B78     		ldrb	r3, [r3]
 373 0230 DBB2     		uxtb	r3, r3
 374 0232 03F00103 		and	r3, r3, #1
 261:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR)) ||
 262:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_WR_ERR)) ||
 375              		.loc 1 262 0
 376 0236 002B     		cmp	r3, #0
 377 0238 0FD1     		bne	.L18
 261:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR)) ||
 378              		.loc 1 261 0
 379 023a 0C4B     		ldr	r3, .L22
 380 023c 1B78     		ldrb	r3, [r3]
 381              		.loc 1 262 0
 382 023e 0B4B     		ldr	r3, .L22
 383 0240 1B78     		ldrb	r3, [r3]
 384 0242 DBB2     		uxtb	r3, r3
 385 0244 03F08043 		and	r3, r3, #1073741824
 261:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR)) ||
 386              		.loc 1 261 0
 387 0248 002B     		cmp	r3, #0
 388 024a 06D1     		bne	.L18
 263:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR)));
 389              		.loc 1 263 0 discriminator 2
 390 024c 074B     		ldr	r3, .L22
 391 024e 1B78     		ldrb	r3, [r3]
 392 0250 DBB2     		uxtb	r3, r3
 393 0252 03F00053 		and	r3, r3, #536870912
 262:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR)));
 394              		.loc 1 262 0 discriminator 2
 395 0256 002B     		cmp	r3, #0
 396 0258 01D0     		beq	.L19
 397              	.L18:
 262:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR)));
 398              		.loc 1 262 0 is_stmt 0 discriminator 1
 399 025a 0123     		movs	r3, #1
 400 025c 00E0     		b	.L20
 401              	.L19:
 262:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR)));
 402              		.loc 1 262 0 discriminator 3
 403 025e 0023     		movs	r3, #0
 404              	.L20:
 260:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR)) ||
 405              		.loc 1 260 0 is_stmt 1
 406 0260 DBB2     		uxtb	r3, r3
 264:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** }
 407              		.loc 1 264 0
 408 0262 1846     		mov	r0, r3
 409 0264 BD46     		mov	sp, r7
 410              		.cfi_def_cfa_register 13
 411              		@ sp needed
 412 0266 80BC     		pop	{r7}
 413              		.cfi_restore 7
 414              		.cfi_def_cfa_offset 0
 415 0268 7047     		bx	lr
 416              	.L23:
 417 026a 00BF     		.align	2
 418              	.L22:
 419 026c 90B70840 		.word	1074313104
 420              		.cfi_endproc
 421              	.LFE1:
 423              		.align	2
 424              		.global	CCMAuthEncryptGetResult
 425              		.thumb
 426              		.thumb_func
 428              	CCMAuthEncryptGetResult:
 429              	.LFB2:
 265:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 266:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
 267:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
 268:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! CCMAuthEncryptGetResult gets the result of CCM operation.  This
 269:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! function should be called after CCCMAuthEncryptStart is called.
 270:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 271:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param ui8Mval is length of authentication field in octets [0,2,4,6,8,10,12,
 272:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!  14 or 16].
 273:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param ui16LenM  is length of message pui8M[] in octets.
 274:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param pui8Cstate is pointer to AES state buffer.
 275:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 276:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \return  AES_SUCCESS if successful.
 277:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
 278:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
 279:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** uint8_t CCMAuthEncryptGetResult(uint8_t ui8Mval,
 280:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                 uint16_t ui16LenM,
 281:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                 uint8_t *pui8Cstate)
 282:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 283:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** {
 430              		.loc 1 283 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 32
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434 0270 80B5     		push	{r7, lr}
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0272 88B0     		sub	sp, sp, #32
 439              		.cfi_def_cfa_offset 40
 440 0274 00AF     		add	r7, sp, #0
 441              		.cfi_def_cfa_register 7
 442 0276 0346     		mov	r3, r0
 443 0278 3A60     		str	r2, [r7]
 444 027a FB71     		strb	r3, [r7, #7]
 445 027c 0B46     		mov	r3, r1	@ movhi
 446 027e BB80     		strh	r3, [r7, #4]	@ movhi
 284:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint8_t volatile ui8MIC[16];
 285:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint8_t ui8I;
 286:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 287:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR))
 447              		.loc 1 287 0
 448 0280 374B     		ldr	r3, .L32
 449 0282 1B68     		ldr	r3, [r3]
 450 0284 002B     		cmp	r3, #0
 451 0286 07DA     		bge	.L25
 288:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 289:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // clear the DMA error bit
 290:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_DMA_BUS_ERR;
 452              		.loc 1 290 0
 453 0288 364A     		ldr	r2, .L32+4
 454 028a 364B     		ldr	r3, .L32+4
 455 028c 1B68     		ldr	r3, [r3]
 456 028e 43F00043 		orr	r3, r3, #-2147483648
 457 0292 1360     		str	r3, [r2]
 291:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         return (AES_DMA_BUS_ERROR);
 458              		.loc 1 291 0
 459 0294 0323     		movs	r3, #3
 460 0296 5EE0     		b	.L26
 461              	.L25:
 292:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 293:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_WR_ERR))
 462              		.loc 1 293 0
 463 0298 314B     		ldr	r3, .L32
 464 029a 1B68     		ldr	r3, [r3]
 465 029c 03F08043 		and	r3, r3, #1073741824
 466 02a0 002B     		cmp	r3, #0
 467 02a2 07D0     		beq	.L27
 294:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 295:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // clear the Key Store Write error bit
 296:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_WR_ERR;
 468              		.loc 1 296 0
 469 02a4 2F4A     		ldr	r2, .L32+4
 470 02a6 2F4B     		ldr	r3, .L32+4
 471 02a8 1B68     		ldr	r3, [r3]
 472 02aa 43F08043 		orr	r3, r3, #1073741824
 473 02ae 1360     		str	r3, [r2]
 297:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         return (AES_KEYSTORE_WRITE_ERROR);
 474              		.loc 1 297 0
 475 02b0 0223     		movs	r3, #2
 476 02b2 50E0     		b	.L26
 477              	.L27:
 298:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 299:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR))
 478              		.loc 1 299 0
 479 02b4 2A4B     		ldr	r3, .L32
 480 02b6 1B68     		ldr	r3, [r3]
 481 02b8 03F00053 		and	r3, r3, #536870912
 482 02bc 002B     		cmp	r3, #0
 483 02be 07D0     		beq	.L28
 300:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 301:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // clear the Key Store Read error bit
 302:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_RD_ERR;
 484              		.loc 1 302 0
 485 02c0 284A     		ldr	r2, .L32+4
 486 02c2 284B     		ldr	r3, .L32+4
 487 02c4 1B68     		ldr	r3, [r3]
 488 02c6 43F00053 		orr	r3, r3, #536870912
 489 02ca 1360     		str	r3, [r2]
 303:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         return (AES_KEYSTORE_READ_ERROR);
 490              		.loc 1 303 0
 491 02cc 0123     		movs	r3, #1
 492 02ce 42E0     		b	.L26
 493              	.L28:
 304:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 305:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 306:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     IntDisable(INT_AES);
 494              		.loc 1 306 0
 495 02d0 9F20     		movs	r0, #159
 496 02d2 FFF7FEFF 		bl	IntDisable
 307:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 308:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // disable the master control/DMA clock
 309:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_ALG_SEL) = 0x00000000;
 497              		.loc 1 309 0
 498 02d6 244B     		ldr	r3, .L32+8
 499 02d8 0022     		movs	r2, #0
 500 02da 1A60     		str	r2, [r3]
 501              	.L29:
 310:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 311:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // read tag
 312:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // wait for the context ready bit [30]
 313:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     do
 314:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 315:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ASM_NOP;
 502              		.loc 1 315 0 discriminator 1
 503              		.syntax unified
 504              	@ 315 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c" 1
 505 02dc 00BF     		NOP
 506              	@ 0 "" 2
 316:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 317:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     while((HWREG(AES_AES_CTRL) & AES_AES_CTRL_saved_context_ready) !=
 507              		.loc 1 317 0 discriminator 1
 508              		.thumb
 509              		.syntax unified
 510 02de 234B     		ldr	r3, .L32+12
 511 02e0 1B68     		ldr	r3, [r3]
 512 02e2 03F08043 		and	r3, r3, #1073741824
 318:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             AES_AES_CTRL_saved_context_ready);
 513              		.loc 1 318 0 discriminator 1
 514 02e6 002B     		cmp	r3, #0
 515 02e8 F8D0     		beq	.L29
 319:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 320:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // Read the tag registers
 321:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[0] = HWREG(AES_AES_TAG_OUT_0);
 516              		.loc 1 321 0
 517 02ea 07F10C03 		add	r3, r7, #12
 518 02ee 204A     		ldr	r2, .L32+16
 519 02f0 1268     		ldr	r2, [r2]
 520 02f2 1A60     		str	r2, [r3]
 322:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[1] = HWREG(AES_AES_TAG_OUT_1);
 521              		.loc 1 322 0
 522 02f4 07F10C03 		add	r3, r7, #12
 523 02f8 0433     		adds	r3, r3, #4
 524 02fa 1E4A     		ldr	r2, .L32+20
 525 02fc 1268     		ldr	r2, [r2]
 526 02fe 1A60     		str	r2, [r3]
 323:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[2] = HWREG(AES_AES_TAG_OUT_2);
 527              		.loc 1 323 0
 528 0300 07F10C03 		add	r3, r7, #12
 529 0304 0833     		adds	r3, r3, #8
 530 0306 1C4A     		ldr	r2, .L32+24
 531 0308 1268     		ldr	r2, [r2]
 532 030a 1A60     		str	r2, [r3]
 324:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[3] = HWREG(AES_AES_TAG_OUT_3);
 533              		.loc 1 324 0
 534 030c 07F10C03 		add	r3, r7, #12
 535 0310 0C33     		adds	r3, r3, #12
 536 0312 1A4A     		ldr	r2, .L32+28
 537 0314 1268     		ldr	r2, [r2]
 538 0316 1A60     		str	r2, [r3]
 325:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 326:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // clear the interrupt status
 327:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) |= (AES_CTRL_INT_CLR_DMA_IN_DONE |
 539              		.loc 1 327 0
 540 0318 124A     		ldr	r2, .L32+4
 541 031a 124B     		ldr	r3, .L32+4
 542 031c 1B68     		ldr	r3, [r3]
 543 031e 43F00303 		orr	r3, r3, #3
 544 0322 1360     		str	r3, [r2]
 328:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                 AES_CTRL_INT_CLR_RESULT_AV);
 329:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 330:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // copy tag to pui8Cstate
 331:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     for(ui8I = 0; ui8I < ui8Mval; ui8I++)
 545              		.loc 1 331 0
 546 0324 0023     		movs	r3, #0
 547 0326 FB77     		strb	r3, [r7, #31]
 548 0328 0DE0     		b	.L30
 549              	.L31:
 332:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 333:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         pui8Cstate[ui8I] = ui8MIC[ui8I];
 550              		.loc 1 333 0 discriminator 3
 551 032a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 552 032c 3A68     		ldr	r2, [r7]
 553 032e 1344     		add	r3, r3, r2
 554 0330 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 555 0332 07F12001 		add	r1, r7, #32
 556 0336 0A44     		add	r2, r2, r1
 557 0338 12F8142C 		ldrb	r2, [r2, #-20]
 558 033c D2B2     		uxtb	r2, r2
 559 033e 1A70     		strb	r2, [r3]
 331:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 560              		.loc 1 331 0 discriminator 3
 561 0340 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 562 0342 0133     		adds	r3, r3, #1
 563 0344 FB77     		strb	r3, [r7, #31]
 564              	.L30:
 331:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 565              		.loc 1 331 0 is_stmt 0 discriminator 1
 566 0346 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 567 0348 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 568 034a 9A42     		cmp	r2, r3
 569 034c EDD3     		bcc	.L31
 334:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 335:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     g_ui8CurrentAESOp = AES_NONE;
 570              		.loc 1 335 0 is_stmt 1
 571 034e 0C4B     		ldr	r3, .L32+32
 572 0350 0022     		movs	r2, #0
 573 0352 1A70     		strb	r2, [r3]
 336:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     return (AES_SUCCESS);
 574              		.loc 1 336 0
 575 0354 0023     		movs	r3, #0
 576              	.L26:
 337:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** }
 577              		.loc 1 337 0
 578 0356 1846     		mov	r0, r3
 579 0358 2037     		adds	r7, r7, #32
 580              		.cfi_def_cfa_offset 8
 581 035a BD46     		mov	sp, r7
 582              		.cfi_def_cfa_register 13
 583              		@ sp needed
 584 035c 80BD     		pop	{r7, pc}
 585              	.L33:
 586 035e 00BF     		.align	2
 587              	.L32:
 588 0360 90B70840 		.word	1074313104
 589 0364 88B70840 		.word	1074313096
 590 0368 00B70840 		.word	1074312960
 591 036c 50B50840 		.word	1074312528
 592 0370 70B50840 		.word	1074312560
 593 0374 74B50840 		.word	1074312564
 594 0378 78B50840 		.word	1074312568
 595 037c 7CB50840 		.word	1074312572
 596 0380 00000000 		.word	g_ui8CurrentAESOp
 597              		.cfi_endproc
 598              	.LFE2:
 600              		.align	2
 601              		.global	CCMInvAuthDecryptStart
 602              		.thumb
 603              		.thumb_func
 605              	CCMInvAuthDecryptStart:
 606              	.LFB3:
 338:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 339:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
 340:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
 341:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! CCMInvAuthDecryptStart starts the CCM Decryption and Inverse
 342:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! Authentication operation.
 343:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 344:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param bDecrypt if set to 'true' then run decryption, set to 'false' if
 345:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! authentication only
 346:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param ui8Mval is the length of authentication field in octets [0,2,4,6,8,
 347:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! 10,12,14 or 16].
 348:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  pui8N is the pointer to 13-byte or 12-byte Nonce.
 349:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  pui8C  is the pointer to octet string 'c' = 'm' || auth tag T.
 350:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  ui16LenC is the length of pui8C[] in octets.
 351:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  pui8A is the pointer to octet string 'a'.
 352:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  ui16LenA is the Length of pui8A[] in octets.
 353:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  ui8KeyLocation is the location where the Key is stored in Key RAM.
 354:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  pui8Cstate is the pointer to output buffer.  (cannot be part
 355:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! of pui8C[]).
 356:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  ui8CCMLVal is the ccm L Value to be used.
 357:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param  ui8IntEnable if set to 'true' to enable interrupts or 'false' to
 358:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! disable interuupts.  Set to 'false' if \e bDecrypt is set to 'false'.
 359:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 360:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 361:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! The function will place in \e pui8Cstate the first ui8Mval bytes of 
 362:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! containing the Authentication Tag.
 363:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 364:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! The \e ui8KeyLocation parameter is an enumerated type which specifies
 365:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! the Key Ram locationin which the key is stored.
 366:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! This parameter can have any of the following values:
 367:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 368:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_0
 369:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_1
 370:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_2,
 371:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_3,
 372:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_4,
 373:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_5,
 374:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_6,
 375:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! - \b KEY_AREA_7
 376:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 377:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \return  AES_SUCCESS if successful.
 378:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
 379:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
 380:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** uint8_t CCMInvAuthDecryptStart(bool bDecrypt,
 381:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                uint8_t ui8Mval,
 382:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                uint8_t *pui8N,
 383:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                uint8_t *pui8C,
 384:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                uint16_t ui16LenC,
 385:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                uint8_t *pui8A,
 386:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                uint16_t ui16LenA,
 387:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                uint8_t ui8KeyLocation,
 388:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                uint8_t *pui8Cstate,
 389:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                uint8_t ui8CCMLVal,
 390:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                uint8_t ui8IntEnable)
 391:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** {
 607              		.loc 1 391 0
 608              		.cfi_startproc
 609              		@ args = 28, pretend = 0, frame = 40
 610              		@ frame_needed = 1, uses_anonymous_args = 0
 611 0384 80B5     		push	{r7, lr}
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 7, -8
 614              		.cfi_offset 14, -4
 615 0386 8AB0     		sub	sp, sp, #40
 616              		.cfi_def_cfa_offset 48
 617 0388 00AF     		add	r7, sp, #0
 618              		.cfi_def_cfa_register 7
 619 038a BA60     		str	r2, [r7, #8]
 620 038c 7B60     		str	r3, [r7, #4]
 621 038e 0346     		mov	r3, r0
 622 0390 FB73     		strb	r3, [r7, #15]
 623 0392 0B46     		mov	r3, r1
 624 0394 BB73     		strb	r3, [r7, #14]
 392:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint16_t ui16LenM = ui16LenC - ui8Mval;
 625              		.loc 1 392 0
 626 0396 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 627 0398 9BB2     		uxth	r3, r3
 628 039a 3A8E     		ldrh	r2, [r7, #48]	@ movhi
 629 039c D31A     		subs	r3, r2, r3
 630 039e 3B84     		strh	r3, [r7, #32]	@ movhi
 393:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint8_t  ui8A0[16];
 394:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint32_t ui32CtrlVal;
 395:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint8_t  ui8I;
 396:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     g_ui8CurrentAESOp = AES_CCM;
 631              		.loc 1 396 0
 632 03a0 6A4B     		ldr	r3, .L48
 633 03a2 0322     		movs	r2, #3
 634 03a4 1A70     		strb	r2, [r3]
 397:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 398:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // workaround for AES registers not retained after PM2
 399:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CFG) = AES_CTRL_INT_CFG_LEVEL;
 635              		.loc 1 399 0
 636 03a6 6A4B     		ldr	r3, .L48+4
 637 03a8 0122     		movs	r2, #1
 638 03aa 1A60     		str	r2, [r3]
 400:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_EN) = (AES_CTRL_INT_EN_RESULT_AV |
 639              		.loc 1 400 0
 640 03ac 694B     		ldr	r3, .L48+8
 641 03ae 0322     		movs	r2, #3
 642 03b0 1A60     		str	r2, [r3]
 401:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                               AES_CTRL_INT_EN_DMA_IN_DONE);
 402:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 403:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_ALG_SEL) = AES_CTRL_ALG_SEL_AES;
 643              		.loc 1 403 0
 644 03b2 694B     		ldr	r3, .L48+12
 645 03b4 0222     		movs	r2, #2
 646 03b6 1A60     		str	r2, [r3]
 404:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) = (AES_CTRL_INT_CLR_DMA_IN_DONE |
 647              		.loc 1 404 0
 648 03b8 684B     		ldr	r3, .L48+16
 649 03ba 0322     		movs	r2, #3
 650 03bc 1A60     		str	r2, [r3]
 405:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                AES_CTRL_INT_CLR_RESULT_AV);
 406:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 407:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_KEY_STORE_READ_AREA) = (uint32_t)ui8KeyLocation;
 651              		.loc 1 407 0
 652 03be 684A     		ldr	r2, .L48+20
 653 03c0 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 654 03c4 1360     		str	r3, [r2]
 655              	.L35:
 408:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 409:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     //wait until key is loaded to the AES module
 410:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     do
 411:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 412:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ASM_NOP;
 656              		.loc 1 412 0 discriminator 1
 657              		.syntax unified
 658              	@ 412 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c" 1
 659 03c6 00BF     		NOP
 660              	@ 0 "" 2
 413:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 414:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     while((HWREG(AES_KEY_STORE_READ_AREA) & AES_KEY_STORE_READ_AREA_BUSY));
 661              		.loc 1 414 0 discriminator 1
 662              		.thumb
 663              		.syntax unified
 664 03c8 654B     		ldr	r3, .L48+20
 665 03ca 1B68     		ldr	r3, [r3]
 666 03cc 002B     		cmp	r3, #0
 667 03ce FADB     		blt	.L35
 415:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 416:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     //check for Key Store read error
 417:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT)& AES_CTRL_INT_STAT_KEY_ST_RD_ERR))
 668              		.loc 1 417 0
 669 03d0 644B     		ldr	r3, .L48+24
 670 03d2 1B68     		ldr	r3, [r3]
 671 03d4 03F00053 		and	r3, r3, #536870912
 672 03d8 002B     		cmp	r3, #0
 673 03da 07D0     		beq	.L36
 418:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 419:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // clear the Keystore Read error bit
 420:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_RD_ERR;
 674              		.loc 1 420 0
 675 03dc 5F4A     		ldr	r2, .L48+16
 676 03de 5F4B     		ldr	r3, .L48+16
 677 03e0 1B68     		ldr	r3, [r3]
 678 03e2 43F00053 		orr	r3, r3, #536870912
 679 03e6 1360     		str	r3, [r2]
 421:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         return (AES_KEYSTORE_READ_ERROR);
 680              		.loc 1 421 0
 681 03e8 0123     		movs	r3, #1
 682 03ea ABE0     		b	.L47
 683              	.L36:
 422:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 423:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 424:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // Prepare the initialization vector
 425:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui8A0[0] = ui8CCMLVal - 1;          // Lval
 684              		.loc 1 425 0
 685 03ec 97F84430 		ldrb	r3, [r7, #68]
 686 03f0 013B     		subs	r3, r3, #1
 687 03f2 DBB2     		uxtb	r3, r3
 688 03f4 3B74     		strb	r3, [r7, #16]
 426:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     for(ui8I = 0; ui8I < 13; ui8I++)
 689              		.loc 1 426 0
 690 03f6 0023     		movs	r3, #0
 691 03f8 87F82330 		strb	r3, [r7, #35]
 692 03fc 11E0     		b	.L38
 693              	.L39:
 427:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 428:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ui8A0[ui8I + 1] = pui8N[ui8I];
 694              		.loc 1 428 0 discriminator 3
 695 03fe 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 696 0402 0133     		adds	r3, r3, #1
 697 0404 97F82320 		ldrb	r2, [r7, #35]	@ zero_extendqisi2
 698 0408 B968     		ldr	r1, [r7, #8]
 699 040a 0A44     		add	r2, r2, r1
 700 040c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 701 040e 07F12801 		add	r1, r7, #40
 702 0412 0B44     		add	r3, r3, r1
 703 0414 03F8182C 		strb	r2, [r3, #-24]
 426:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     for(ui8I = 0; ui8I < 13; ui8I++)
 704              		.loc 1 426 0 discriminator 3
 705 0418 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 706 041c 0133     		adds	r3, r3, #1
 707 041e 87F82330 		strb	r3, [r7, #35]
 708              	.L38:
 426:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     for(ui8I = 0; ui8I < 13; ui8I++)
 709              		.loc 1 426 0 is_stmt 0 discriminator 1
 710 0422 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 711 0426 0C2B     		cmp	r3, #12
 712 0428 E9D9     		bls	.L39
 429:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 430:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if(3 == ui8CCMLVal)
 713              		.loc 1 430 0 is_stmt 1
 714 042a 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 715 042e 032B     		cmp	r3, #3
 716 0430 01D1     		bne	.L40
 431:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 432:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ui8A0[13] = 0;
 717              		.loc 1 432 0
 718 0432 0023     		movs	r3, #0
 719 0434 7B77     		strb	r3, [r7, #29]
 720              	.L40:
 433:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 434:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui8A0[14] = 0;                   // initialize counter to 0
 721              		.loc 1 434 0
 722 0436 0023     		movs	r3, #0
 723 0438 BB77     		strb	r3, [r7, #30]
 435:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui8A0[15] = 0;                   // initialize counter to 0
 724              		.loc 1 435 0
 725 043a 0023     		movs	r3, #0
 726 043c FB77     		strb	r3, [r7, #31]
 436:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 437:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // write initialization vector
 438:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_IV_0) = ((uint32_t  *)&ui8A0)[0];
 727              		.loc 1 438 0
 728 043e 4A4A     		ldr	r2, .L48+28
 729 0440 07F11003 		add	r3, r7, #16
 730 0444 1B68     		ldr	r3, [r3]
 731 0446 1360     		str	r3, [r2]
 439:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_IV_1) = ((uint32_t  *)&ui8A0)[1];
 732              		.loc 1 439 0
 733 0448 484A     		ldr	r2, .L48+32
 734 044a 7B69     		ldr	r3, [r7, #20]
 735 044c 1360     		str	r3, [r2]
 440:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_IV_2) = ((uint32_t  *)&ui8A0)[2];
 736              		.loc 1 440 0
 737 044e 484A     		ldr	r2, .L48+36
 738 0450 BB69     		ldr	r3, [r7, #24]
 739 0452 1360     		str	r3, [r2]
 441:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_IV_3) = ((uint32_t  *)&ui8A0)[3];
 740              		.loc 1 441 0
 741 0454 474A     		ldr	r2, .L48+40
 742 0456 FB69     		ldr	r3, [r7, #28]
 743 0458 1360     		str	r3, [r2]
 442:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 443:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // configure AES engine
 444:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal = ((ui8CCMLVal - 1) <<
 744              		.loc 1 444 0
 745 045a 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 746 045e 013B     		subs	r3, r3, #1
 747 0460 DB04     		lsls	r3, r3, #19
 748 0462 7B62     		str	r3, [r7, #36]
 445:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                    AES_AES_CTRL_CCM_L_S);             // CCM_L
 446:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if(ui8Mval >= 2)
 749              		.loc 1 446 0
 750 0464 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 751 0466 012B     		cmp	r3, #1
 752 0468 07D9     		bls	.L42
 447:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 448:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ui32CtrlVal |= (((ui8Mval - 2) >> 1) <<
 753              		.loc 1 448 0
 754 046a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 755 046c 023B     		subs	r3, r3, #2
 756 046e 5B10     		asrs	r3, r3, #1
 757 0470 9B05     		lsls	r3, r3, #22
 758 0472 1A46     		mov	r2, r3
 759 0474 7B6A     		ldr	r3, [r7, #36]
 760 0476 1343     		orrs	r3, r3, r2
 761 0478 7B62     		str	r3, [r7, #36]
 762              	.L42:
 449:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                         AES_AES_CTRL_CCM_M_S);           // CCM_M
 450:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 451:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     else
 452:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 453:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ui32CtrlVal |= (0 <<
 454:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                         AES_AES_CTRL_CCM_M_S);           // CCM_M
 455:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 456:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= (AES_AES_CTRL_CCM);                // CCM
 763              		.loc 1 456 0
 764 047a 7B6A     		ldr	r3, [r7, #36]
 765 047c 43F48023 		orr	r3, r3, #262144
 766 0480 7B62     		str	r3, [r7, #36]
 457:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= (1 << AES_AES_CTRL_key_size_S);    // key = 128
 767              		.loc 1 457 0
 768 0482 7B6A     		ldr	r3, [r7, #36]
 769 0484 43F00803 		orr	r3, r3, #8
 770 0488 7B62     		str	r3, [r7, #36]
 458:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= (0 << AES_AES_CTRL_input_ready);   // decryption
 459:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= AES_AES_CTRL_CTR;                  // CTR
 771              		.loc 1 459 0
 772 048a 7B6A     		ldr	r3, [r7, #36]
 773 048c 43F04003 		orr	r3, r3, #64
 774 0490 7B62     		str	r3, [r7, #36]
 460:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= AES_AES_CTRL_save_context;         // save context
 775              		.loc 1 460 0
 776 0492 7B6A     		ldr	r3, [r7, #36]
 777 0494 43F00053 		orr	r3, r3, #536870912
 778 0498 7B62     		str	r3, [r7, #36]
 461:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ui32CtrlVal |= (0x3 << AES_AES_CTRL_ctr_width_S); // CTR width 128
 779              		.loc 1 461 0
 780 049a 7B6A     		ldr	r3, [r7, #36]
 781 049c 43F4C073 		orr	r3, r3, #384
 782 04a0 7B62     		str	r3, [r7, #36]
 462:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // program AES-CCM-128 encryption
 463:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_CTRL) = ui32CtrlVal;
 783              		.loc 1 463 0
 784 04a2 354A     		ldr	r2, .L48+44
 785 04a4 7B6A     		ldr	r3, [r7, #36]
 786 04a6 1360     		str	r3, [r2]
 464:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 465:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // write the length of the crypto block (lo)
 466:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_C_LENGTH_0) = (uint16_t)(ui16LenM) ;
 787              		.loc 1 466 0
 788 04a8 344A     		ldr	r2, .L48+48
 789 04aa 3B8C     		ldrh	r3, [r7, #32]
 790 04ac 1360     		str	r3, [r2]
 467:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // write the length of the crypto block (hi)
 468:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_C_LENGTH_1)  =  0;
 791              		.loc 1 468 0
 792 04ae 344B     		ldr	r3, .L48+52
 793 04b0 0022     		movs	r2, #0
 794 04b2 1A60     		str	r2, [r3]
 469:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 470:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // write the length of the AAD data block may be non-block size aligned
 471:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_AES_AUTH_LENGTH) = ui16LenA;
 795              		.loc 1 471 0
 796 04b4 334A     		ldr	r2, .L48+56
 797 04b6 3B8F     		ldrh	r3, [r7, #56]
 798 04b8 1360     		str	r3, [r2]
 472:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 473:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if(ui16LenA != 0)
 799              		.loc 1 473 0
 800 04ba 3B8F     		ldrh	r3, [r7, #56]
 801 04bc 002B     		cmp	r3, #0
 802 04be 1BD0     		beq	.L43
 474:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 475:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // configure DMAC to fetch the AAD data
 476:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // enable DMA channel 0
 477:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_CTRL)      =  AES_DMAC_CH0_CTRL_EN;
 803              		.loc 1 477 0
 804 04c0 314B     		ldr	r3, .L48+60
 805 04c2 0122     		movs	r2, #1
 806 04c4 1A60     		str	r2, [r3]
 478:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // base address of the AAD input data in ext. memory
 479:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_EXTADDR)   = (uint32_t)pui8A;
 807              		.loc 1 479 0
 808 04c6 314A     		ldr	r2, .L48+64
 809 04c8 7B6B     		ldr	r3, [r7, #52]
 810 04ca 1360     		str	r3, [r2]
 480:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // AAD data length in bytes, equal to the AAD length len
 481:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         //({aad data}) (may be non-block size aligned)
 482:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 483:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_DMALENGTH) = ui16LenA;
 811              		.loc 1 483 0
 812 04cc 304A     		ldr	r2, .L48+68
 813 04ce 3B8F     		ldrh	r3, [r7, #56]
 814 04d0 1360     		str	r3, [r2]
 815              	.L44:
 484:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 485:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // wait for completion of the AAD data transfer, DMA_IN_DONE
 486:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         do
 487:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         {
 488:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             ASM_NOP;
 816              		.loc 1 488 0 discriminator 1
 817              		.syntax unified
 818              	@ 488 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c" 1
 819 04d2 00BF     		NOP
 820              	@ 0 "" 2
 489:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         }
 490:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         while(!(HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_IN_DONE));
 821              		.loc 1 490 0 discriminator 1
 822              		.thumb
 823              		.syntax unified
 824 04d4 234B     		ldr	r3, .L48+24
 825 04d6 1B68     		ldr	r3, [r3]
 826 04d8 03F00203 		and	r3, r3, #2
 827 04dc 002B     		cmp	r3, #0
 828 04de F8D0     		beq	.L44
 491:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 492:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // check for the absence of error
 493:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR))
 829              		.loc 1 493 0
 830 04e0 204B     		ldr	r3, .L48+24
 831 04e2 1B68     		ldr	r3, [r3]
 832 04e4 002B     		cmp	r3, #0
 833 04e6 07DA     		bge	.L43
 494:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         {
 495:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_DMA_BUS_ERR;
 834              		.loc 1 495 0
 835 04e8 1C4A     		ldr	r2, .L48+16
 836 04ea 1C4B     		ldr	r3, .L48+16
 837 04ec 1B68     		ldr	r3, [r3]
 838 04ee 43F00043 		orr	r3, r3, #-2147483648
 839 04f2 1360     		str	r3, [r2]
 496:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             return (AES_DMA_BUS_ERROR);
 840              		.loc 1 496 0
 841 04f4 0323     		movs	r3, #3
 842 04f6 25E0     		b	.L47
 843              	.L43:
 497:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         }
 498:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 499:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 500:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // clear interrupt status
 501:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) = (AES_CTRL_INT_CLR_DMA_IN_DONE |
 844              		.loc 1 501 0
 845 04f8 184B     		ldr	r3, .L48+16
 846 04fa 0322     		movs	r2, #3
 847 04fc 1A60     		str	r2, [r3]
 502:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                AES_CTRL_INT_CLR_RESULT_AV);
 503:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 504:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if(ui8IntEnable)
 848              		.loc 1 504 0
 849 04fe 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 850 0502 002B     		cmp	r3, #0
 851 0504 05D0     		beq	.L45
 505:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 506:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         IntPendClear(INT_AES);
 852              		.loc 1 506 0
 853 0506 9F20     		movs	r0, #159
 854 0508 FFF7FEFF 		bl	IntPendClear
 507:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         IntEnable(INT_AES);
 855              		.loc 1 507 0
 856 050c 9F20     		movs	r0, #159
 857 050e FFF7FEFF 		bl	IntEnable
 858              	.L45:
 508:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 509:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 510:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // enable result available bit in interrupt enable
 511:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_EN) = AES_CTRL_INT_EN_RESULT_AV;
 859              		.loc 1 511 0
 860 0512 104B     		ldr	r3, .L48+8
 861 0514 0122     		movs	r2, #1
 862 0516 1A60     		str	r2, [r3]
 512:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 513:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if(bDecrypt)
 863              		.loc 1 513 0
 864 0518 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 865 051a 002B     		cmp	r3, #0
 866 051c 11D0     		beq	.L46
 514:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 515:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // configure DMAC
 516:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // enable DMA channel 0
 517:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_CTRL) = AES_DMAC_CH0_CTRL_EN;
 867              		.loc 1 517 0
 868 051e 1A4B     		ldr	r3, .L48+60
 869 0520 0122     		movs	r2, #1
 870 0522 1A60     		str	r2, [r3]
 518:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // base address of the payload data in ext. memory
 519:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_EXTADDR) = (uint32_t)pui8C;
 871              		.loc 1 519 0
 872 0524 194A     		ldr	r2, .L48+64
 873 0526 7B68     		ldr	r3, [r7, #4]
 874 0528 1360     		str	r3, [r2]
 520:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // payload data length in bytes, equal to the message length len({crypto_data})
 521:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_DMALENGTH) = (ui16LenM);
 875              		.loc 1 521 0
 876 052a 194A     		ldr	r2, .L48+68
 877 052c 3B8C     		ldrh	r3, [r7, #32]
 878 052e 1360     		str	r3, [r2]
 522:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 523:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // enable DMA channel 1
 524:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_CTRL) = AES_DMAC_CH1_CTRL_EN;
 879              		.loc 1 524 0
 880 0530 184B     		ldr	r3, .L48+72
 881 0532 0122     		movs	r2, #1
 882 0534 1A60     		str	r2, [r3]
 525:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // base address of the output data buffer
 526:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_EXTADDR) = (uint32_t)pui8C;
 883              		.loc 1 526 0
 884 0536 184A     		ldr	r2, .L48+76
 885 0538 7B68     		ldr	r3, [r7, #4]
 886 053a 1360     		str	r3, [r2]
 527:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // output data length in bytes, equal to the result data length len({crypto data})
 528:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_DMALENGTH) = ui16LenM;
 887              		.loc 1 528 0
 888 053c 174A     		ldr	r2, .L48+80
 889 053e 3B8C     		ldrh	r3, [r7, #32]
 890 0540 1360     		str	r3, [r2]
 891              	.L46:
 529:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 530:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 531:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     return (AES_SUCCESS);
 892              		.loc 1 531 0
 893 0542 0023     		movs	r3, #0
 894              	.L47:
 532:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** }
 895              		.loc 1 532 0 discriminator 1
 896 0544 1846     		mov	r0, r3
 897 0546 2837     		adds	r7, r7, #40
 898              		.cfi_def_cfa_offset 8
 899 0548 BD46     		mov	sp, r7
 900              		.cfi_def_cfa_register 13
 901              		@ sp needed
 902 054a 80BD     		pop	{r7, pc}
 903              	.L49:
 904              		.align	2
 905              	.L48:
 906 054c 00000000 		.word	g_ui8CurrentAESOp
 907 0550 80B70840 		.word	1074313088
 908 0554 84B70840 		.word	1074313092
 909 0558 00B70840 		.word	1074312960
 910 055c 88B70840 		.word	1074313096
 911 0560 0CB40840 		.word	1074312204
 912 0564 90B70840 		.word	1074313104
 913 0568 40B50840 		.word	1074312512
 914 056c 44B50840 		.word	1074312516
 915 0570 48B50840 		.word	1074312520
 916 0574 4CB50840 		.word	1074312524
 917 0578 50B50840 		.word	1074312528
 918 057c 54B50840 		.word	1074312532
 919 0580 58B50840 		.word	1074312536
 920 0584 5CB50840 		.word	1074312540
 921 0588 00B00840 		.word	1074311168
 922 058c 04B00840 		.word	1074311172
 923 0590 0CB00840 		.word	1074311180
 924 0594 20B00840 		.word	1074311200
 925 0598 24B00840 		.word	1074311204
 926 059c 2CB00840 		.word	1074311212
 927              		.cfi_endproc
 928              	.LFE3:
 930              		.align	2
 931              		.global	CCMInvAuthDecryptCheckResult
 932              		.thumb
 933              		.thumb_func
 935              	CCMInvAuthDecryptCheckResult:
 936              	.LFB4:
 533:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 534:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
 535:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
 536:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! CCMInvAuthDecryptCheckResult function checks CCM decrypt and Inverse
 537:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! Authentication result.
 538:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 539:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \return  if result is available or error occurs returns true.  If result
 540:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! is not yet available or no error occurs returns false
 541:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
 542:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
 543:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** uint8_t CCMInvAuthDecryptCheckResult(void)
 544:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** {
 937              		.loc 1 544 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 1, uses_anonymous_args = 0
 941 05a0 80B5     		push	{r7, lr}
 942              		.cfi_def_cfa_offset 8
 943              		.cfi_offset 7, -8
 944              		.cfi_offset 14, -4
 945 05a2 00AF     		add	r7, sp, #0
 946              		.cfi_def_cfa_register 7
 545:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // check if result is available (or) some error has occured
 546:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     return (CCMAuthEncryptCheckResult());
 947              		.loc 1 546 0
 948 05a4 FFF7FEFF 		bl	CCMAuthEncryptCheckResult
 949 05a8 0346     		mov	r3, r0
 547:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** }
 950              		.loc 1 547 0
 951 05aa 1846     		mov	r0, r3
 952 05ac 80BD     		pop	{r7, pc}
 953              		.cfi_endproc
 954              	.LFE4:
 956 05ae 00BF     		.align	2
 957              		.global	CCMInvAuthDecryptGetResult
 958              		.thumb
 959              		.thumb_func
 961              	CCMInvAuthDecryptGetResult:
 962              	.LFB5:
 548:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 549:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
 550:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
 551:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! CCMInvAuthDecryptGetResult gets the result of CCM operation. This
 552:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! function should be called only after CCMInvAuthDecryptStart is called.
 553:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 554:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param ui8Mval is length of authentication field in octets [0,2,4,6,8,10,
 555:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! 12,14 or 16].
 556:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param pui8C is pointer to octet string 'c' = 'm' || auth tag T.
 557:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param ui16LenC  is length of message pui8C[] in octets.
 558:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \param pui8Cstate is pointer to AES state buffer, cannot be part of
 559:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!  pui8C[]).
 560:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //!
 561:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //! \return  AES_SUCCESS if successful.
 562:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //
 563:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** //*****************************************************************************
 564:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** uint8_t CCMInvAuthDecryptGetResult(uint8_t ui8Mval,
 565:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                    uint8_t *pui8C,
 566:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                    uint16_t ui16LenC,
 567:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                    uint8_t *pui8Cstate)
 568:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** {
 963              		.loc 1 568 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 40
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967 05b0 80B5     		push	{r7, lr}
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 05b2 8AB0     		sub	sp, sp, #40
 972              		.cfi_def_cfa_offset 48
 973 05b4 00AF     		add	r7, sp, #0
 974              		.cfi_def_cfa_register 7
 975 05b6 B960     		str	r1, [r7, #8]
 976 05b8 7B60     		str	r3, [r7, #4]
 977 05ba 0346     		mov	r3, r0
 978 05bc FB73     		strb	r3, [r7, #15]
 979 05be 1346     		mov	r3, r2	@ movhi
 980 05c0 BB81     		strh	r3, [r7, #12]	@ movhi
 569:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint8_t volatile ui8MIC[16];
 570:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint16_t ui16LenM = ui16LenC - ui8Mval;
 981              		.loc 1 570 0
 982 05c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 983 05c4 9BB2     		uxth	r3, r3
 984 05c6 BA89     		ldrh	r2, [r7, #12]	@ movhi
 985 05c8 D31A     		subs	r3, r2, r3
 986 05ca BB84     		strh	r3, [r7, #36]	@ movhi
 571:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     uint8_t ui8I, ui8J;
 572:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 573:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR))
 987              		.loc 1 573 0
 988 05cc 494B     		ldr	r3, .L63
 989 05ce 1B68     		ldr	r3, [r3]
 990 05d0 002B     		cmp	r3, #0
 991 05d2 07DA     		bge	.L53
 574:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 575:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         //clear the DMA error
 576:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_DMA_BUS_ERR;
 992              		.loc 1 576 0
 993 05d4 484A     		ldr	r2, .L63+4
 994 05d6 484B     		ldr	r3, .L63+4
 995 05d8 1B68     		ldr	r3, [r3]
 996 05da 43F00043 		orr	r3, r3, #-2147483648
 997 05de 1360     		str	r3, [r2]
 577:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         return (AES_DMA_BUS_ERROR);
 998              		.loc 1 577 0
 999 05e0 0323     		movs	r3, #3
 1000 05e2 83E0     		b	.L54
 1001              	.L53:
 578:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 579:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_WR_ERR))
 1002              		.loc 1 579 0
 1003 05e4 434B     		ldr	r3, .L63
 1004 05e6 1B68     		ldr	r3, [r3]
 1005 05e8 03F08043 		and	r3, r3, #1073741824
 1006 05ec 002B     		cmp	r3, #0
 1007 05ee 07D0     		beq	.L55
 580:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 581:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // clear the Key Store Write error bit
 582:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_WR_ERR;
 1008              		.loc 1 582 0
 1009 05f0 414A     		ldr	r2, .L63+4
 1010 05f2 414B     		ldr	r3, .L63+4
 1011 05f4 1B68     		ldr	r3, [r3]
 1012 05f6 43F08043 		orr	r3, r3, #1073741824
 1013 05fa 1360     		str	r3, [r2]
 583:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         return (AES_KEYSTORE_WRITE_ERROR);
 1014              		.loc 1 583 0
 1015 05fc 0223     		movs	r3, #2
 1016 05fe 75E0     		b	.L54
 1017              	.L55:
 584:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 585:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR))
 1018              		.loc 1 585 0
 1019 0600 3C4B     		ldr	r3, .L63
 1020 0602 1B68     		ldr	r3, [r3]
 1021 0604 03F00053 		and	r3, r3, #536870912
 1022 0608 002B     		cmp	r3, #0
 1023 060a 07D0     		beq	.L56
 586:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 587:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         // clear the Key Store Read error bit
 588:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_RD_ERR;
 1024              		.loc 1 588 0
 1025 060c 3A4A     		ldr	r2, .L63+4
 1026 060e 3A4B     		ldr	r3, .L63+4
 1027 0610 1B68     		ldr	r3, [r3]
 1028 0612 43F00053 		orr	r3, r3, #536870912
 1029 0616 1360     		str	r3, [r2]
 589:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         return (AES_KEYSTORE_READ_ERROR);
 1030              		.loc 1 589 0
 1031 0618 0123     		movs	r3, #1
 1032 061a 67E0     		b	.L54
 1033              	.L56:
 590:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 591:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 592:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     IntDisable(INT_AES);
 1034              		.loc 1 592 0
 1035 061c 9F20     		movs	r0, #159
 1036 061e FFF7FEFF 		bl	IntDisable
 593:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 594:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // disable the master control/DMA clock
 595:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_ALG_SEL) = 0x00000000;
 1037              		.loc 1 595 0
 1038 0622 364B     		ldr	r3, .L63+8
 1039 0624 0022     		movs	r2, #0
 1040 0626 1A60     		str	r2, [r3]
 1041              	.L57:
 596:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 597:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // read tag
 598:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // wait for the context ready bit [30]
 599:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     do
 600:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 601:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         ASM_NOP;
 1042              		.loc 1 601 0 discriminator 1
 1043              		.syntax unified
 1044              	@ 601 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c" 1
 1045 0628 00BF     		NOP
 1046              	@ 0 "" 2
 602:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 603:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     while((HWREG(AES_AES_CTRL) & AES_AES_CTRL_saved_context_ready) !=
 1047              		.loc 1 603 0 discriminator 1
 1048              		.thumb
 1049              		.syntax unified
 1050 062a 354B     		ldr	r3, .L63+12
 1051 062c 1B68     		ldr	r3, [r3]
 1052 062e 03F08043 		and	r3, r3, #1073741824
 604:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             AES_AES_CTRL_saved_context_ready);
 1053              		.loc 1 604 0 discriminator 1
 1054 0632 002B     		cmp	r3, #0
 1055 0634 F8D0     		beq	.L57
 605:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 606:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // Read the tag registers
 607:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[0] = HWREG(AES_AES_TAG_OUT_0);
 1056              		.loc 1 607 0
 1057 0636 07F11403 		add	r3, r7, #20
 1058 063a 324A     		ldr	r2, .L63+16
 1059 063c 1268     		ldr	r2, [r2]
 1060 063e 1A60     		str	r2, [r3]
 608:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[1] = HWREG(AES_AES_TAG_OUT_1);
 1061              		.loc 1 608 0
 1062 0640 07F11403 		add	r3, r7, #20
 1063 0644 0433     		adds	r3, r3, #4
 1064 0646 304A     		ldr	r2, .L63+20
 1065 0648 1268     		ldr	r2, [r2]
 1066 064a 1A60     		str	r2, [r3]
 609:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[2] = HWREG(AES_AES_TAG_OUT_2);
 1067              		.loc 1 609 0
 1068 064c 07F11403 		add	r3, r7, #20
 1069 0650 0833     		adds	r3, r3, #8
 1070 0652 2E4A     		ldr	r2, .L63+24
 1071 0654 1268     		ldr	r2, [r2]
 1072 0656 1A60     		str	r2, [r3]
 610:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[3] = HWREG(AES_AES_TAG_OUT_3);
 1073              		.loc 1 610 0
 1074 0658 07F11403 		add	r3, r7, #20
 1075 065c 0C33     		adds	r3, r3, #12
 1076 065e 2C4A     		ldr	r2, .L63+28
 1077 0660 1268     		ldr	r2, [r2]
 1078 0662 1A60     		str	r2, [r3]
 611:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 612:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // clear the interrupt status
 613:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) |= (AES_CTRL_INT_CLR_DMA_IN_DONE |
 1079              		.loc 1 613 0
 1080 0664 244A     		ldr	r2, .L63+4
 1081 0666 244B     		ldr	r3, .L63+4
 1082 0668 1B68     		ldr	r3, [r3]
 1083 066a 43F00303 		orr	r3, r3, #3
 1084 066e 1360     		str	r3, [r2]
 614:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****                                 AES_CTRL_INT_CLR_RESULT_AV);
 615:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 616:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     // copy tag to pui8Cstate
 617:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     for(ui8I = 0; ui8I < ui8Mval; ui8I++)
 1085              		.loc 1 617 0
 1086 0670 0023     		movs	r3, #0
 1087 0672 87F82730 		strb	r3, [r7, #39]
 1088 0676 11E0     		b	.L58
 1089              	.L59:
 618:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 619:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         pui8Cstate[ui8I] = ui8MIC[ui8I];
 1090              		.loc 1 619 0 discriminator 3
 1091 0678 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1092 067c 7A68     		ldr	r2, [r7, #4]
 1093 067e 1344     		add	r3, r3, r2
 1094 0680 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1095 0684 07F12801 		add	r1, r7, #40
 1096 0688 0A44     		add	r2, r2, r1
 1097 068a 12F8142C 		ldrb	r2, [r2, #-20]
 1098 068e D2B2     		uxtb	r2, r2
 1099 0690 1A70     		strb	r2, [r3]
 617:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 1100              		.loc 1 617 0 discriminator 3
 1101 0692 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1102 0696 0133     		adds	r3, r3, #1
 1103 0698 87F82730 		strb	r3, [r7, #39]
 1104              	.L58:
 617:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 1105              		.loc 1 617 0 is_stmt 0 discriminator 1
 1106 069c 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1107 06a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1108 06a2 9A42     		cmp	r2, r3
 1109 06a4 E8D3     		bcc	.L59
 620:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 621:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 622:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     for(ui8J = 0; ui8J < ui8Mval; ui8J++)
 1110              		.loc 1 622 0 is_stmt 1
 1111 06a6 0023     		movs	r3, #0
 1112 06a8 87F82630 		strb	r3, [r7, #38]
 1113 06ac 15E0     		b	.L60
 1114              	.L62:
 623:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 624:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         if(pui8Cstate[ui8J] != pui8C[ui16LenM + ui8J])
 1115              		.loc 1 624 0
 1116 06ae 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 1117 06b2 7A68     		ldr	r2, [r7, #4]
 1118 06b4 1344     		add	r3, r3, r2
 1119 06b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1120 06b8 B98C     		ldrh	r1, [r7, #36]
 1121 06ba 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 1122 06be 0B44     		add	r3, r3, r1
 1123 06c0 1946     		mov	r1, r3
 1124 06c2 BB68     		ldr	r3, [r7, #8]
 1125 06c4 0B44     		add	r3, r3, r1
 1126 06c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1127 06c8 9A42     		cmp	r2, r3
 1128 06ca 01D0     		beq	.L61
 625:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         {
 626:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****             return (CCM_AUTHENTICATION_FAILED);
 1129              		.loc 1 626 0
 1130 06cc 0423     		movs	r3, #4
 1131 06ce 0DE0     		b	.L54
 1132              	.L61:
 622:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 1133              		.loc 1 622 0 discriminator 2
 1134 06d0 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 1135 06d4 0133     		adds	r3, r3, #1
 1136 06d6 87F82630 		strb	r3, [r7, #38]
 1137              	.L60:
 622:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     {
 1138              		.loc 1 622 0 is_stmt 0 discriminator 1
 1139 06da 97F82620 		ldrb	r2, [r7, #38]	@ zero_extendqisi2
 1140 06de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1141 06e0 9A42     		cmp	r2, r3
 1142 06e2 E4D3     		bcc	.L62
 627:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****         }
 628:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     }
 629:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** 
 630:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     g_ui8CurrentAESOp = AES_NONE;
 1143              		.loc 1 630 0 is_stmt 1
 1144 06e4 0B4B     		ldr	r3, .L63+32
 1145 06e6 0022     		movs	r2, #0
 1146 06e8 1A70     		strb	r2, [r3]
 631:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c ****     return (AES_SUCCESS);
 1147              		.loc 1 631 0
 1148 06ea 0023     		movs	r3, #0
 1149              	.L54:
 632:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/ccm.c **** }
 1150              		.loc 1 632 0
 1151 06ec 1846     		mov	r0, r3
 1152 06ee 2837     		adds	r7, r7, #40
 1153              		.cfi_def_cfa_offset 8
 1154 06f0 BD46     		mov	sp, r7
 1155              		.cfi_def_cfa_register 13
 1156              		@ sp needed
 1157 06f2 80BD     		pop	{r7, pc}
 1158              	.L64:
 1159              		.align	2
 1160              	.L63:
 1161 06f4 90B70840 		.word	1074313104
 1162 06f8 88B70840 		.word	1074313096
 1163 06fc 00B70840 		.word	1074312960
 1164 0700 50B50840 		.word	1074312528
 1165 0704 70B50840 		.word	1074312560
 1166 0708 74B50840 		.word	1074312564
 1167 070c 78B50840 		.word	1074312568
 1168 0710 7CB50840 		.word	1074312572
 1169 0714 00000000 		.word	g_ui8CurrentAESOp
 1170              		.cfi_endproc
 1171              	.LFE5:
 1173              	.Letext0:
 1174              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1175              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1176              		.file 4 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/aes.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ccm.c
     /tmp/ccrQy01N.s:19     .text:0000000000000000 $t
     /tmp/ccrQy01N.s:24     .text:0000000000000000 CCMAuthEncryptStart
     /tmp/ccrQy01N.s:329    .text:00000000000001d4 $d
     /tmp/ccrQy01N.s:353    .text:0000000000000228 $t
     /tmp/ccrQy01N.s:358    .text:0000000000000228 CCMAuthEncryptCheckResult
     /tmp/ccrQy01N.s:419    .text:000000000000026c $d
     /tmp/ccrQy01N.s:423    .text:0000000000000270 $t
     /tmp/ccrQy01N.s:428    .text:0000000000000270 CCMAuthEncryptGetResult
     /tmp/ccrQy01N.s:588    .text:0000000000000360 $d
     /tmp/ccrQy01N.s:600    .text:0000000000000384 $t
     /tmp/ccrQy01N.s:605    .text:0000000000000384 CCMInvAuthDecryptStart
     /tmp/ccrQy01N.s:906    .text:000000000000054c $d
     /tmp/ccrQy01N.s:930    .text:00000000000005a0 $t
     /tmp/ccrQy01N.s:935    .text:00000000000005a0 CCMInvAuthDecryptCheckResult
     /tmp/ccrQy01N.s:961    .text:00000000000005b0 CCMInvAuthDecryptGetResult
     /tmp/ccrQy01N.s:1161   .text:00000000000006f4 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.8e445c0106ab795ab4704214cba6f089
                           .group:0000000000000000 wm4.hw_aes.h.39.77ecc3829d96bb0e5669b1f36ecffb12
                           .group:0000000000000000 wm4.hw_ints.h.42.85b9479f2be35b086f1bb7cbb15bc097
                           .group:0000000000000000 wm4._newlib_version.h.4.ad342815780c8db09778091a421b5b5b
                           .group:0000000000000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.b82bf99f69d6a5c085fc866de0d3eb9b
                           .group:0000000000000000 wm4._stdint.h.10.7a5f60e6741af4a5594a3867d347e1f9
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.aes.h.66.0fb976edb685649779bd34f5f8f7ef75

UNDEFINED SYMBOLS
IntDisable
IntPendClear
IntEnable
g_ui8CurrentAESOp
