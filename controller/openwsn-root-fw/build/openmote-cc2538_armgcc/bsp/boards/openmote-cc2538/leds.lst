   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"leds.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  23              	rreg_uriquery:
  24 0000 683D7563 		.ascii	"h=ucb\000"
  24      6200
  25 0006 0000     		.align	2
  28              	infoBoardname:
  29 0008 43433235 		.ascii	"CC2538\000"
  29      333800
  30 000f 00       		.align	2
  33              	infouCName:
  34 0010 43433235 		.ascii	"CC2538\000"
  34      333800
  35 0017 00       		.align	2
  38              	infoRadioName:
  39 0018 43433235 		.ascii	"CC2538 SoC\000"
  39      33382053 
  39      6F4300
  40              		.text
  41              		.align	2
  42              		.global	leds_init
  43              		.thumb
  44              		.thumb_func
  46              	leds_init:
  47              	.LFB0:
  48              		.file 1 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c"
   1:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** /**
   2:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****  * Author: Xavier Vilajosana (xvilajosana@eecs.berkeley.edu)
   3:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****  *         Pere Tuset (peretuset@openmote.com)
   4:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****  * Date:   July 2013
   5:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****  * Description: CC2538-specific definition of the "leds" bsp module.
   6:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****  */
   7:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
   8:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #include <stdint.h>
   9:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  10:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #include <headers/hw_memmap.h>
  11:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #include <headers/hw_types.h>
  12:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  13:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #include <source/gpio.h>
  14:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  15:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #include "board.h"
  16:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #include "leds.h"
  17:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  18:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** //=========================== defines =========================================
  19:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  20:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** // Board LED defines
  21:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #define BSP_LED_BASE            GPIO_C_BASE
  22:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #define BSP_LED_1               GPIO_PIN_4      //!< PC4 -- red
  23:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #define BSP_LED_2               GPIO_PIN_5      //!< PC5 -- orange
  24:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #define BSP_LED_3               GPIO_PIN_6      //!< PC6 -- yellow
  25:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #define BSP_LED_4               GPIO_PIN_7      //!< PC7 -- green
  26:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  27:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** #define BSP_LED_ALL             (BSP_LED_1 | \
  28:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****                                  BSP_LED_2 | \
  29:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****                                  BSP_LED_3 | \
  30:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****                                  BSP_LED_4)     //!< Bitmask of all LEDs
  31:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  32:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** //=========================== variables =======================================
  33:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  34:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** //=========================== prototypes ======================================
  35:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  36:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void bspLedSet(uint8_t ui8Leds);
  37:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void bspLedClear(uint8_t ui8Leds);
  38:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void bspLedToggle(uint8_t ui8Leds);
  39:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  40:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** //=========================== public ==========================================
  41:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  42:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void leds_init() {
  49              		.loc 1 42 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 1, uses_anonymous_args = 0
  53 0000 80B5     		push	{r7, lr}
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57 0002 00AF     		add	r7, sp, #0
  58              		.cfi_def_cfa_register 7
  43:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     GPIOPinTypeGPIOOutput(BSP_LED_BASE, BSP_LED_ALL);
  59              		.loc 1 43 0
  60 0004 F021     		movs	r1, #240
  61 0006 0548     		ldr	r0, .L2
  62 0008 FFF7FEFF 		bl	GPIOPinTypeGPIOOutput
  44:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	GPIOPinWrite(BSP_LED_BASE, BSP_LED_ALL, 0);
  63              		.loc 1 44 0
  64 000c 0022     		movs	r2, #0
  65 000e F021     		movs	r1, #240
  66 0010 0248     		ldr	r0, .L2
  67 0012 FFF7FEFF 		bl	GPIOPinWrite
  45:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
  68              		.loc 1 45 0
  69 0016 00BF     		nop
  70 0018 80BD     		pop	{r7, pc}
  71              	.L3:
  72 001a 00BF     		.align	2
  73              	.L2:
  74 001c 00B00D40 		.word	1074638848
  75              		.cfi_endproc
  76              	.LFE0:
  78              		.align	2
  79              		.global	leds_error_on
  80              		.thumb
  81              		.thumb_func
  83              	leds_error_on:
  84              	.LFB1:
  46:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  47:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** // red
  48:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_error_on() {
  85              		.loc 1 48 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89 0020 80B5     		push	{r7, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0022 00AF     		add	r7, sp, #0
  94              		.cfi_def_cfa_register 7
  49:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedSet(BSP_LED_1);
  95              		.loc 1 49 0
  96 0024 1020     		movs	r0, #16
  97 0026 FFF7FEFF 		bl	bspLedSet
  50:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
  98              		.loc 1 50 0
  99 002a 00BF     		nop
 100 002c 80BD     		pop	{r7, pc}
 101              		.cfi_endproc
 102              	.LFE1:
 104 002e 00BF     		.align	2
 105              		.global	leds_error_off
 106              		.thumb
 107              		.thumb_func
 109              	leds_error_off:
 110              	.LFB2:
  51:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_error_off() {
 111              		.loc 1 51 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0030 80B5     		push	{r7, lr}
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 7, -8
 118              		.cfi_offset 14, -4
 119 0032 00AF     		add	r7, sp, #0
 120              		.cfi_def_cfa_register 7
  52:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedClear(BSP_LED_1);
 121              		.loc 1 52 0
 122 0034 1020     		movs	r0, #16
 123 0036 FFF7FEFF 		bl	bspLedClear
  53:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 124              		.loc 1 53 0
 125 003a 00BF     		nop
 126 003c 80BD     		pop	{r7, pc}
 127              		.cfi_endproc
 128              	.LFE2:
 130 003e 00BF     		.align	2
 131              		.global	leds_error_toggle
 132              		.thumb
 133              		.thumb_func
 135              	leds_error_toggle:
 136              	.LFB3:
  54:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_error_toggle() {
 137              		.loc 1 54 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0040 80B5     		push	{r7, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0042 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
  55:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedToggle(BSP_LED_1);
 147              		.loc 1 55 0
 148 0044 1020     		movs	r0, #16
 149 0046 FFF7FEFF 		bl	bspLedToggle
  56:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 150              		.loc 1 56 0
 151 004a 00BF     		nop
 152 004c 80BD     		pop	{r7, pc}
 153              		.cfi_endproc
 154              	.LFE3:
 156 004e 00BF     		.align	2
 157              		.global	leds_error_isOn
 158              		.thumb
 159              		.thumb_func
 161              	leds_error_isOn:
 162              	.LFB4:
  57:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** uint8_t leds_error_isOn() {
 163              		.loc 1 57 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 8
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0050 80B5     		push	{r7, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0052 82B0     		sub	sp, sp, #8
 172              		.cfi_def_cfa_offset 16
 173 0054 00AF     		add	r7, sp, #0
 174              		.cfi_def_cfa_register 7
  58:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	  uint32_t ui32Toggle = GPIOPinRead(BSP_LED_BASE, BSP_LED_1);
 175              		.loc 1 58 0
 176 0056 1021     		movs	r1, #16
 177 0058 0748     		ldr	r0, .L9
 178 005a FFF7FEFF 		bl	GPIOPinRead
 179 005e 7860     		str	r0, [r7, #4]
  59:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	  return (uint8_t)(ui32Toggle & BSP_LED_1)>>4;
 180              		.loc 1 59 0
 181 0060 7B68     		ldr	r3, [r7, #4]
 182 0062 DBB2     		uxtb	r3, r3
 183 0064 1B11     		asrs	r3, r3, #4
 184 0066 DBB2     		uxtb	r3, r3
 185 0068 03F00103 		and	r3, r3, #1
 186 006c DBB2     		uxtb	r3, r3
  60:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 187              		.loc 1 60 0
 188 006e 1846     		mov	r0, r3
 189 0070 0837     		adds	r7, r7, #8
 190              		.cfi_def_cfa_offset 8
 191 0072 BD46     		mov	sp, r7
 192              		.cfi_def_cfa_register 13
 193              		@ sp needed
 194 0074 80BD     		pop	{r7, pc}
 195              	.L10:
 196 0076 00BF     		.align	2
 197              	.L9:
 198 0078 00B00D40 		.word	1074638848
 199              		.cfi_endproc
 200              	.LFE4:
 202              		.align	2
 203              		.global	leds_sync_on
 204              		.thumb
 205              		.thumb_func
 207              	leds_sync_on:
 208              	.LFB5:
  61:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  62:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** // orange
  63:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_sync_on() {
 209              		.loc 1 63 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213 007c 80B5     		push	{r7, lr}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 7, -8
 216              		.cfi_offset 14, -4
 217 007e 00AF     		add	r7, sp, #0
 218              		.cfi_def_cfa_register 7
  64:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedSet(BSP_LED_2);
 219              		.loc 1 64 0
 220 0080 2020     		movs	r0, #32
 221 0082 FFF7FEFF 		bl	bspLedSet
  65:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 222              		.loc 1 65 0
 223 0086 00BF     		nop
 224 0088 80BD     		pop	{r7, pc}
 225              		.cfi_endproc
 226              	.LFE5:
 228 008a 00BF     		.align	2
 229              		.global	leds_sync_off
 230              		.thumb
 231              		.thumb_func
 233              	leds_sync_off:
 234              	.LFB6:
  66:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_sync_off() {
 235              		.loc 1 66 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 1, uses_anonymous_args = 0
 239 008c 80B5     		push	{r7, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 008e 00AF     		add	r7, sp, #0
 244              		.cfi_def_cfa_register 7
  67:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedClear(BSP_LED_2);
 245              		.loc 1 67 0
 246 0090 2020     		movs	r0, #32
 247 0092 FFF7FEFF 		bl	bspLedClear
  68:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 248              		.loc 1 68 0
 249 0096 00BF     		nop
 250 0098 80BD     		pop	{r7, pc}
 251              		.cfi_endproc
 252              	.LFE6:
 254 009a 00BF     		.align	2
 255              		.global	leds_sync_toggle
 256              		.thumb
 257              		.thumb_func
 259              	leds_sync_toggle:
 260              	.LFB7:
  69:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_sync_toggle() {
 261              		.loc 1 69 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265 009c 80B5     		push	{r7, lr}
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 7, -8
 268              		.cfi_offset 14, -4
 269 009e 00AF     		add	r7, sp, #0
 270              		.cfi_def_cfa_register 7
  70:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedToggle(BSP_LED_2);
 271              		.loc 1 70 0
 272 00a0 2020     		movs	r0, #32
 273 00a2 FFF7FEFF 		bl	bspLedToggle
  71:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 274              		.loc 1 71 0
 275 00a6 00BF     		nop
 276 00a8 80BD     		pop	{r7, pc}
 277              		.cfi_endproc
 278              	.LFE7:
 280 00aa 00BF     		.align	2
 281              		.global	leds_sync_isOn
 282              		.thumb
 283              		.thumb_func
 285              	leds_sync_isOn:
 286              	.LFB8:
  72:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** uint8_t leds_sync_isOn() {
 287              		.loc 1 72 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291 00ac 80B5     		push	{r7, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 7, -8
 294              		.cfi_offset 14, -4
 295 00ae 82B0     		sub	sp, sp, #8
 296              		.cfi_def_cfa_offset 16
 297 00b0 00AF     		add	r7, sp, #0
 298              		.cfi_def_cfa_register 7
  73:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	uint32_t ui32Toggle = GPIOPinRead(BSP_LED_BASE, BSP_LED_2);
 299              		.loc 1 73 0
 300 00b2 2021     		movs	r1, #32
 301 00b4 0748     		ldr	r0, .L16
 302 00b6 FFF7FEFF 		bl	GPIOPinRead
 303 00ba 7860     		str	r0, [r7, #4]
  74:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     return (uint8_t)(ui32Toggle & BSP_LED_2)>>5;
 304              		.loc 1 74 0
 305 00bc 7B68     		ldr	r3, [r7, #4]
 306 00be DBB2     		uxtb	r3, r3
 307 00c0 5B11     		asrs	r3, r3, #5
 308 00c2 DBB2     		uxtb	r3, r3
 309 00c4 03F00103 		and	r3, r3, #1
 310 00c8 DBB2     		uxtb	r3, r3
  75:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 311              		.loc 1 75 0
 312 00ca 1846     		mov	r0, r3
 313 00cc 0837     		adds	r7, r7, #8
 314              		.cfi_def_cfa_offset 8
 315 00ce BD46     		mov	sp, r7
 316              		.cfi_def_cfa_register 13
 317              		@ sp needed
 318 00d0 80BD     		pop	{r7, pc}
 319              	.L17:
 320 00d2 00BF     		.align	2
 321              	.L16:
 322 00d4 00B00D40 		.word	1074638848
 323              		.cfi_endproc
 324              	.LFE8:
 326              		.align	2
 327              		.global	leds_radio_on
 328              		.thumb
 329              		.thumb_func
 331              	leds_radio_on:
 332              	.LFB9:
  76:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  77:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** // green
  78:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_radio_on() {
 333              		.loc 1 78 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337 00d8 80B5     		push	{r7, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 00da 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
  79:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedSet(BSP_LED_4);
 343              		.loc 1 79 0
 344 00dc 8020     		movs	r0, #128
 345 00de FFF7FEFF 		bl	bspLedSet
  80:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 346              		.loc 1 80 0
 347 00e2 00BF     		nop
 348 00e4 80BD     		pop	{r7, pc}
 349              		.cfi_endproc
 350              	.LFE9:
 352 00e6 00BF     		.align	2
 353              		.global	leds_radio_off
 354              		.thumb
 355              		.thumb_func
 357              	leds_radio_off:
 358              	.LFB10:
  81:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_radio_off() {
 359              		.loc 1 81 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 00e8 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 00ea 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
  82:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedClear(BSP_LED_4);
 369              		.loc 1 82 0
 370 00ec 8020     		movs	r0, #128
 371 00ee FFF7FEFF 		bl	bspLedClear
  83:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 372              		.loc 1 83 0
 373 00f2 00BF     		nop
 374 00f4 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE10:
 378 00f6 00BF     		.align	2
 379              		.global	leds_radio_toggle
 380              		.thumb
 381              		.thumb_func
 383              	leds_radio_toggle:
 384              	.LFB11:
  84:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_radio_toggle() {
 385              		.loc 1 84 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 00f8 80B5     		push	{r7, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 00fa 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
  85:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedToggle(BSP_LED_4);
 395              		.loc 1 85 0
 396 00fc 8020     		movs	r0, #128
 397 00fe FFF7FEFF 		bl	bspLedToggle
  86:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 398              		.loc 1 86 0
 399 0102 00BF     		nop
 400 0104 80BD     		pop	{r7, pc}
 401              		.cfi_endproc
 402              	.LFE11:
 404 0106 00BF     		.align	2
 405              		.global	leds_radio_isOn
 406              		.thumb
 407              		.thumb_func
 409              	leds_radio_isOn:
 410              	.LFB12:
  87:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** uint8_t leds_radio_isOn() {
 411              		.loc 1 87 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 8
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0108 80B5     		push	{r7, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 010a 82B0     		sub	sp, sp, #8
 420              		.cfi_def_cfa_offset 16
 421 010c 00AF     		add	r7, sp, #0
 422              		.cfi_def_cfa_register 7
  88:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	uint32_t ui32Toggle = GPIOPinRead(BSP_LED_BASE, BSP_LED_4);
 423              		.loc 1 88 0
 424 010e 8021     		movs	r1, #128
 425 0110 0548     		ldr	r0, .L23
 426 0112 FFF7FEFF 		bl	GPIOPinRead
 427 0116 7860     		str	r0, [r7, #4]
  89:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	return (uint8_t)(ui32Toggle & BSP_LED_4)>>7;
 428              		.loc 1 89 0
 429 0118 7B68     		ldr	r3, [r7, #4]
 430 011a DBB2     		uxtb	r3, r3
 431 011c DB09     		lsrs	r3, r3, #7
 432 011e DBB2     		uxtb	r3, r3
  90:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 433              		.loc 1 90 0
 434 0120 1846     		mov	r0, r3
 435 0122 0837     		adds	r7, r7, #8
 436              		.cfi_def_cfa_offset 8
 437 0124 BD46     		mov	sp, r7
 438              		.cfi_def_cfa_register 13
 439              		@ sp needed
 440 0126 80BD     		pop	{r7, pc}
 441              	.L24:
 442              		.align	2
 443              	.L23:
 444 0128 00B00D40 		.word	1074638848
 445              		.cfi_endproc
 446              	.LFE12:
 448              		.align	2
 449              		.global	leds_debug_on
 450              		.thumb
 451              		.thumb_func
 453              	leds_debug_on:
 454              	.LFB13:
  91:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
  92:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** // yellow
  93:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_debug_on() {
 455              		.loc 1 93 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 1, uses_anonymous_args = 0
 459 012c 80B5     		push	{r7, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 012e 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
  94:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedSet(BSP_LED_3);
 465              		.loc 1 94 0
 466 0130 4020     		movs	r0, #64
 467 0132 FFF7FEFF 		bl	bspLedSet
  95:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 468              		.loc 1 95 0
 469 0136 00BF     		nop
 470 0138 80BD     		pop	{r7, pc}
 471              		.cfi_endproc
 472              	.LFE13:
 474 013a 00BF     		.align	2
 475              		.global	leds_debug_off
 476              		.thumb
 477              		.thumb_func
 479              	leds_debug_off:
 480              	.LFB14:
  96:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_debug_off() {
 481              		.loc 1 96 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485 013c 80B5     		push	{r7, lr}
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 013e 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
  97:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedClear(BSP_LED_3);
 491              		.loc 1 97 0
 492 0140 4020     		movs	r0, #64
 493 0142 FFF7FEFF 		bl	bspLedClear
  98:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 494              		.loc 1 98 0
 495 0146 00BF     		nop
 496 0148 80BD     		pop	{r7, pc}
 497              		.cfi_endproc
 498              	.LFE14:
 500 014a 00BF     		.align	2
 501              		.global	leds_debug_toggle
 502              		.thumb
 503              		.thumb_func
 505              	leds_debug_toggle:
 506              	.LFB15:
  99:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void    leds_debug_toggle() {
 507              		.loc 1 99 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511 014c 80B5     		push	{r7, lr}
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 515 014e 00AF     		add	r7, sp, #0
 516              		.cfi_def_cfa_register 7
 100:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedToggle(BSP_LED_3);
 517              		.loc 1 100 0
 518 0150 4020     		movs	r0, #64
 519 0152 FFF7FEFF 		bl	bspLedToggle
 101:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 520              		.loc 1 101 0
 521 0156 00BF     		nop
 522 0158 80BD     		pop	{r7, pc}
 523              		.cfi_endproc
 524              	.LFE15:
 526 015a 00BF     		.align	2
 527              		.global	leds_debug_isOn
 528              		.thumb
 529              		.thumb_func
 531              	leds_debug_isOn:
 532              	.LFB16:
 102:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** uint8_t leds_debug_isOn() {
 533              		.loc 1 102 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 8
 536              		@ frame_needed = 1, uses_anonymous_args = 0
 537 015c 80B5     		push	{r7, lr}
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 7, -8
 540              		.cfi_offset 14, -4
 541 015e 82B0     		sub	sp, sp, #8
 542              		.cfi_def_cfa_offset 16
 543 0160 00AF     		add	r7, sp, #0
 544              		.cfi_def_cfa_register 7
 103:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	uint32_t ui32Toggle = GPIOPinRead(BSP_LED_BASE, BSP_LED_3);
 545              		.loc 1 103 0
 546 0162 4021     		movs	r1, #64
 547 0164 0748     		ldr	r0, .L30
 548 0166 FFF7FEFF 		bl	GPIOPinRead
 549 016a 7860     		str	r0, [r7, #4]
 104:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	return (uint8_t)(ui32Toggle & BSP_LED_3)>>6;
 550              		.loc 1 104 0
 551 016c 7B68     		ldr	r3, [r7, #4]
 552 016e DBB2     		uxtb	r3, r3
 553 0170 9B11     		asrs	r3, r3, #6
 554 0172 DBB2     		uxtb	r3, r3
 555 0174 03F00103 		and	r3, r3, #1
 556 0178 DBB2     		uxtb	r3, r3
 105:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 557              		.loc 1 105 0
 558 017a 1846     		mov	r0, r3
 559 017c 0837     		adds	r7, r7, #8
 560              		.cfi_def_cfa_offset 8
 561 017e BD46     		mov	sp, r7
 562              		.cfi_def_cfa_register 13
 563              		@ sp needed
 564 0180 80BD     		pop	{r7, pc}
 565              	.L31:
 566 0182 00BF     		.align	2
 567              	.L30:
 568 0184 00B00D40 		.word	1074638848
 569              		.cfi_endproc
 570              	.LFE16:
 572              		.align	2
 573              		.global	leds_all_on
 574              		.thumb
 575              		.thumb_func
 577              	leds_all_on:
 578              	.LFB17:
 106:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
 107:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** // all
 108:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void leds_all_on() {
 579              		.loc 1 108 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 1, uses_anonymous_args = 0
 583 0188 80B5     		push	{r7, lr}
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 7, -8
 586              		.cfi_offset 14, -4
 587 018a 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 109:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedSet(BSP_LED_ALL);
 589              		.loc 1 109 0
 590 018c F020     		movs	r0, #240
 591 018e FFF7FEFF 		bl	bspLedSet
 110:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 592              		.loc 1 110 0
 593 0192 00BF     		nop
 594 0194 80BD     		pop	{r7, pc}
 595              		.cfi_endproc
 596              	.LFE17:
 598 0196 00BF     		.align	2
 599              		.global	leds_all_off
 600              		.thumb
 601              		.thumb_func
 603              	leds_all_off:
 604              	.LFB18:
 111:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void leds_all_off() {
 605              		.loc 1 111 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 1, uses_anonymous_args = 0
 609 0198 80B5     		push	{r7, lr}
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 7, -8
 612              		.cfi_offset 14, -4
 613 019a 00AF     		add	r7, sp, #0
 614              		.cfi_def_cfa_register 7
 112:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedClear(BSP_LED_ALL);
 615              		.loc 1 112 0
 616 019c F020     		movs	r0, #240
 617 019e FFF7FEFF 		bl	bspLedClear
 113:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 618              		.loc 1 113 0
 619 01a2 00BF     		nop
 620 01a4 80BD     		pop	{r7, pc}
 621              		.cfi_endproc
 622              	.LFE18:
 624 01a6 00BF     		.align	2
 625              		.global	leds_all_toggle
 626              		.thumb
 627              		.thumb_func
 629              	leds_all_toggle:
 630              	.LFB19:
 114:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void leds_all_toggle() {
 631              		.loc 1 114 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635 01a8 80B5     		push	{r7, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 7, -8
 638              		.cfi_offset 14, -4
 639 01aa 00AF     		add	r7, sp, #0
 640              		.cfi_def_cfa_register 7
 115:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	bspLedToggle(BSP_LED_ALL);
 641              		.loc 1 115 0
 642 01ac F020     		movs	r0, #240
 643 01ae FFF7FEFF 		bl	bspLedToggle
 116:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 644              		.loc 1 116 0
 645 01b2 00BF     		nop
 646 01b4 80BD     		pop	{r7, pc}
 647              		.cfi_endproc
 648              	.LFE19:
 650 01b6 00BF     		.align	2
 651              		.global	leds_error_blink
 652              		.thumb
 653              		.thumb_func
 655              	leds_error_blink:
 656              	.LFB20:
 117:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
 118:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void leds_error_blink() {
 657              		.loc 1 118 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 8
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661 01b8 80B5     		push	{r7, lr}
 662              		.cfi_def_cfa_offset 8
 663              		.cfi_offset 7, -8
 664              		.cfi_offset 14, -4
 665 01ba 82B0     		sub	sp, sp, #8
 666              		.cfi_def_cfa_offset 16
 667 01bc 00AF     		add	r7, sp, #0
 668              		.cfi_def_cfa_register 7
 119:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    uint8_t i;
 120:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    volatile uint16_t delay;
 121:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    
 122:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    // turn all LEDs off
 123:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    bspLedClear(BSP_LED_ALL);
 669              		.loc 1 123 0
 670 01be F020     		movs	r0, #240
 671 01c0 FFF7FEFF 		bl	bspLedClear
 124:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****      
 125:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    // blink error LED for ~10s
 126:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    for (i=0;i<80;i++) {
 672              		.loc 1 126 0
 673 01c4 0023     		movs	r3, #0
 674 01c6 FB71     		strb	r3, [r7, #7]
 675 01c8 1FE0     		b	.L36
 676              	.L41:
 127:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	  bspLedToggle(BSP_LED_1);
 677              		.loc 1 127 0
 678 01ca 1020     		movs	r0, #16
 679 01cc FFF7FEFF 		bl	bspLedToggle
 128:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       for (delay=0xffff;delay>0;delay--);
 680              		.loc 1 128 0
 681 01d0 4FF6FF73 		movw	r3, #65535
 682 01d4 BB80     		strh	r3, [r7, #4]	@ movhi
 683 01d6 04E0     		b	.L37
 684              	.L38:
 685              		.loc 1 128 0 is_stmt 0 discriminator 3
 686 01d8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 687 01da 9BB2     		uxth	r3, r3
 688 01dc 013B     		subs	r3, r3, #1
 689 01de 9BB2     		uxth	r3, r3
 690 01e0 BB80     		strh	r3, [r7, #4]	@ movhi
 691              	.L37:
 692              		.loc 1 128 0 discriminator 1
 693 01e2 BB88     		ldrh	r3, [r7, #4]	@ movhi
 694 01e4 9BB2     		uxth	r3, r3
 695 01e6 002B     		cmp	r3, #0
 696 01e8 F6D1     		bne	.L38
 129:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       for (delay=0xffff;delay>0;delay--);
 697              		.loc 1 129 0 is_stmt 1
 698 01ea 4FF6FF73 		movw	r3, #65535
 699 01ee BB80     		strh	r3, [r7, #4]	@ movhi
 700 01f0 04E0     		b	.L39
 701              	.L40:
 702              		.loc 1 129 0 is_stmt 0 discriminator 3
 703 01f2 BB88     		ldrh	r3, [r7, #4]	@ movhi
 704 01f4 9BB2     		uxth	r3, r3
 705 01f6 013B     		subs	r3, r3, #1
 706 01f8 9BB2     		uxth	r3, r3
 707 01fa BB80     		strh	r3, [r7, #4]	@ movhi
 708              	.L39:
 709              		.loc 1 129 0 discriminator 1
 710 01fc BB88     		ldrh	r3, [r7, #4]	@ movhi
 711 01fe 9BB2     		uxth	r3, r3
 712 0200 002B     		cmp	r3, #0
 713 0202 F6D1     		bne	.L40
 126:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	  bspLedToggle(BSP_LED_1);
 714              		.loc 1 126 0 is_stmt 1 discriminator 2
 715 0204 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 716 0206 0133     		adds	r3, r3, #1
 717 0208 FB71     		strb	r3, [r7, #7]
 718              	.L36:
 126:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 	  bspLedToggle(BSP_LED_1);
 719              		.loc 1 126 0 is_stmt 0 discriminator 1
 720 020a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 721 020c 4F2B     		cmp	r3, #79
 722 020e DCD9     		bls	.L41
 130:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    }
 131:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 723              		.loc 1 131 0 is_stmt 1
 724 0210 00BF     		nop
 725 0212 0837     		adds	r7, r7, #8
 726              		.cfi_def_cfa_offset 8
 727 0214 BD46     		mov	sp, r7
 728              		.cfi_def_cfa_register 13
 729              		@ sp needed
 730 0216 80BD     		pop	{r7, pc}
 731              		.cfi_endproc
 732              	.LFE20:
 734              		.align	2
 735              		.global	leds_circular_shift
 736              		.thumb
 737              		.thumb_func
 739              	leds_circular_shift:
 740              	.LFB21:
 132:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
 133:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void leds_circular_shift() {
 741              		.loc 1 133 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 8
 744              		@ frame_needed = 1, uses_anonymous_args = 0
 745 0218 80B5     		push	{r7, lr}
 746              		.cfi_def_cfa_offset 8
 747              		.cfi_offset 7, -8
 748              		.cfi_offset 14, -4
 749 021a 82B0     		sub	sp, sp, #8
 750              		.cfi_def_cfa_offset 16
 751 021c 00AF     		add	r7, sp, #0
 752              		.cfi_def_cfa_register 7
 134:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    uint8_t i;
 135:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    volatile uint16_t delay;
 136:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    
 137:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    // turn all LEDs off
 138:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    bspLedClear(BSP_LED_ALL);
 753              		.loc 1 138 0
 754 021e F020     		movs	r0, #240
 755 0220 FFF7FEFF 		bl	bspLedClear
 139:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****      
 140:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    // incrementally turn LED on
 141:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    for (i=0;i<10;i++) {
 756              		.loc 1 141 0
 757 0224 0023     		movs	r3, #0
 758 0226 FB71     		strb	r3, [r7, #7]
 759 0228 4EE0     		b	.L43
 760              	.L52:
 142:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_1);
 761              		.loc 1 142 0
 762 022a 1020     		movs	r0, #16
 763 022c FFF7FEFF 		bl	bspLedSet
 143:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       for (delay=0xffff;delay>0;delay--);
 764              		.loc 1 143 0
 765 0230 4FF6FF73 		movw	r3, #65535
 766 0234 BB80     		strh	r3, [r7, #4]	@ movhi
 767 0236 04E0     		b	.L44
 768              	.L45:
 769              		.loc 1 143 0 is_stmt 0 discriminator 3
 770 0238 BB88     		ldrh	r3, [r7, #4]	@ movhi
 771 023a 9BB2     		uxth	r3, r3
 772 023c 013B     		subs	r3, r3, #1
 773 023e 9BB2     		uxth	r3, r3
 774 0240 BB80     		strh	r3, [r7, #4]	@ movhi
 775              	.L44:
 776              		.loc 1 143 0 discriminator 1
 777 0242 BB88     		ldrh	r3, [r7, #4]	@ movhi
 778 0244 9BB2     		uxth	r3, r3
 779 0246 002B     		cmp	r3, #0
 780 0248 F6D1     		bne	.L45
 144:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedClear(BSP_LED_1);
 781              		.loc 1 144 0 is_stmt 1
 782 024a 1020     		movs	r0, #16
 783 024c FFF7FEFF 		bl	bspLedClear
 145:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_2);
 784              		.loc 1 145 0
 785 0250 2020     		movs	r0, #32
 786 0252 FFF7FEFF 		bl	bspLedSet
 146:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       for (delay=0xffff;delay>0;delay--);
 787              		.loc 1 146 0
 788 0256 4FF6FF73 		movw	r3, #65535
 789 025a BB80     		strh	r3, [r7, #4]	@ movhi
 790 025c 04E0     		b	.L46
 791              	.L47:
 792              		.loc 1 146 0 is_stmt 0 discriminator 3
 793 025e BB88     		ldrh	r3, [r7, #4]	@ movhi
 794 0260 9BB2     		uxth	r3, r3
 795 0262 013B     		subs	r3, r3, #1
 796 0264 9BB2     		uxth	r3, r3
 797 0266 BB80     		strh	r3, [r7, #4]	@ movhi
 798              	.L46:
 799              		.loc 1 146 0 discriminator 1
 800 0268 BB88     		ldrh	r3, [r7, #4]	@ movhi
 801 026a 9BB2     		uxth	r3, r3
 802 026c 002B     		cmp	r3, #0
 803 026e F6D1     		bne	.L47
 147:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedClear(BSP_LED_2);
 804              		.loc 1 147 0 is_stmt 1
 805 0270 2020     		movs	r0, #32
 806 0272 FFF7FEFF 		bl	bspLedClear
 148:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_3);
 807              		.loc 1 148 0
 808 0276 4020     		movs	r0, #64
 809 0278 FFF7FEFF 		bl	bspLedSet
 149:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       for (delay=0xffff;delay>0;delay--);
 810              		.loc 1 149 0
 811 027c 4FF6FF73 		movw	r3, #65535
 812 0280 BB80     		strh	r3, [r7, #4]	@ movhi
 813 0282 04E0     		b	.L48
 814              	.L49:
 815              		.loc 1 149 0 is_stmt 0 discriminator 3
 816 0284 BB88     		ldrh	r3, [r7, #4]	@ movhi
 817 0286 9BB2     		uxth	r3, r3
 818 0288 013B     		subs	r3, r3, #1
 819 028a 9BB2     		uxth	r3, r3
 820 028c BB80     		strh	r3, [r7, #4]	@ movhi
 821              	.L48:
 822              		.loc 1 149 0 discriminator 1
 823 028e BB88     		ldrh	r3, [r7, #4]	@ movhi
 824 0290 9BB2     		uxth	r3, r3
 825 0292 002B     		cmp	r3, #0
 826 0294 F6D1     		bne	.L49
 150:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedClear(BSP_LED_3);
 827              		.loc 1 150 0 is_stmt 1
 828 0296 4020     		movs	r0, #64
 829 0298 FFF7FEFF 		bl	bspLedClear
 151:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_4);
 830              		.loc 1 151 0
 831 029c 8020     		movs	r0, #128
 832 029e FFF7FEFF 		bl	bspLedSet
 152:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       for (delay=0xffff;delay>0;delay--);
 833              		.loc 1 152 0
 834 02a2 4FF6FF73 		movw	r3, #65535
 835 02a6 BB80     		strh	r3, [r7, #4]	@ movhi
 836 02a8 04E0     		b	.L50
 837              	.L51:
 838              		.loc 1 152 0 is_stmt 0 discriminator 3
 839 02aa BB88     		ldrh	r3, [r7, #4]	@ movhi
 840 02ac 9BB2     		uxth	r3, r3
 841 02ae 013B     		subs	r3, r3, #1
 842 02b0 9BB2     		uxth	r3, r3
 843 02b2 BB80     		strh	r3, [r7, #4]	@ movhi
 844              	.L50:
 845              		.loc 1 152 0 discriminator 1
 846 02b4 BB88     		ldrh	r3, [r7, #4]	@ movhi
 847 02b6 9BB2     		uxth	r3, r3
 848 02b8 002B     		cmp	r3, #0
 849 02ba F6D1     		bne	.L51
 153:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedClear(BSP_LED_ALL);
 850              		.loc 1 153 0 is_stmt 1 discriminator 2
 851 02bc F020     		movs	r0, #240
 852 02be FFF7FEFF 		bl	bspLedClear
 141:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_1);
 853              		.loc 1 141 0 discriminator 2
 854 02c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 855 02c4 0133     		adds	r3, r3, #1
 856 02c6 FB71     		strb	r3, [r7, #7]
 857              	.L43:
 141:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_1);
 858              		.loc 1 141 0 is_stmt 0 discriminator 1
 859 02c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 860 02ca 092B     		cmp	r3, #9
 861 02cc ADD9     		bls	.L52
 154:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    }
 155:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 862              		.loc 1 155 0 is_stmt 1
 863 02ce 00BF     		nop
 864 02d0 0837     		adds	r7, r7, #8
 865              		.cfi_def_cfa_offset 8
 866 02d2 BD46     		mov	sp, r7
 867              		.cfi_def_cfa_register 13
 868              		@ sp needed
 869 02d4 80BD     		pop	{r7, pc}
 870              		.cfi_endproc
 871              	.LFE21:
 873 02d6 00BF     		.align	2
 874              		.global	leds_increment
 875              		.thumb
 876              		.thumb_func
 878              	leds_increment:
 879              	.LFB22:
 156:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
 157:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** void leds_increment() {
 880              		.loc 1 157 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 8
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884 02d8 80B5     		push	{r7, lr}
 885              		.cfi_def_cfa_offset 8
 886              		.cfi_offset 7, -8
 887              		.cfi_offset 14, -4
 888 02da 82B0     		sub	sp, sp, #8
 889              		.cfi_def_cfa_offset 16
 890 02dc 00AF     		add	r7, sp, #0
 891              		.cfi_def_cfa_register 7
 158:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****   uint8_t i;
 159:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    volatile uint16_t delay;
 160:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    
 161:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    // turn all LEDs off
 162:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    bspLedClear(BSP_LED_ALL);
 892              		.loc 1 162 0
 893 02de F020     		movs	r0, #240
 894 02e0 FFF7FEFF 		bl	bspLedClear
 163:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****      
 164:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    // incrementally turn LED on
 165:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    for (i=0;i<10;i++) {
 895              		.loc 1 165 0
 896 02e4 0023     		movs	r3, #0
 897 02e6 FB71     		strb	r3, [r7, #7]
 898 02e8 45E0     		b	.L54
 899              	.L63:
 166:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_1);
 900              		.loc 1 166 0
 901 02ea 1020     		movs	r0, #16
 902 02ec FFF7FEFF 		bl	bspLedSet
 167:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       for (delay=0xffff;delay>0;delay--);
 903              		.loc 1 167 0
 904 02f0 4FF6FF73 		movw	r3, #65535
 905 02f4 BB80     		strh	r3, [r7, #4]	@ movhi
 906 02f6 04E0     		b	.L55
 907              	.L56:
 908              		.loc 1 167 0 is_stmt 0 discriminator 3
 909 02f8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 910 02fa 9BB2     		uxth	r3, r3
 911 02fc 013B     		subs	r3, r3, #1
 912 02fe 9BB2     		uxth	r3, r3
 913 0300 BB80     		strh	r3, [r7, #4]	@ movhi
 914              	.L55:
 915              		.loc 1 167 0 discriminator 1
 916 0302 BB88     		ldrh	r3, [r7, #4]	@ movhi
 917 0304 9BB2     		uxth	r3, r3
 918 0306 002B     		cmp	r3, #0
 919 0308 F6D1     		bne	.L56
 168:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_2);
 920              		.loc 1 168 0 is_stmt 1
 921 030a 2020     		movs	r0, #32
 922 030c FFF7FEFF 		bl	bspLedSet
 169:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       for (delay=0xffff;delay>0;delay--);
 923              		.loc 1 169 0
 924 0310 4FF6FF73 		movw	r3, #65535
 925 0314 BB80     		strh	r3, [r7, #4]	@ movhi
 926 0316 04E0     		b	.L57
 927              	.L58:
 928              		.loc 1 169 0 is_stmt 0 discriminator 3
 929 0318 BB88     		ldrh	r3, [r7, #4]	@ movhi
 930 031a 9BB2     		uxth	r3, r3
 931 031c 013B     		subs	r3, r3, #1
 932 031e 9BB2     		uxth	r3, r3
 933 0320 BB80     		strh	r3, [r7, #4]	@ movhi
 934              	.L57:
 935              		.loc 1 169 0 discriminator 1
 936 0322 BB88     		ldrh	r3, [r7, #4]	@ movhi
 937 0324 9BB2     		uxth	r3, r3
 938 0326 002B     		cmp	r3, #0
 939 0328 F6D1     		bne	.L58
 170:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_3);
 940              		.loc 1 170 0 is_stmt 1
 941 032a 4020     		movs	r0, #64
 942 032c FFF7FEFF 		bl	bspLedSet
 171:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       for (delay=0xffff;delay>0;delay--);
 943              		.loc 1 171 0
 944 0330 4FF6FF73 		movw	r3, #65535
 945 0334 BB80     		strh	r3, [r7, #4]	@ movhi
 946 0336 04E0     		b	.L59
 947              	.L60:
 948              		.loc 1 171 0 is_stmt 0 discriminator 3
 949 0338 BB88     		ldrh	r3, [r7, #4]	@ movhi
 950 033a 9BB2     		uxth	r3, r3
 951 033c 013B     		subs	r3, r3, #1
 952 033e 9BB2     		uxth	r3, r3
 953 0340 BB80     		strh	r3, [r7, #4]	@ movhi
 954              	.L59:
 955              		.loc 1 171 0 discriminator 1
 956 0342 BB88     		ldrh	r3, [r7, #4]	@ movhi
 957 0344 9BB2     		uxth	r3, r3
 958 0346 002B     		cmp	r3, #0
 959 0348 F6D1     		bne	.L60
 172:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_4);
 960              		.loc 1 172 0 is_stmt 1
 961 034a 8020     		movs	r0, #128
 962 034c FFF7FEFF 		bl	bspLedSet
 173:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       for (delay=0xffff;delay>0;delay--);
 963              		.loc 1 173 0
 964 0350 4FF6FF73 		movw	r3, #65535
 965 0354 BB80     		strh	r3, [r7, #4]	@ movhi
 966 0356 04E0     		b	.L61
 967              	.L62:
 968              		.loc 1 173 0 is_stmt 0 discriminator 3
 969 0358 BB88     		ldrh	r3, [r7, #4]	@ movhi
 970 035a 9BB2     		uxth	r3, r3
 971 035c 013B     		subs	r3, r3, #1
 972 035e 9BB2     		uxth	r3, r3
 973 0360 BB80     		strh	r3, [r7, #4]	@ movhi
 974              	.L61:
 975              		.loc 1 173 0 discriminator 1
 976 0362 BB88     		ldrh	r3, [r7, #4]	@ movhi
 977 0364 9BB2     		uxth	r3, r3
 978 0366 002B     		cmp	r3, #0
 979 0368 F6D1     		bne	.L62
 174:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedClear(BSP_LED_ALL);
 980              		.loc 1 174 0 is_stmt 1 discriminator 2
 981 036a F020     		movs	r0, #240
 982 036c FFF7FEFF 		bl	bspLedClear
 165:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_1);
 983              		.loc 1 165 0 discriminator 2
 984 0370 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 985 0372 0133     		adds	r3, r3, #1
 986 0374 FB71     		strb	r3, [r7, #7]
 987              	.L54:
 165:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****       bspLedSet(BSP_LED_1);
 988              		.loc 1 165 0 is_stmt 0 discriminator 1
 989 0376 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 990 0378 092B     		cmp	r3, #9
 991 037a B6D9     		bls	.L63
 175:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****    }
 176:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 992              		.loc 1 176 0 is_stmt 1
 993 037c 00BF     		nop
 994 037e 0837     		adds	r7, r7, #8
 995              		.cfi_def_cfa_offset 8
 996 0380 BD46     		mov	sp, r7
 997              		.cfi_def_cfa_register 13
 998              		@ sp needed
 999 0382 80BD     		pop	{r7, pc}
 1000              		.cfi_endproc
 1001              	.LFE22:
 1003              		.align	2
 1004              		.global	bspLedSet
 1005              		.thumb
 1006              		.thumb_func
 1008              	bspLedSet:
 1009              	.LFB23:
 177:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
 178:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** //=========================== private =========================================
 179:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
 180:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** port_INLINE void bspLedSet(uint8_t ui8Leds)
 181:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** {
 1010              		.loc 1 181 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 8
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014 0384 80B5     		push	{r7, lr}
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 7, -8
 1017              		.cfi_offset 14, -4
 1018 0386 82B0     		sub	sp, sp, #8
 1019              		.cfi_def_cfa_offset 16
 1020 0388 00AF     		add	r7, sp, #0
 1021              		.cfi_def_cfa_register 7
 1022 038a 0346     		mov	r3, r0
 1023 038c FB71     		strb	r3, [r7, #7]
 182:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     //
 183:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     // Turn on specified LEDs
 184:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     //
 185:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     GPIOPinWrite(BSP_LED_BASE, ui8Leds, ui8Leds);
 1024              		.loc 1 185 0
 1025 038e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1026 0390 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1027 0392 1946     		mov	r1, r3
 1028 0394 0348     		ldr	r0, .L65
 1029 0396 FFF7FEFF 		bl	GPIOPinWrite
 186:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 1030              		.loc 1 186 0
 1031 039a 00BF     		nop
 1032 039c 0837     		adds	r7, r7, #8
 1033              		.cfi_def_cfa_offset 8
 1034 039e BD46     		mov	sp, r7
 1035              		.cfi_def_cfa_register 13
 1036              		@ sp needed
 1037 03a0 80BD     		pop	{r7, pc}
 1038              	.L66:
 1039 03a2 00BF     		.align	2
 1040              	.L65:
 1041 03a4 00B00D40 		.word	1074638848
 1042              		.cfi_endproc
 1043              	.LFE23:
 1045              		.align	2
 1046              		.global	bspLedClear
 1047              		.thumb
 1048              		.thumb_func
 1050              	bspLedClear:
 1051              	.LFB24:
 187:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
 188:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** port_INLINE void bspLedClear(uint8_t ui8Leds)
 189:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** {
 1052              		.loc 1 189 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 8
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 03a8 80B5     		push	{r7, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 7, -8
 1059              		.cfi_offset 14, -4
 1060 03aa 82B0     		sub	sp, sp, #8
 1061              		.cfi_def_cfa_offset 16
 1062 03ac 00AF     		add	r7, sp, #0
 1063              		.cfi_def_cfa_register 7
 1064 03ae 0346     		mov	r3, r0
 1065 03b0 FB71     		strb	r3, [r7, #7]
 190:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     //
 191:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     // Turn off specified LEDs
 192:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     //
 193:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     GPIOPinWrite(BSP_LED_BASE, ui8Leds, 0);
 1066              		.loc 1 193 0
 1067 03b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1068 03b4 0022     		movs	r2, #0
 1069 03b6 1946     		mov	r1, r3
 1070 03b8 0348     		ldr	r0, .L68
 1071 03ba FFF7FEFF 		bl	GPIOPinWrite
 194:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 1072              		.loc 1 194 0
 1073 03be 00BF     		nop
 1074 03c0 0837     		adds	r7, r7, #8
 1075              		.cfi_def_cfa_offset 8
 1076 03c2 BD46     		mov	sp, r7
 1077              		.cfi_def_cfa_register 13
 1078              		@ sp needed
 1079 03c4 80BD     		pop	{r7, pc}
 1080              	.L69:
 1081 03c6 00BF     		.align	2
 1082              	.L68:
 1083 03c8 00B00D40 		.word	1074638848
 1084              		.cfi_endproc
 1085              	.LFE24:
 1087              		.align	2
 1088              		.global	bspLedToggle
 1089              		.thumb
 1090              		.thumb_func
 1092              	bspLedToggle:
 1093              	.LFB25:
 195:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
 196:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** port_INLINE void bspLedToggle(uint8_t ui8Leds)
 197:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** {
 1094              		.loc 1 197 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 16
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098 03cc 80B5     		push	{r7, lr}
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 7, -8
 1101              		.cfi_offset 14, -4
 1102 03ce 84B0     		sub	sp, sp, #16
 1103              		.cfi_def_cfa_offset 24
 1104 03d0 00AF     		add	r7, sp, #0
 1105              		.cfi_def_cfa_register 7
 1106 03d2 0346     		mov	r3, r0
 1107 03d4 FB71     		strb	r3, [r7, #7]
 198:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     //
 199:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     // Get current pin values of selected bits
 200:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     //
 201:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     uint32_t ui32Toggle = GPIOPinRead(BSP_LED_BASE, ui8Leds);
 1108              		.loc 1 201 0
 1109 03d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1110 03d8 1946     		mov	r1, r3
 1111 03da 0A48     		ldr	r0, .L71
 1112 03dc FFF7FEFF 		bl	GPIOPinRead
 1113 03e0 F860     		str	r0, [r7, #12]
 202:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
 203:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     //
 204:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     // Invert selected bits
 205:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     //
 206:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     ui32Toggle = (~ui32Toggle) & ui8Leds;
 1114              		.loc 1 206 0
 1115 03e2 FB68     		ldr	r3, [r7, #12]
 1116 03e4 DA43     		mvns	r2, r3
 1117 03e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1118 03e8 1340     		ands	r3, r3, r2
 1119 03ea FB60     		str	r3, [r7, #12]
 207:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** 
 208:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     //
 209:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     // Set GPIO
 210:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     //
 211:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c ****     GPIOPinWrite(BSP_LED_BASE, ui8Leds, ui32Toggle);
 1120              		.loc 1 211 0
 1121 03ec FB68     		ldr	r3, [r7, #12]
 1122 03ee DAB2     		uxtb	r2, r3
 1123 03f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1124 03f2 1946     		mov	r1, r3
 1125 03f4 0348     		ldr	r0, .L71
 1126 03f6 FFF7FEFF 		bl	GPIOPinWrite
 212:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/leds.c **** }
 1127              		.loc 1 212 0
 1128 03fa 00BF     		nop
 1129 03fc 1037     		adds	r7, r7, #16
 1130              		.cfi_def_cfa_offset 8
 1131 03fe BD46     		mov	sp, r7
 1132              		.cfi_def_cfa_register 13
 1133              		@ sp needed
 1134 0400 80BD     		pop	{r7, pc}
 1135              	.L72:
 1136 0402 00BF     		.align	2
 1137              	.L71:
 1138 0404 00B00D40 		.word	1074638848
 1139              		.cfi_endproc
 1140              	.LFE25:
 1142              	.Letext0:
 1143              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1144              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1145              		.file 4 "bsp/boards/openmote-cc2538/board_info.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 leds.c
     /tmp/cc4Fogbr.s:20     .rodata:0000000000000000 $d
     /tmp/cc4Fogbr.s:23     .rodata:0000000000000000 rreg_uriquery
     /tmp/cc4Fogbr.s:28     .rodata:0000000000000008 infoBoardname
     /tmp/cc4Fogbr.s:33     .rodata:0000000000000010 infouCName
     /tmp/cc4Fogbr.s:38     .rodata:0000000000000018 infoRadioName
     /tmp/cc4Fogbr.s:41     .text:0000000000000000 $t
     /tmp/cc4Fogbr.s:46     .text:0000000000000000 leds_init
     /tmp/cc4Fogbr.s:74     .text:000000000000001c $d
     /tmp/cc4Fogbr.s:78     .text:0000000000000020 $t
     /tmp/cc4Fogbr.s:83     .text:0000000000000020 leds_error_on
     /tmp/cc4Fogbr.s:1008   .text:0000000000000384 bspLedSet
     /tmp/cc4Fogbr.s:109    .text:0000000000000030 leds_error_off
     /tmp/cc4Fogbr.s:1050   .text:00000000000003a8 bspLedClear
     /tmp/cc4Fogbr.s:135    .text:0000000000000040 leds_error_toggle
     /tmp/cc4Fogbr.s:1092   .text:00000000000003cc bspLedToggle
     /tmp/cc4Fogbr.s:161    .text:0000000000000050 leds_error_isOn
     /tmp/cc4Fogbr.s:198    .text:0000000000000078 $d
     /tmp/cc4Fogbr.s:202    .text:000000000000007c $t
     /tmp/cc4Fogbr.s:207    .text:000000000000007c leds_sync_on
     /tmp/cc4Fogbr.s:233    .text:000000000000008c leds_sync_off
     /tmp/cc4Fogbr.s:259    .text:000000000000009c leds_sync_toggle
     /tmp/cc4Fogbr.s:285    .text:00000000000000ac leds_sync_isOn
     /tmp/cc4Fogbr.s:322    .text:00000000000000d4 $d
     /tmp/cc4Fogbr.s:326    .text:00000000000000d8 $t
     /tmp/cc4Fogbr.s:331    .text:00000000000000d8 leds_radio_on
     /tmp/cc4Fogbr.s:357    .text:00000000000000e8 leds_radio_off
     /tmp/cc4Fogbr.s:383    .text:00000000000000f8 leds_radio_toggle
     /tmp/cc4Fogbr.s:409    .text:0000000000000108 leds_radio_isOn
     /tmp/cc4Fogbr.s:444    .text:0000000000000128 $d
     /tmp/cc4Fogbr.s:448    .text:000000000000012c $t
     /tmp/cc4Fogbr.s:453    .text:000000000000012c leds_debug_on
     /tmp/cc4Fogbr.s:479    .text:000000000000013c leds_debug_off
     /tmp/cc4Fogbr.s:505    .text:000000000000014c leds_debug_toggle
     /tmp/cc4Fogbr.s:531    .text:000000000000015c leds_debug_isOn
     /tmp/cc4Fogbr.s:568    .text:0000000000000184 $d
     /tmp/cc4Fogbr.s:572    .text:0000000000000188 $t
     /tmp/cc4Fogbr.s:577    .text:0000000000000188 leds_all_on
     /tmp/cc4Fogbr.s:603    .text:0000000000000198 leds_all_off
     /tmp/cc4Fogbr.s:629    .text:00000000000001a8 leds_all_toggle
     /tmp/cc4Fogbr.s:655    .text:00000000000001b8 leds_error_blink
     /tmp/cc4Fogbr.s:739    .text:0000000000000218 leds_circular_shift
     /tmp/cc4Fogbr.s:878    .text:00000000000002d8 leds_increment
     /tmp/cc4Fogbr.s:1041   .text:00000000000003a4 $d
     /tmp/cc4Fogbr.s:1045   .text:00000000000003a8 $t
     /tmp/cc4Fogbr.s:1083   .text:00000000000003c8 $d
     /tmp/cc4Fogbr.s:1087   .text:00000000000003cc $t
     /tmp/cc4Fogbr.s:1138   .text:0000000000000404 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.8e445c0106ab795ab4704214cba6f089
                           .group:0000000000000000 wm4._newlib_version.h.4.ad342815780c8db09778091a421b5b5b
                           .group:0000000000000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.b82bf99f69d6a5c085fc866de0d3eb9b
                           .group:0000000000000000 wm4._stdint.h.10.7a5f60e6741af4a5594a3867d347e1f9
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.hw_memmap.h.39.19283c377d449c9bca5fdd8ccb62628c
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.gpio.h.41.604fa3d9f70fb140a75ada50bffeaeff
                           .group:0000000000000000 wm4.newlib.h.8.36dd0417407b0a085bc04c49cc2ed13a
                           .group:0000000000000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:0000000000000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:0000000000000000 wm4.reent.h.17.850ac0a908956e5fb788be1b80de2f32
                           .group:0000000000000000 wm4.cdefs.h.47.ba62642086d429b4f95c2381cae1c0aa
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.board_info.h.22.1291259c351bc018e4d4402148b3c6db
                           .group:0000000000000000 wm4.toolchain_defs.h.2.1de8df52ab2567aa1aa0a288d2325900
                           .group:0000000000000000 wm4.leds.h.2.746f2c4bd224f28046dfa242de7e3f3d

UNDEFINED SYMBOLS
GPIOPinTypeGPIOOutput
GPIOPinWrite
GPIOPinRead
