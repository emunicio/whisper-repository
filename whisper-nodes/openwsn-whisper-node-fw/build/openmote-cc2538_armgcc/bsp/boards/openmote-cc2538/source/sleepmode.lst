   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"sleepmode.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	SleepModeIntRegister
  21              		.thumb
  22              		.thumb_func
  24              	SleepModeIntRegister:
  25              	.LFB0:
  26              		.file 1 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c"
   1:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** /******************************************************************************
   2:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  Filename:       sleepmode.c
   3:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  Revised:        $Date: 2013-03-22 16:13:31 +0100 (Fri, 22 Mar 2013) $
   4:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  Revision:       $Revision: 9513 $
   5:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *
   6:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  Description:    Driver for the Sleep Mode Timer Module.
   7:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *
   8:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
   9:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *
  10:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *
  11:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  Redistribution and use in source and binary forms, with or without
  12:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  modification, are permitted provided that the following conditions
  13:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  are met:
  14:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *
  15:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *    Redistributions of source code must retain the above copyright
  16:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *    notice, this list of conditions and the following disclaimer.
  17:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *
  18:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *    Redistributions in binary form must reproduce the above copyright
  19:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *    notice, this list of conditions and the following disclaimer in the
  20:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *    documentation and/or other materials provided with the distribution.
  21:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *
  22:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *    Neither the name of Texas Instruments Incorporated nor the names of
  23:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *    its contributors may be used to endorse or promote products derived
  24:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *    from this software without specific prior written permission.
  25:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *
  26:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  27:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  28:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  29:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  30:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  31:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  32:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  33:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  34:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  35:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** *
  38:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** ******************************************************************************/
  39:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
  40:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
  41:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
  42:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \addtogroup sleepmodetimer_api
  43:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! @{
  44:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
  45:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
  46:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
  47:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** #include <headers/hw_ints.h>
  48:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** #include <headers/hw_memmap.h>
  49:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** #include <headers/hw_smwdthrosc.h>
  50:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** #include "debug.h"
  51:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** #include "interrupt.h"
  52:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** #include "sleepmode.h"
  53:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
  54:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
  55:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
  56:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! Registers an interrupt handler for Sleep Mode Timer interrupt
  57:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
  58:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \param pfnHandler is a pointer to the function to be called when the
  59:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! Sleep Mode Timer interrupt occurs.
  60:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
  61:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! This function does the actual registering of the interrupt handler, thus
  62:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! enabling the global interrupt in the interrupt controller.
  63:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
  64:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \sa IntRegister() for important information about registering interrupt
  65:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! handlers.
  66:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
  67:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \return None
  68:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
  69:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
  70:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** void
  71:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** SleepModeIntRegister(void (*pfnHandler)(void))
  72:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** {
  27              		.loc 1 72 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  73:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     //
  74:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     // Register the interrupt handler.
  75:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     //
  76:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     IntRegister(INT_SMTIM, pfnHandler);
  40              		.loc 1 76 0
  41 0008 7968     		ldr	r1, [r7, #4]
  42 000a A120     		movs	r0, #161
  43 000c FFF7FEFF 		bl	IntRegister
  77:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
  78:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     //
  79:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     // Enable the sleep mode timer interrupt.
  80:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     //
  81:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     IntEnable(INT_SMTIM);
  44              		.loc 1 81 0
  45 0010 A120     		movs	r0, #161
  46 0012 FFF7FEFF 		bl	IntEnable
  82:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** }
  47              		.loc 1 82 0
  48 0016 00BF     		nop
  49 0018 0837     		adds	r7, r7, #8
  50              		.cfi_def_cfa_offset 8
  51 001a BD46     		mov	sp, r7
  52              		.cfi_def_cfa_register 13
  53              		@ sp needed
  54 001c 80BD     		pop	{r7, pc}
  55              		.cfi_endproc
  56              	.LFE0:
  58 001e 00BF     		.align	2
  59              		.global	SleepModeIntUnregister
  60              		.thumb
  61              		.thumb_func
  63              	SleepModeIntUnregister:
  64              	.LFB1:
  83:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
  84:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
  85:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
  86:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! Unregisters an interrupt handler for the sleep mode timer interrupt
  87:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
  88:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! This function does the actual unregistering of the interrupt handler.  This
  89:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! function clears the handler to be called when a compare
  90:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! interrupt occurs and masks off the interrupt in the interrupt controller
  91:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! so that the interrupt handler no longer is called.
  92:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
  93:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \sa IntRegister() for important information about registering interrupt
  94:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! handlers.
  95:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
  96:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \return None
  97:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
  98:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
  99:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** void
 100:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** SleepModeIntUnregister(void)
 101:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** {
  65              		.loc 1 101 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69 0020 80B5     		push	{r7, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 7, -8
  72              		.cfi_offset 14, -4
  73 0022 00AF     		add	r7, sp, #0
  74              		.cfi_def_cfa_register 7
 102:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     //
 103:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     // Disable the interrupt.
 104:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     //
 105:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     IntDisable(INT_SMTIM);
  75              		.loc 1 105 0
  76 0024 A120     		movs	r0, #161
  77 0026 FFF7FEFF 		bl	IntDisable
 106:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 107:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     //
 108:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     // Unregister the interrupt handler.
 109:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     //
 110:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     IntUnregister(INT_SMTIM);
  78              		.loc 1 110 0
  79 002a A120     		movs	r0, #161
  80 002c FFF7FEFF 		bl	IntUnregister
 111:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** }
  81              		.loc 1 111 0
  82 0030 00BF     		nop
  83 0032 80BD     		pop	{r7, pc}
  84              		.cfi_endproc
  85              	.LFE1:
  87              		.align	2
  88              		.global	SleepModeTimerCountGet
  89              		.thumb
  90              		.thumb_func
  92              	SleepModeTimerCountGet:
  93              	.LFB2:
 112:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 113:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 114:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 115:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! Get current value of the sleep mode timer
 116:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 117:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! This function returns the current value of the sleep mode timer (that is,
 118:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! the timer count)
 119:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 120:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \return Current value of the sleep mode timer
 121:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 122:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 123:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** uint32_t
 124:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** SleepModeTimerCountGet(void)
 125:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** {
  94              		.loc 1 125 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 8
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0034 80B4     		push	{r7}
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0036 83B0     		sub	sp, sp, #12
 103              		.cfi_def_cfa_offset 16
 104 0038 00AF     		add	r7, sp, #0
 105              		.cfi_def_cfa_register 7
 126:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     uint32_t ui32Val;
 127:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 128:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val = HWREG(SMWDTHROSC_ST0);
 106              		.loc 1 128 0
 107 003a 0D4B     		ldr	r3, .L5
 108 003c 1B68     		ldr	r3, [r3]
 109 003e 7B60     		str	r3, [r7, #4]
 129:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_ST1) << 8;
 110              		.loc 1 129 0
 111 0040 0C4B     		ldr	r3, .L5+4
 112 0042 1B68     		ldr	r3, [r3]
 113 0044 1B02     		lsls	r3, r3, #8
 114 0046 7A68     		ldr	r2, [r7, #4]
 115 0048 1343     		orrs	r3, r3, r2
 116 004a 7B60     		str	r3, [r7, #4]
 130:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_ST2) << 16;
 117              		.loc 1 130 0
 118 004c 0A4B     		ldr	r3, .L5+8
 119 004e 1B68     		ldr	r3, [r3]
 120 0050 1B04     		lsls	r3, r3, #16
 121 0052 7A68     		ldr	r2, [r7, #4]
 122 0054 1343     		orrs	r3, r3, r2
 123 0056 7B60     		str	r3, [r7, #4]
 131:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_ST3) << 24;
 124              		.loc 1 131 0
 125 0058 084B     		ldr	r3, .L5+12
 126 005a 1B68     		ldr	r3, [r3]
 127 005c 1B06     		lsls	r3, r3, #24
 128 005e 7A68     		ldr	r2, [r7, #4]
 129 0060 1343     		orrs	r3, r3, r2
 130 0062 7B60     		str	r3, [r7, #4]
 132:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 133:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     return ui32Val;
 131              		.loc 1 133 0
 132 0064 7B68     		ldr	r3, [r7, #4]
 134:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** }
 133              		.loc 1 134 0
 134 0066 1846     		mov	r0, r3
 135 0068 0C37     		adds	r7, r7, #12
 136              		.cfi_def_cfa_offset 4
 137 006a BD46     		mov	sp, r7
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 006c 80BC     		pop	{r7}
 141              		.cfi_restore 7
 142              		.cfi_def_cfa_offset 0
 143 006e 7047     		bx	lr
 144              	.L6:
 145              		.align	2
 146              	.L5:
 147 0070 40500D40 		.word	1074614336
 148 0074 44500D40 		.word	1074614340
 149 0078 48500D40 		.word	1074614344
 150 007c 4C500D40 		.word	1074614348
 151              		.cfi_endproc
 152              	.LFE2:
 154              		.align	2
 155              		.global	SleepModeCaptureConfig
 156              		.thumb
 157              		.thumb_func
 159              	SleepModeCaptureConfig:
 160              	.LFB3:
 135:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 136:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 137:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 138:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 139:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! Selects capture port and pin
 140:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 141:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \param ui32Port is the port.
 142:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \param ui32Pin is the pin number.
 143:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 144:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! This function sets the port and pin on which values are to be captured.
 145:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 146:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! The \e ui32Port argument must be only one of the following values:
 147:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \b SLEEPMODE_PORT_A, \b SLEEPMODE_PORT_B,
 148:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \b SLEEPMODE_PORT_C, \b SLEEPMODE_PORT_D,
 149:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \b SLEEPMODE_PORT_USB.
 150:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 151:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! The \e ui32Pin argument must be only one of the following values:
 152:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \b SLEEPMODE_PIN_0, \b SLEEPMODE_PIN_1, \b SLEEPMODE_PIN_2,
 153:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \b SLEEPMODE_PIN_3, \b SLEEPMODE_PIN_4, \b SLEEPMODE_PIN_5,
 154:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \b SLEEPMODE_PIN_6, \b SLEEPMODE_PIN_7.
 155:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 156:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \note if \e ui32Port is set to \b SLEEPMODE_PORT_USB, only \e ui32Pin
 157:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \b SLEEPMODE_PIN_0 can be used.
 158:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 159:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \return None
 160:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 161:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 162:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** void
 163:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** SleepModeCaptureConfig(uint32_t ui32Port, uint32_t ui32Pin)
 164:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** {
 161              		.loc 1 164 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 16
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 0080 80B4     		push	{r7}
 167              		.cfi_def_cfa_offset 4
 168              		.cfi_offset 7, -4
 169 0082 85B0     		sub	sp, sp, #20
 170              		.cfi_def_cfa_offset 24
 171 0084 00AF     		add	r7, sp, #0
 172              		.cfi_def_cfa_register 7
 173 0086 7860     		str	r0, [r7, #4]
 174 0088 3960     		str	r1, [r7]
 165:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     uint32_t  ui32Val;
 166:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 167:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ASSERT(ui32Port == SLEEPMODE_PORT_A ||
 168:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****            ui32Port == SLEEPMODE_PORT_B ||
 169:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****            ui32Port == SLEEPMODE_PORT_C ||
 170:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****            ui32Port == SLEEPMODE_PORT_D ||
 171:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****            (ui32Port == SLEEPMODE_PORT_USB && ui32Pin == SLEEPMODE_PIN_0));
 172:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 173:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ASSERT(ui32Pin == SLEEPMODE_PIN_0 ||
 174:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_1 ||
 175:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_2 ||
 176:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_3 ||
 177:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_4 ||
 178:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_5 ||
 179:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_6 ||
 180:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****            ui32Pin == SLEEPMODE_PIN_7);
 181:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 182:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 183:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val = HWREG(SMWDTHROSC_STCC);
 175              		.loc 1 183 0
 176 008a 0A4B     		ldr	r3, .L8
 177 008c 1B68     		ldr	r3, [r3]
 178 008e FB60     		str	r3, [r7, #12]
 184:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val &= ~(SMWDTHROSC_STCC_PORT_M | SMWDTHROSC_STCC_PIN_M);
 179              		.loc 1 184 0
 180 0090 FB68     		ldr	r3, [r7, #12]
 181 0092 23F03F03 		bic	r3, r3, #63
 182 0096 FB60     		str	r3, [r7, #12]
 185:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val |= ui32Port | ui32Pin;
 183              		.loc 1 185 0
 184 0098 7A68     		ldr	r2, [r7, #4]
 185 009a 3B68     		ldr	r3, [r7]
 186 009c 1343     		orrs	r3, r3, r2
 187 009e FA68     		ldr	r2, [r7, #12]
 188 00a0 1343     		orrs	r3, r3, r2
 189 00a2 FB60     		str	r3, [r7, #12]
 186:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     HWREG(SMWDTHROSC_STCC) = ui32Val;
 190              		.loc 1 186 0
 191 00a4 034A     		ldr	r2, .L8
 192 00a6 FB68     		ldr	r3, [r7, #12]
 193 00a8 1360     		str	r3, [r2]
 187:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 188:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** }
 194              		.loc 1 188 0
 195 00aa 00BF     		nop
 196 00ac 1437     		adds	r7, r7, #20
 197              		.cfi_def_cfa_offset 4
 198 00ae BD46     		mov	sp, r7
 199              		.cfi_def_cfa_register 13
 200              		@ sp needed
 201 00b0 80BC     		pop	{r7}
 202              		.cfi_restore 7
 203              		.cfi_def_cfa_offset 0
 204 00b2 7047     		bx	lr
 205              	.L9:
 206              		.align	2
 207              	.L8:
 208 00b4 54500D40 		.word	1074614356
 209              		.cfi_endproc
 210              	.LFE3:
 212              		.align	2
 213              		.global	SleepModeTimerCompareSet
 214              		.thumb
 215              		.thumb_func
 217              	SleepModeTimerCompareSet:
 218              	.LFB4:
 189:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 190:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 191:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 192:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! Set compare value of the sleep mode timer
 193:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 194:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \param ui32Compare is a 32-bit compare value.
 195:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 196:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! This function sets the compare value of the sleep mode timer.
 197:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! A timer compare interrupt is generated when the timer value is equal to
 198:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! the compare value.
 199:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 200:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \note When setting a new compare value, the value must be at least 5 more
 201:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! than the current sleep timer value. Otherwise, the timer compare event
 202:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! might be lost.
 203:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 204:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \return None
 205:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 206:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 207:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** void
 208:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** SleepModeTimerCompareSet(uint32_t ui32Compare)
 209:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** {
 219              		.loc 1 209 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 8
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224 00b8 80B4     		push	{r7}
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 7, -4
 227 00ba 83B0     		sub	sp, sp, #12
 228              		.cfi_def_cfa_offset 16
 229 00bc 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
 231 00be 7860     		str	r0, [r7, #4]
 210:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     //
 211:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     // Wait for ST0, ST3 regs to be ready for writing
 212:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     //
 213:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     while(!(HWREG(SMWDTHROSC_STLOAD) & SMWDTHROSC_STLOAD_STLOAD))
 232              		.loc 1 213 0
 233 00c0 00BF     		nop
 234              	.L11:
 235              		.loc 1 213 0 is_stmt 0 discriminator 1
 236 00c2 0E4B     		ldr	r3, .L12
 237 00c4 1B68     		ldr	r3, [r3]
 238 00c6 03F00103 		and	r3, r3, #1
 239 00ca 002B     		cmp	r3, #0
 240 00cc F9D0     		beq	.L11
 214:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     {
 215:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     }
 216:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 217:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     HWREG(SMWDTHROSC_ST3) = (ui32Compare >> 24) & 0x000000ff;
 241              		.loc 1 217 0 is_stmt 1
 242 00ce 0C4A     		ldr	r2, .L12+4
 243 00d0 7B68     		ldr	r3, [r7, #4]
 244 00d2 1B0E     		lsrs	r3, r3, #24
 245 00d4 1360     		str	r3, [r2]
 218:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     HWREG(SMWDTHROSC_ST2) = (ui32Compare >> 16) & 0x000000ff;
 246              		.loc 1 218 0
 247 00d6 0B4A     		ldr	r2, .L12+8
 248 00d8 7B68     		ldr	r3, [r7, #4]
 249 00da 1B0C     		lsrs	r3, r3, #16
 250 00dc DBB2     		uxtb	r3, r3
 251 00de 1360     		str	r3, [r2]
 219:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     HWREG(SMWDTHROSC_ST1) = (ui32Compare >>  8) & 0x000000ff;
 252              		.loc 1 219 0
 253 00e0 094A     		ldr	r2, .L12+12
 254 00e2 7B68     		ldr	r3, [r7, #4]
 255 00e4 1B0A     		lsrs	r3, r3, #8
 256 00e6 DBB2     		uxtb	r3, r3
 257 00e8 1360     		str	r3, [r2]
 220:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     HWREG(SMWDTHROSC_ST0) = ui32Compare & 0x000000ff;
 258              		.loc 1 220 0
 259 00ea 084A     		ldr	r2, .L12+16
 260 00ec 7B68     		ldr	r3, [r7, #4]
 261 00ee DBB2     		uxtb	r3, r3
 262 00f0 1360     		str	r3, [r2]
 221:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** }
 263              		.loc 1 221 0
 264 00f2 00BF     		nop
 265 00f4 0C37     		adds	r7, r7, #12
 266              		.cfi_def_cfa_offset 4
 267 00f6 BD46     		mov	sp, r7
 268              		.cfi_def_cfa_register 13
 269              		@ sp needed
 270 00f8 80BC     		pop	{r7}
 271              		.cfi_restore 7
 272              		.cfi_def_cfa_offset 0
 273 00fa 7047     		bx	lr
 274              	.L13:
 275              		.align	2
 276              	.L12:
 277 00fc 50500D40 		.word	1074614352
 278 0100 4C500D40 		.word	1074614348
 279 0104 48500D40 		.word	1074614344
 280 0108 44500D40 		.word	1074614340
 281 010c 40500D40 		.word	1074614336
 282              		.cfi_endproc
 283              	.LFE4:
 285              		.align	2
 286              		.global	SleepModeCaptureGet
 287              		.thumb
 288              		.thumb_func
 290              	SleepModeCaptureGet:
 291              	.LFB5:
 222:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 223:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 224:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 225:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 226:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! Get last capture value
 227:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 228:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! This function returns the last captured value.
 229:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 230:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \note The captured value is one more than the value at the instant for the
 231:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! event on the I/O pin. Software should therefore subtract 1 from the
 232:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! captured value if absolute timing is required.
 233:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 234:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \sa SleepModeCaptureNew(), SleepModeCaptureIsValid()
 235:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 236:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \return Last captured value
 237:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 238:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 239:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** uint32_t
 240:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** SleepModeCaptureGet(void)
 241:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** {
 292              		.loc 1 241 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 8
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297 0110 80B4     		push	{r7}
 298              		.cfi_def_cfa_offset 4
 299              		.cfi_offset 7, -4
 300 0112 83B0     		sub	sp, sp, #12
 301              		.cfi_def_cfa_offset 16
 302 0114 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 242:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     uint32_t ui32Val;
 243:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 244:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val = HWREG(SMWDTHROSC_STCV0);
 304              		.loc 1 244 0
 305 0116 0D4B     		ldr	r3, .L16
 306 0118 1B68     		ldr	r3, [r3]
 307 011a 7B60     		str	r3, [r7, #4]
 245:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_STCV1) << 8;
 308              		.loc 1 245 0
 309 011c 0C4B     		ldr	r3, .L16+4
 310 011e 1B68     		ldr	r3, [r3]
 311 0120 1B02     		lsls	r3, r3, #8
 312 0122 7A68     		ldr	r2, [r7, #4]
 313 0124 1343     		orrs	r3, r3, r2
 314 0126 7B60     		str	r3, [r7, #4]
 246:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_STCV2) << 16;
 315              		.loc 1 246 0
 316 0128 0A4B     		ldr	r3, .L16+8
 317 012a 1B68     		ldr	r3, [r3]
 318 012c 1B04     		lsls	r3, r3, #16
 319 012e 7A68     		ldr	r2, [r7, #4]
 320 0130 1343     		orrs	r3, r3, r2
 321 0132 7B60     		str	r3, [r7, #4]
 247:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val |= HWREG(SMWDTHROSC_STCV3) << 24;
 322              		.loc 1 247 0
 323 0134 084B     		ldr	r3, .L16+12
 324 0136 1B68     		ldr	r3, [r3]
 325 0138 1B06     		lsls	r3, r3, #24
 326 013a 7A68     		ldr	r2, [r7, #4]
 327 013c 1343     		orrs	r3, r3, r2
 328 013e 7B60     		str	r3, [r7, #4]
 248:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 249:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     return ui32Val;
 329              		.loc 1 249 0
 330 0140 7B68     		ldr	r3, [r7, #4]
 250:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** }
 331              		.loc 1 250 0
 332 0142 1846     		mov	r0, r3
 333 0144 0C37     		adds	r7, r7, #12
 334              		.cfi_def_cfa_offset 4
 335 0146 BD46     		mov	sp, r7
 336              		.cfi_def_cfa_register 13
 337              		@ sp needed
 338 0148 80BC     		pop	{r7}
 339              		.cfi_restore 7
 340              		.cfi_def_cfa_offset 0
 341 014a 7047     		bx	lr
 342              	.L17:
 343              		.align	2
 344              	.L16:
 345 014c 5C500D40 		.word	1074614364
 346 0150 60500D40 		.word	1074614368
 347 0154 64500D40 		.word	1074614372
 348 0158 68500D40 		.word	1074614376
 349              		.cfi_endproc
 350              	.LFE5:
 352              		.align	2
 353              		.global	SleepModeCaptureIsValid
 354              		.thumb
 355              		.thumb_func
 357              	SleepModeCaptureIsValid:
 358              	.LFB6:
 251:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 252:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 253:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 254:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! Checks if capture value has been updated
 255:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 256:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! This function returns true if a value has been captured.
 257:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 258:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \sa SleepModeCaptureGet(), SleepModeCaptureNew()
 259:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 260:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \return Returns true if capture value has been updated
 261:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 262:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 263:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** bool
 264:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** SleepModeCaptureIsValid(void)
 265:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** {
 359              		.loc 1 265 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 8
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364 015c 80B4     		push	{r7}
 365              		.cfi_def_cfa_offset 4
 366              		.cfi_offset 7, -4
 367 015e 83B0     		sub	sp, sp, #12
 368              		.cfi_def_cfa_offset 16
 369 0160 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 266:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     bool bValid;
 267:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 268:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     bValid = HWREG(SMWDTHROSC_STCS) & SMWDTHROSC_STCS_VALID;
 371              		.loc 1 268 0
 372 0162 074B     		ldr	r3, .L20
 373 0164 1B68     		ldr	r3, [r3]
 374 0166 03F00103 		and	r3, r3, #1
 375 016a 002B     		cmp	r3, #0
 376 016c 14BF     		ite	ne
 377 016e 0123     		movne	r3, #1
 378 0170 0023     		moveq	r3, #0
 379 0172 FB71     		strb	r3, [r7, #7]
 269:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 270:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     return bValid;
 380              		.loc 1 270 0
 381 0174 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 271:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** }
 382              		.loc 1 271 0
 383 0176 1846     		mov	r0, r3
 384 0178 0C37     		adds	r7, r7, #12
 385              		.cfi_def_cfa_offset 4
 386 017a BD46     		mov	sp, r7
 387              		.cfi_def_cfa_register 13
 388              		@ sp needed
 389 017c 80BC     		pop	{r7}
 390              		.cfi_restore 7
 391              		.cfi_def_cfa_offset 0
 392 017e 7047     		bx	lr
 393              	.L21:
 394              		.align	2
 395              	.L20:
 396 0180 58500D40 		.word	1074614360
 397              		.cfi_endproc
 398              	.LFE6:
 400              		.align	2
 401              		.global	SleepModeCaptureNew
 402              		.thumb
 403              		.thumb_func
 405              	SleepModeCaptureNew:
 406              	.LFB7:
 272:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 273:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 274:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 275:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! Prepares for a new value to  be captured
 276:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 277:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! This function prepares the capture logic to capture a new value.
 278:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 279:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! The relevant pin interrupt flag must be cleared after calling this
 280:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! function using IntPendClear().
 281:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 282:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \sa SleepModeCaptureGet(), SleepModeCaptureIsValid()
 283:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //!
 284:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //! \return None
 285:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //
 286:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** //*****************************************************************************
 287:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** void
 288:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** SleepModeCaptureNew(void)
 289:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** {
 407              		.loc 1 289 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 8
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412 0184 80B4     		push	{r7}
 413              		.cfi_def_cfa_offset 4
 414              		.cfi_offset 7, -4
 415 0186 83B0     		sub	sp, sp, #12
 416              		.cfi_def_cfa_offset 16
 417 0188 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 290:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     uint32_t  ui32Val;
 291:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** 
 292:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val = HWREG(SMWDTHROSC_STCS);
 419              		.loc 1 292 0
 420 018a 074B     		ldr	r3, .L23
 421 018c 1B68     		ldr	r3, [r3]
 422 018e 7B60     		str	r3, [r7, #4]
 293:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     ui32Val &= ~SMWDTHROSC_STCS_VALID;
 423              		.loc 1 293 0
 424 0190 7B68     		ldr	r3, [r7, #4]
 425 0192 23F00103 		bic	r3, r3, #1
 426 0196 7B60     		str	r3, [r7, #4]
 294:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c ****     HWREG(SMWDTHROSC_STCS) = ui32Val;
 427              		.loc 1 294 0
 428 0198 034A     		ldr	r2, .L23
 429 019a 7B68     		ldr	r3, [r7, #4]
 430 019c 1360     		str	r3, [r2]
 295:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/source/sleepmode.c **** }
 431              		.loc 1 295 0
 432 019e 00BF     		nop
 433 01a0 0C37     		adds	r7, r7, #12
 434              		.cfi_def_cfa_offset 4
 435 01a2 BD46     		mov	sp, r7
 436              		.cfi_def_cfa_register 13
 437              		@ sp needed
 438 01a4 80BC     		pop	{r7}
 439              		.cfi_restore 7
 440              		.cfi_def_cfa_offset 0
 441 01a6 7047     		bx	lr
 442              	.L24:
 443              		.align	2
 444              	.L23:
 445 01a8 58500D40 		.word	1074614360
 446              		.cfi_endproc
 447              	.LFE7:
 449              	.Letext0:
 450              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 451              		.file 3 "/usr/include/newlib/sys/_stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 sleepmode.c
     /tmp/ccRsau5k.s:19     .text:0000000000000000 $t
     /tmp/ccRsau5k.s:24     .text:0000000000000000 SleepModeIntRegister
     /tmp/ccRsau5k.s:63     .text:0000000000000020 SleepModeIntUnregister
     /tmp/ccRsau5k.s:92     .text:0000000000000034 SleepModeTimerCountGet
     /tmp/ccRsau5k.s:147    .text:0000000000000070 $d
     /tmp/ccRsau5k.s:154    .text:0000000000000080 $t
     /tmp/ccRsau5k.s:159    .text:0000000000000080 SleepModeCaptureConfig
     /tmp/ccRsau5k.s:208    .text:00000000000000b4 $d
     /tmp/ccRsau5k.s:212    .text:00000000000000b8 $t
     /tmp/ccRsau5k.s:217    .text:00000000000000b8 SleepModeTimerCompareSet
     /tmp/ccRsau5k.s:277    .text:00000000000000fc $d
     /tmp/ccRsau5k.s:285    .text:0000000000000110 $t
     /tmp/ccRsau5k.s:290    .text:0000000000000110 SleepModeCaptureGet
     /tmp/ccRsau5k.s:345    .text:000000000000014c $d
     /tmp/ccRsau5k.s:352    .text:000000000000015c $t
     /tmp/ccRsau5k.s:357    .text:000000000000015c SleepModeCaptureIsValid
     /tmp/ccRsau5k.s:396    .text:0000000000000180 $d
     /tmp/ccRsau5k.s:400    .text:0000000000000184 $t
     /tmp/ccRsau5k.s:405    .text:0000000000000184 SleepModeCaptureNew
     /tmp/ccRsau5k.s:445    .text:00000000000001a8 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.8e445c0106ab795ab4704214cba6f089
                           .group:0000000000000000 wm4.hw_ints.h.42.85b9479f2be35b086f1bb7cbb15bc097
                           .group:0000000000000000 wm4.hw_memmap.h.39.19283c377d449c9bca5fdd8ccb62628c
                           .group:0000000000000000 wm4.hw_smwdthrosc.h.39.ab42722bc5551495328d9a67238c9bbc
                           .group:0000000000000000 wm4._newlib_version.h.4.ad342815780c8db09778091a421b5b5b
                           .group:0000000000000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.b82bf99f69d6a5c085fc866de0d3eb9b
                           .group:0000000000000000 wm4._stdint.h.10.7a5f60e6741af4a5594a3867d347e1f9
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.sleepmode.h.41.8aaaa1e0c85692d50a0ac7b45436b69e

UNDEFINED SYMBOLS
IntRegister
IntEnable
IntDisable
IntUnregister
