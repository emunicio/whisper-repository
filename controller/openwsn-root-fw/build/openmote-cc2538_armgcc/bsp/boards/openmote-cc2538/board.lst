   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"board.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  23              	rreg_uriquery:
  24 0000 683D7563 		.ascii	"h=ucb\000"
  24      6200
  25 0006 0000     		.align	2
  28              	infoBoardname:
  29 0008 43433235 		.ascii	"CC2538\000"
  29      333800
  30 000f 00       		.align	2
  33              	infouCName:
  34 0010 43433235 		.ascii	"CC2538\000"
  34      333800
  35 0017 00       		.align	2
  38              	infoRadioName:
  39 0018 43433235 		.ascii	"CC2538 SoC\000"
  39      33382053 
  39      6F4300
  40 0023 00       		.align	2
  43              	infoStackName:
  44 0024 4F70656E 		.ascii	"OpenWSN \000"
  44      57534E20 
  44      00
  45              		.comm	user_button_initialized,1,1
  46              		.text
  47              		.align	2
  48              		.global	main
  49              		.thumb
  50              		.thumb_func
  52              	main:
  53              	.LFB0:
  54              		.file 1 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c"
   1:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** /**
   2:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * Author: Xavier Vilajosana (xvilajosana@eecs.berkeley.edu)
   3:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  *         Pere Tuset (peretuset@openmote.com)
   4:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * Date:   July 2013
   5:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * Description: CC2538-specific definition of the "board" bsp module.
   6:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  */
   7:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
   8:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include <headers/hw_ioc.h>
   9:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include <headers/hw_memmap.h>
  10:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include <headers/hw_ssi.h>
  11:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include <headers/hw_sys_ctrl.h>
  12:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include <headers/hw_types.h>
  13:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  14:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include <source/flash.h>
  15:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include <source/interrupt.h>
  16:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include <source/ioc.h>
  17:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include <source/gpio.h>
  18:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include <source/gptimer.h>
  19:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include <source/sys_ctrl.h>
  20:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  21:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include "board.h"
  22:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include "debugpins.h"
  23:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include "i2c.h"
  24:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include "leds.h"
  25:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include "radio.h"
  26:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include "sensors.h"
  27:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include "sctimer.h"
  28:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include "uart.h"
  29:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #include "cryptoengine.h"
  30:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  31:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** //=========================== variables =======================================
  32:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  33:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #define BSP_BUTTON_BASE                 ( GPIO_C_BASE )
  34:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #define BSP_BUTTON_USER                 ( GPIO_PIN_3 )
  35:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  36:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #ifdef REVA1 //Rev.A1 uses SF23 cc2538 which start at diffferent location
  37:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     #define CC2538_FLASH_ADDRESS            ( 0x0023F800 )
  38:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #else
  39:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     #define CC2538_FLASH_ADDRESS            ( 0x0027F800 )
  40:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** #endif
  41:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** //=========================== prototypes ======================================
  42:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  43:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** void board_timer_init(void);
  44:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** uint32_t board_timer_get(void);
  45:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** bool board_timer_expired(uint32_t future);
  46:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  47:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void clock_init(void);
  48:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void gpio_init(void);
  49:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void button_init(void);
  50:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  51:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void SysCtrlDeepSleepSetting(void);
  52:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void SysCtrlSleepSetting(void);
  53:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void SysCtrlRunSetting(void);
  54:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void SysCtrlWakeupSetting(void);
  55:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  56:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void GPIO_C_Handler(void);
  57:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  58:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** bool user_button_initialized;
  59:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  60:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** //=========================== main ============================================
  61:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  62:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** extern int mote_main(void);
  63:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  64:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** int main(void) {
  55              		.loc 1 64 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 00AF     		add	r7, sp, #0
  64              		.cfi_def_cfa_register 7
  65:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    return mote_main();
  65              		.loc 1 65 0
  66 0004 FFF7FEFF 		bl	mote_main
  67 0008 0346     		mov	r3, r0
  66:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
  68              		.loc 1 66 0
  69 000a 1846     		mov	r0, r3
  70 000c 80BD     		pop	{r7, pc}
  71              		.cfi_endproc
  72              	.LFE0:
  74 000e 00BF     		.align	2
  75              		.global	board_init
  76              		.thumb
  77              		.thumb_func
  79              	board_init:
  80              	.LFB1:
  67:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  68:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** //=========================== public ==========================================
  69:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  70:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** void board_init(void) {
  81              		.loc 1 70 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85 0010 80B5     		push	{r7, lr}
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 7, -8
  88              		.cfi_offset 14, -4
  89 0012 00AF     		add	r7, sp, #0
  90              		.cfi_def_cfa_register 7
  71:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    user_button_initialized = FALSE;
  91              		.loc 1 71 0
  92 0014 0E4B     		ldr	r3, .L4
  93 0016 0022     		movs	r2, #0
  94 0018 1A70     		strb	r2, [r3]
  72:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    
  73:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    gpio_init();
  95              		.loc 1 73 0
  96 001a 00F069F8 		bl	gpio_init
  74:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    clock_init();
  97              		.loc 1 74 0
  98 001e 00F097F8 		bl	clock_init
  75:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    board_timer_init();
  99              		.loc 1 75 0
 100 0022 FFF7FEFF 		bl	board_timer_init
  76:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    leds_init();
 101              		.loc 1 76 0
 102 0026 FFF7FEFF 		bl	leds_init
  77:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    debugpins_init();
 103              		.loc 1 77 0
 104 002a FFF7FEFF 		bl	debugpins_init
  78:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    button_init();
 105              		.loc 1 78 0
 106 002e 00F0D1F8 		bl	button_init
  79:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    sctimer_init();
 107              		.loc 1 79 0
 108 0032 FFF7FEFF 		bl	sctimer_init
  80:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    uart_init();
 109              		.loc 1 80 0
 110 0036 FFF7FEFF 		bl	uart_init
  81:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    radio_init();
 111              		.loc 1 81 0
 112 003a FFF7FEFF 		bl	radio_init
  82:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    i2c_init();
 113              		.loc 1 82 0
 114 003e FFF7FEFF 		bl	i2c_init
  83:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    sensors_init();
 115              		.loc 1 83 0
 116 0042 FFF7FEFF 		bl	sensors_init
  84:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****    cryptoengine_init();
 117              		.loc 1 84 0
 118 0046 FFF7FEFF 		bl	cryptoengine_init
  85:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 119              		.loc 1 85 0
 120 004a 00BF     		nop
 121 004c 80BD     		pop	{r7, pc}
 122              	.L5:
 123 004e 00BF     		.align	2
 124              	.L4:
 125 0050 00000000 		.word	user_button_initialized
 126              		.cfi_endproc
 127              	.LFE1:
 129              		.align	2
 130              		.global	board_sleep
 131              		.thumb
 132              		.thumb_func
 134              	board_sleep:
 135              	.LFB2:
  86:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  87:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** /**
  88:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * Puts the board to sleep
  89:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  */
  90:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** void board_sleep(void) {
 136              		.loc 1 90 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0054 80B5     		push	{r7, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0056 00AF     		add	r7, sp, #0
 145              		.cfi_def_cfa_register 7
  91:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     SysCtrlPowerModeSet(SYS_CTRL_PM_NOACTION);
 146              		.loc 1 91 0
 147 0058 0020     		movs	r0, #0
 148 005a FFF7FEFF 		bl	SysCtrlPowerModeSet
  92:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     SysCtrlSleep();
 149              		.loc 1 92 0
 150 005e FFF7FEFF 		bl	SysCtrlSleep
  93:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 151              		.loc 1 93 0
 152 0062 00BF     		nop
 153 0064 80BD     		pop	{r7, pc}
 154              		.cfi_endproc
 155              	.LFE2:
 157 0066 00BF     		.align	2
 158              		.global	board_timer_init
 159              		.thumb
 160              		.thumb_func
 162              	board_timer_init:
 163              	.LFB3:
  94:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
  95:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** /**
  96:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * Timer runs at 32 MHz and is 32-bit wide
  97:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * The timer is divided by 32, whichs gives a 1 microsecond ticks
  98:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  */
  99:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** void board_timer_init(void) {
 164              		.loc 1 99 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168 0068 80B5     		push	{r7, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 7, -8
 171              		.cfi_offset 14, -4
 172 006a 00AF     		add	r7, sp, #0
 173              		.cfi_def_cfa_register 7
 100:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     // Configure the timer
 101:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     TimerConfigure(GPTIMER2_BASE, GPTIMER_CFG_PERIODIC_UP);
 174              		.loc 1 101 0
 175 006c 3221     		movs	r1, #50
 176 006e 0548     		ldr	r0, .L8
 177 0070 FFF7FEFF 		bl	TimerConfigure
 102:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     
 103:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     // Enable the timer
 104:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     TimerEnable(GPTIMER2_BASE, GPTIMER_BOTH);
 178              		.loc 1 104 0
 179 0074 4FF6FF71 		movw	r1, #65535
 180 0078 0248     		ldr	r0, .L8
 181 007a FFF7FEFF 		bl	TimerEnable
 105:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 182              		.loc 1 105 0
 183 007e 00BF     		nop
 184 0080 80BD     		pop	{r7, pc}
 185              	.L9:
 186 0082 00BF     		.align	2
 187              	.L8:
 188 0084 00200340 		.word	1073946624
 189              		.cfi_endproc
 190              	.LFE3:
 192              		.align	2
 193              		.global	board_timer_get
 194              		.thumb
 195              		.thumb_func
 197              	board_timer_get:
 198              	.LFB4:
 106:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 107:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** /**
 108:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * Returns the current value of the timer
 109:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * The timer is divided by 32, whichs gives a 1 microsecond ticks
 110:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  */
 111:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** uint32_t board_timer_get(void) {
 199              		.loc 1 111 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 8
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203 0088 80B5     		push	{r7, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 008a 82B0     		sub	sp, sp, #8
 208              		.cfi_def_cfa_offset 16
 209 008c 00AF     		add	r7, sp, #0
 210              		.cfi_def_cfa_register 7
 112:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     uint32_t current;
 113:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     
 114:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     current = TimerValueGet(GPTIMER2_BASE, GPTIMER_A) >> 5;
 211              		.loc 1 114 0
 212 008e FF21     		movs	r1, #255
 213 0090 0548     		ldr	r0, .L12
 214 0092 FFF7FEFF 		bl	TimerValueGet
 215 0096 0346     		mov	r3, r0
 216 0098 5B09     		lsrs	r3, r3, #5
 217 009a 7B60     		str	r3, [r7, #4]
 115:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     
 116:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     return current;
 218              		.loc 1 116 0
 219 009c 7B68     		ldr	r3, [r7, #4]
 117:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 220              		.loc 1 117 0
 221 009e 1846     		mov	r0, r3
 222 00a0 0837     		adds	r7, r7, #8
 223              		.cfi_def_cfa_offset 8
 224 00a2 BD46     		mov	sp, r7
 225              		.cfi_def_cfa_register 13
 226              		@ sp needed
 227 00a4 80BD     		pop	{r7, pc}
 228              	.L13:
 229 00a6 00BF     		.align	2
 230              	.L12:
 231 00a8 00200340 		.word	1073946624
 232              		.cfi_endproc
 233              	.LFE4:
 235              		.align	2
 236              		.global	board_timer_expired
 237              		.thumb
 238              		.thumb_func
 240              	board_timer_expired:
 241              	.LFB5:
 118:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 119:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** /**
 120:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * Returns true if the timer has expired
 121:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * The timer is divided by 32, whichs gives a 1 microsecond ticks
 122:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  */
 123:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** bool board_timer_expired(uint32_t future) {
 242              		.loc 1 123 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 16
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 00ac 80B5     		push	{r7, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 00ae 84B0     		sub	sp, sp, #16
 251              		.cfi_def_cfa_offset 24
 252 00b0 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 254 00b2 7860     		str	r0, [r7, #4]
 124:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     uint32_t current;
 125:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     int32_t remaining;
 126:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 127:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     current = TimerValueGet(GPTIMER2_BASE, GPTIMER_A) >> 5;
 255              		.loc 1 127 0
 256 00b4 FF21     		movs	r1, #255
 257 00b6 0A48     		ldr	r0, .L17
 258 00b8 FFF7FEFF 		bl	TimerValueGet
 259 00bc 0346     		mov	r3, r0
 260 00be 5B09     		lsrs	r3, r3, #5
 261 00c0 FB60     		str	r3, [r7, #12]
 128:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 129:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     remaining = (int32_t) (future - current);
 262              		.loc 1 129 0
 263 00c2 7A68     		ldr	r2, [r7, #4]
 264 00c4 FB68     		ldr	r3, [r7, #12]
 265 00c6 D31A     		subs	r3, r2, r3
 266 00c8 BB60     		str	r3, [r7, #8]
 130:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     
 131:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     if (remaining > 0) {
 267              		.loc 1 131 0
 268 00ca BB68     		ldr	r3, [r7, #8]
 269 00cc 002B     		cmp	r3, #0
 270 00ce 01DD     		ble	.L15
 132:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****         return false;
 271              		.loc 1 132 0
 272 00d0 0023     		movs	r3, #0
 273 00d2 00E0     		b	.L16
 274              	.L15:
 133:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     } else {
 134:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****         return true;
 275              		.loc 1 134 0
 276 00d4 0123     		movs	r3, #1
 277              	.L16:
 135:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     }
 136:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 278              		.loc 1 136 0
 279 00d6 1846     		mov	r0, r3
 280 00d8 1037     		adds	r7, r7, #16
 281              		.cfi_def_cfa_offset 8
 282 00da BD46     		mov	sp, r7
 283              		.cfi_def_cfa_register 13
 284              		@ sp needed
 285 00dc 80BD     		pop	{r7, pc}
 286              	.L18:
 287 00de 00BF     		.align	2
 288              	.L17:
 289 00e0 00200340 		.word	1073946624
 290              		.cfi_endproc
 291              	.LFE5:
 293              		.align	2
 294              		.global	board_reset
 295              		.thumb
 296              		.thumb_func
 298              	board_reset:
 299              	.LFB6:
 137:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 138:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** /**
 139:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * Resets the board
 140:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  */
 141:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** void board_reset(void) {
 300              		.loc 1 141 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 00e4 80B5     		push	{r7, lr}
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 7, -8
 307              		.cfi_offset 14, -4
 308 00e6 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 142:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     SysCtrlReset();
 310              		.loc 1 142 0
 311 00e8 FFF7FEFF 		bl	SysCtrlReset
 143:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 312              		.loc 1 143 0
 313 00ec 00BF     		nop
 314 00ee 80BD     		pop	{r7, pc}
 315              		.cfi_endproc
 316              	.LFE6:
 318              		.align	2
 319              		.thumb
 320              		.thumb_func
 322              	gpio_init:
 323              	.LFB7:
 144:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 145:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** //=========================== private =========================================
 146:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 147:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void gpio_init(void) {
 324              		.loc 1 147 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328 00f0 80B5     		push	{r7, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 00f2 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
 148:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Set GPIOs as output */
 149:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinTypeGPIOOutput(GPIO_A_BASE, 0xFF);
 334              		.loc 1 149 0
 335 00f4 FF21     		movs	r1, #255
 336 00f6 1248     		ldr	r0, .L21
 337 00f8 FFF7FEFF 		bl	GPIOPinTypeGPIOOutput
 150:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinTypeGPIOOutput(GPIO_B_BASE, 0xFF);
 338              		.loc 1 150 0
 339 00fc FF21     		movs	r1, #255
 340 00fe 1148     		ldr	r0, .L21+4
 341 0100 FFF7FEFF 		bl	GPIOPinTypeGPIOOutput
 151:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinTypeGPIOOutput(GPIO_C_BASE, 0xFF);
 342              		.loc 1 151 0
 343 0104 FF21     		movs	r1, #255
 344 0106 1048     		ldr	r0, .L21+8
 345 0108 FFF7FEFF 		bl	GPIOPinTypeGPIOOutput
 152:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinTypeGPIOOutput(GPIO_D_BASE, 0xFF);
 346              		.loc 1 152 0
 347 010c FF21     		movs	r1, #255
 348 010e 0F48     		ldr	r0, .L21+12
 349 0110 FFF7FEFF 		bl	GPIOPinTypeGPIOOutput
 153:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 154:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Initialize GPIOs to low */
 155:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinWrite(GPIO_A_BASE, 0xFF, 0x00);
 350              		.loc 1 155 0
 351 0114 0022     		movs	r2, #0
 352 0116 FF21     		movs	r1, #255
 353 0118 0948     		ldr	r0, .L21
 354 011a FFF7FEFF 		bl	GPIOPinWrite
 156:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinWrite(GPIO_B_BASE, 0xFF, 0x00);
 355              		.loc 1 156 0
 356 011e 0022     		movs	r2, #0
 357 0120 FF21     		movs	r1, #255
 358 0122 0848     		ldr	r0, .L21+4
 359 0124 FFF7FEFF 		bl	GPIOPinWrite
 157:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinWrite(GPIO_C_BASE, 0xFF, 0x00);
 360              		.loc 1 157 0
 361 0128 0022     		movs	r2, #0
 362 012a FF21     		movs	r1, #255
 363 012c 0648     		ldr	r0, .L21+8
 364 012e FFF7FEFF 		bl	GPIOPinWrite
 158:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinWrite(GPIO_D_BASE, 0xFF, 0x00);
 365              		.loc 1 158 0
 366 0132 0022     		movs	r2, #0
 367 0134 FF21     		movs	r1, #255
 368 0136 0548     		ldr	r0, .L21+12
 369 0138 FFF7FEFF 		bl	GPIOPinWrite
 159:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 370              		.loc 1 159 0
 371 013c 00BF     		nop
 372 013e 80BD     		pop	{r7, pc}
 373              	.L22:
 374              		.align	2
 375              	.L21:
 376 0140 00900D40 		.word	1074630656
 377 0144 00A00D40 		.word	1074634752
 378 0148 00B00D40 		.word	1074638848
 379 014c 00C00D40 		.word	1074642944
 380              		.cfi_endproc
 381              	.LFE7:
 383              		.align	2
 384              		.thumb
 385              		.thumb_func
 387              	clock_init:
 388              	.LFB8:
 160:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 161:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void clock_init(void) {
 389              		.loc 1 161 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 8
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393 0150 80B5     		push	{r7, lr}
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 7, -8
 396              		.cfi_offset 14, -4
 397 0152 82B0     		sub	sp, sp, #8
 398              		.cfi_def_cfa_offset 16
 399 0154 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 162:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Disable global interrupts */
 163:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     bool bIntDisabled = IntMasterDisable();
 401              		.loc 1 163 0
 402 0156 FFF7FEFF 		bl	IntMasterDisable
 403 015a 0346     		mov	r3, r0
 404 015c FB71     		strb	r3, [r7, #7]
 164:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 165:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Configure the 32 kHz pins, PD6 and PD7, for crystal operation */
 166:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* By default they are configured as GPIOs */
 167:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIODirModeSet(GPIO_D_BASE, 0x40, GPIO_DIR_MODE_IN);
 405              		.loc 1 167 0
 406 015e 0022     		movs	r2, #0
 407 0160 4021     		movs	r1, #64
 408 0162 1A48     		ldr	r0, .L27
 409 0164 FFF7FEFF 		bl	GPIODirModeSet
 168:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIODirModeSet(GPIO_D_BASE, 0x80, GPIO_DIR_MODE_IN);
 410              		.loc 1 168 0
 411 0168 0022     		movs	r2, #0
 412 016a 8021     		movs	r1, #128
 413 016c 1748     		ldr	r0, .L27
 414 016e FFF7FEFF 		bl	GPIODirModeSet
 169:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     IOCPadConfigSet(GPIO_D_BASE, 0x40, IOC_OVERRIDE_ANA);
 415              		.loc 1 169 0
 416 0172 0122     		movs	r2, #1
 417 0174 4021     		movs	r1, #64
 418 0176 1548     		ldr	r0, .L27
 419 0178 FFF7FEFF 		bl	IOCPadConfigSet
 170:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     IOCPadConfigSet(GPIO_D_BASE, 0x80, IOC_OVERRIDE_ANA);
 420              		.loc 1 170 0
 421 017c 0122     		movs	r2, #1
 422 017e 8021     		movs	r1, #128
 423 0180 1248     		ldr	r0, .L27
 424 0182 FFF7FEFF 		bl	IOCPadConfigSet
 171:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 172:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Set the real-time clock to use the 32 kHz external crystal */
 173:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Set the system clock to use the external 32 MHz crystal */
 174:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Set the system clock to 32 MHz */
 175:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     SysCtrlClockSet(true, false, SYS_CTRL_SYSDIV_32MHZ);
 425              		.loc 1 175 0
 426 0186 0022     		movs	r2, #0
 427 0188 0021     		movs	r1, #0
 428 018a 0120     		movs	r0, #1
 429 018c FFF7FEFF 		bl	SysCtrlClockSet
 176:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 177:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Set the IO clock to operate at 16 MHz */
 178:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* This way peripherals can run while the system clock is gated */
 179:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     SysCtrlIOClockSet(SYS_CTRL_SYSDIV_16MHZ);
 430              		.loc 1 179 0
 431 0190 0120     		movs	r0, #1
 432 0192 FFF7FEFF 		bl	SysCtrlIOClockSet
 180:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 181:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Wait until the selected clock configuration is stable */
 182:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     while (!((HWREG(SYS_CTRL_CLOCK_STA)) & (SYS_CTRL_CLOCK_STA_XOSC_STB)));
 433              		.loc 1 182 0
 434 0196 00BF     		nop
 435              	.L24:
 436              		.loc 1 182 0 is_stmt 0 discriminator 1
 437 0198 0D4B     		ldr	r3, .L27+4
 438 019a 1B68     		ldr	r3, [r3]
 439 019c 03F40023 		and	r3, r3, #524288
 440 01a0 002B     		cmp	r3, #0
 441 01a2 F9D0     		beq	.L24
 183:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 184:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Define what peripherals run in each mode */
 185:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     SysCtrlRunSetting();
 442              		.loc 1 185 0 is_stmt 1
 443 01a4 00F04EF8 		bl	SysCtrlRunSetting
 186:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     SysCtrlSleepSetting();
 444              		.loc 1 186 0
 445 01a8 00F07CF8 		bl	SysCtrlSleepSetting
 187:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     SysCtrlDeepSleepSetting();
 446              		.loc 1 187 0
 447 01ac 00F0AAF8 		bl	SysCtrlDeepSleepSetting
 188:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     SysCtrlWakeupSetting();
 448              		.loc 1 188 0
 449 01b0 00F0D8F8 		bl	SysCtrlWakeupSetting
 189:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 190:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Re-enable interrupt if initially enabled */
 191:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     if (!bIntDisabled) {
 450              		.loc 1 191 0
 451 01b4 FB79     		ldrb	r3, [r7, #7]
 452 01b6 83F00103 		eor	r3, r3, #1
 453 01ba DBB2     		uxtb	r3, r3
 454 01bc 002B     		cmp	r3, #0
 455 01be 01D0     		beq	.L26
 192:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****         IntMasterEnable();
 456              		.loc 1 192 0
 457 01c0 FFF7FEFF 		bl	IntMasterEnable
 458              	.L26:
 193:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     }
 194:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 459              		.loc 1 194 0
 460 01c4 00BF     		nop
 461 01c6 0837     		adds	r7, r7, #8
 462              		.cfi_def_cfa_offset 8
 463 01c8 BD46     		mov	sp, r7
 464              		.cfi_def_cfa_register 13
 465              		@ sp needed
 466 01ca 80BD     		pop	{r7, pc}
 467              	.L28:
 468              		.align	2
 469              	.L27:
 470 01cc 00C00D40 		.word	1074642944
 471 01d0 04200D40 		.word	1074601988
 472              		.cfi_endproc
 473              	.LFE8:
 475              		.align	2
 476              		.thumb
 477              		.thumb_func
 479              	button_init:
 480              	.LFB9:
 195:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 196:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** /**
 197:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * Configures the user button as input source
 198:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  */
 199:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void button_init(void) {
 481              		.loc 1 199 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 8
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485 01d4 80B5     		push	{r7, lr}
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 01d6 82B0     		sub	sp, sp, #8
 490              		.cfi_def_cfa_offset 16
 491 01d8 00AF     		add	r7, sp, #0
 492              		.cfi_def_cfa_register 7
 200:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     volatile uint32_t i;
 201:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 202:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Delay to avoid pin floating problems */
 203:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     for (i = 0xFFFF; i != 0; i--);
 493              		.loc 1 203 0
 494 01da 4FF6FF73 		movw	r3, #65535
 495 01de 7B60     		str	r3, [r7, #4]
 496 01e0 02E0     		b	.L30
 497              	.L31:
 498              		.loc 1 203 0 is_stmt 0 discriminator 3
 499 01e2 7B68     		ldr	r3, [r7, #4]
 500 01e4 013B     		subs	r3, r3, #1
 501 01e6 7B60     		str	r3, [r7, #4]
 502              	.L30:
 503              		.loc 1 203 0 discriminator 1
 504 01e8 7B68     		ldr	r3, [r7, #4]
 505 01ea 002B     		cmp	r3, #0
 506 01ec F9D1     		bne	.L31
 204:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 205:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinIntDisable(BSP_BUTTON_BASE, BSP_BUTTON_USER);
 507              		.loc 1 205 0 is_stmt 1
 508 01ee 0821     		movs	r1, #8
 509 01f0 1148     		ldr	r0, .L32
 510 01f2 FFF7FEFF 		bl	GPIOPinIntDisable
 206:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinIntClear(BSP_BUTTON_BASE, BSP_BUTTON_USER);
 511              		.loc 1 206 0
 512 01f6 0821     		movs	r1, #8
 513 01f8 0F48     		ldr	r0, .L32
 514 01fa FFF7FEFF 		bl	GPIOPinIntClear
 207:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 208:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* The button is an input GPIO on falling edge */
 209:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinTypeGPIOInput(BSP_BUTTON_BASE, BSP_BUTTON_USER);
 515              		.loc 1 209 0
 516 01fe 0821     		movs	r1, #8
 517 0200 0D48     		ldr	r0, .L32
 518 0202 FFF7FEFF 		bl	GPIOPinTypeGPIOInput
 210:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOIntTypeSet(BSP_BUTTON_BASE, BSP_BUTTON_USER, GPIO_FALLING_EDGE);
 519              		.loc 1 210 0
 520 0206 0022     		movs	r2, #0
 521 0208 0821     		movs	r1, #8
 522 020a 0B48     		ldr	r0, .L32
 523 020c FFF7FEFF 		bl	GPIOIntTypeSet
 211:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 212:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Register the interrupt */
 213:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPortIntRegister(BSP_BUTTON_BASE, GPIO_C_Handler);
 524              		.loc 1 213 0
 525 0210 0A49     		ldr	r1, .L32+4
 526 0212 0948     		ldr	r0, .L32
 527 0214 FFF7FEFF 		bl	GPIOPortIntRegister
 214:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 215:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Clear and enable the interrupt */
 216:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinIntClear(BSP_BUTTON_BASE, BSP_BUTTON_USER);
 528              		.loc 1 216 0
 529 0218 0821     		movs	r1, #8
 530 021a 0748     		ldr	r0, .L32
 531 021c FFF7FEFF 		bl	GPIOPinIntClear
 217:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     GPIOPinIntEnable(BSP_BUTTON_BASE, BSP_BUTTON_USER);
 532              		.loc 1 217 0
 533 0220 0821     		movs	r1, #8
 534 0222 0548     		ldr	r0, .L32
 535 0224 FFF7FEFF 		bl	GPIOPinIntEnable
 218:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     user_button_initialized = TRUE;
 536              		.loc 1 218 0
 537 0228 054B     		ldr	r3, .L32+8
 538 022a 0122     		movs	r2, #1
 539 022c 1A70     		strb	r2, [r3]
 219:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 540              		.loc 1 219 0
 541 022e 00BF     		nop
 542 0230 0837     		adds	r7, r7, #8
 543              		.cfi_def_cfa_offset 8
 544 0232 BD46     		mov	sp, r7
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 0234 80BD     		pop	{r7, pc}
 548              	.L33:
 549 0236 00BF     		.align	2
 550              	.L32:
 551 0238 00B00D40 		.word	1074638848
 552 023c 00000000 		.word	GPIO_C_Handler
 553 0240 00000000 		.word	user_button_initialized
 554              		.cfi_endproc
 555              	.LFE9:
 557              		.align	2
 558              		.thumb
 559              		.thumb_func
 561              	SysCtrlRunSetting:
 562              	.LFB10:
 220:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 221:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void SysCtrlRunSetting(void) {
 563              		.loc 1 221 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0244 80B5     		push	{r7, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0246 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 222:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable General Purpose Timers 0, 1, 2, 3 when running */
 223:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_GPT0);
 573              		.loc 1 223 0
 574 0248 0020     		movs	r0, #0
 575 024a FFF7FEFF 		bl	SysCtrlPeripheralDisable
 224:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_GPT1);
 576              		.loc 1 224 0
 577 024e 0120     		movs	r0, #1
 578 0250 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 225:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_GPT3);
 579              		.loc 1 225 0
 580 0254 0320     		movs	r0, #3
 581 0256 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 226:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 227:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable SSI 0, 1 when running */
 228:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_SSI0);
 582              		.loc 1 228 0
 583 025a 4FF48070 		mov	r0, #256
 584 025e FFF7FEFF 		bl	SysCtrlPeripheralDisable
 229:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_SSI1);
 585              		.loc 1 229 0
 586 0262 40F20110 		movw	r0, #257
 587 0266 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 230:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 231:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable UART1 when running */
 232:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_UART1);
 588              		.loc 1 232 0
 589 026a 40F20120 		movw	r0, #513
 590 026e FFF7FEFF 		bl	SysCtrlPeripheralDisable
 233:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 234:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable I2C, AES and PKA when running */
 235:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_I2C);
 591              		.loc 1 235 0
 592 0272 4FF44070 		mov	r0, #768
 593 0276 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 236:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_PKA);
 594              		.loc 1 236 0
 595 027a 4FF48060 		mov	r0, #1024
 596 027e FFF7FEFF 		bl	SysCtrlPeripheralDisable
 237:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDisable(SYS_CTRL_PERIPH_AES);
 597              		.loc 1 237 0
 598 0282 40F20140 		movw	r0, #1025
 599 0286 FFF7FEFF 		bl	SysCtrlPeripheralDisable
 238:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 239:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Enable UART0 and RFC when running */
 240:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralEnable(SYS_CTRL_PERIPH_GPT2);
 600              		.loc 1 240 0
 601 028a 0220     		movs	r0, #2
 602 028c FFF7FEFF 		bl	SysCtrlPeripheralEnable
 241:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralEnable(SYS_CTRL_PERIPH_UART0);
 603              		.loc 1 241 0
 604 0290 4FF40070 		mov	r0, #512
 605 0294 FFF7FEFF 		bl	SysCtrlPeripheralEnable
 242:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralEnable(SYS_CTRL_PERIPH_RFC);
 606              		.loc 1 242 0
 607 0298 4FF4A060 		mov	r0, #1280
 608 029c FFF7FEFF 		bl	SysCtrlPeripheralEnable
 243:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 609              		.loc 1 243 0
 610 02a0 00BF     		nop
 611 02a2 80BD     		pop	{r7, pc}
 612              		.cfi_endproc
 613              	.LFE10:
 615              		.align	2
 616              		.thumb
 617              		.thumb_func
 619              	SysCtrlSleepSetting:
 620              	.LFB11:
 244:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 245:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void SysCtrlSleepSetting(void) {
 621              		.loc 1 245 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625 02a4 80B5     		push	{r7, lr}
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 02a6 00AF     		add	r7, sp, #0
 630              		.cfi_def_cfa_register 7
 246:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable General Purpose Timers 0, 1, 2, 3 during sleep */
 247:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_GPT0);
 631              		.loc 1 247 0
 632 02a8 0020     		movs	r0, #0
 633 02aa FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 248:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_GPT1);
 634              		.loc 1 248 0
 635 02ae 0120     		movs	r0, #1
 636 02b0 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 249:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_GPT3);
 637              		.loc 1 249 0
 638 02b4 0320     		movs	r0, #3
 639 02b6 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 250:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 251:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable SSI 0, 1 during sleep */
 252:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_SSI0);
 640              		.loc 1 252 0
 641 02ba 4FF48070 		mov	r0, #256
 642 02be FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 253:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_SSI1);
 643              		.loc 1 253 0
 644 02c2 40F20110 		movw	r0, #257
 645 02c6 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 254:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 255:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable UART 0, 1 during sleep */
 256:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_UART1);
 646              		.loc 1 256 0
 647 02ca 40F20120 		movw	r0, #513
 648 02ce FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 257:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 258:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable I2C, PKA, AES during sleep */
 259:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_I2C);
 649              		.loc 1 259 0
 650 02d2 4FF44070 		mov	r0, #768
 651 02d6 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 260:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_PKA);
 652              		.loc 1 260 0
 653 02da 4FF48060 		mov	r0, #1024
 654 02de FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 261:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepDisable(SYS_CTRL_PERIPH_AES);
 655              		.loc 1 261 0
 656 02e2 40F20140 		movw	r0, #1025
 657 02e6 FFF7FEFF 		bl	SysCtrlPeripheralSleepDisable
 262:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 263:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Enable UART and RFC during sleep */
 264:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepEnable(SYS_CTRL_PERIPH_GPT2);
 658              		.loc 1 264 0
 659 02ea 0220     		movs	r0, #2
 660 02ec FFF7FEFF 		bl	SysCtrlPeripheralSleepEnable
 265:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepEnable(SYS_CTRL_PERIPH_UART0);
 661              		.loc 1 265 0
 662 02f0 4FF40070 		mov	r0, #512
 663 02f4 FFF7FEFF 		bl	SysCtrlPeripheralSleepEnable
 266:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralSleepEnable(SYS_CTRL_PERIPH_RFC);
 664              		.loc 1 266 0
 665 02f8 4FF4A060 		mov	r0, #1280
 666 02fc FFF7FEFF 		bl	SysCtrlPeripheralSleepEnable
 267:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 667              		.loc 1 267 0
 668 0300 00BF     		nop
 669 0302 80BD     		pop	{r7, pc}
 670              		.cfi_endproc
 671              	.LFE11:
 673              		.align	2
 674              		.thumb
 675              		.thumb_func
 677              	SysCtrlDeepSleepSetting:
 678              	.LFB12:
 268:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 269:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void SysCtrlDeepSleepSetting(void) {
 679              		.loc 1 269 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683 0304 80B5     		push	{r7, lr}
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0306 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 270:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable General Purpose Timers 0, 1, 2, 3 during deep sleep */
 271:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_GPT0);
 689              		.loc 1 271 0
 690 0308 0020     		movs	r0, #0
 691 030a FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 272:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_GPT1);
 692              		.loc 1 272 0
 693 030e 0120     		movs	r0, #1
 694 0310 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 273:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_GPT2);
 695              		.loc 1 273 0
 696 0314 0220     		movs	r0, #2
 697 0316 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 274:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_GPT3);
 698              		.loc 1 274 0
 699 031a 0320     		movs	r0, #3
 700 031c FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 275:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 276:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable SSI 0, 1 during deep sleep */
 277:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_SSI0);
 701              		.loc 1 277 0
 702 0320 4FF48070 		mov	r0, #256
 703 0324 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 278:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_SSI1);
 704              		.loc 1 278 0
 705 0328 40F20110 		movw	r0, #257
 706 032c FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 279:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 280:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable UART 0, 1 during deep sleep */
 281:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_UART0);
 707              		.loc 1 281 0
 708 0330 4FF40070 		mov	r0, #512
 709 0334 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 282:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_UART1);
 710              		.loc 1 282 0
 711 0338 40F20120 		movw	r0, #513
 712 033c FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 283:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 284:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Disable I2C, PKA, AES during deep sleep */
 285:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_I2C);
 713              		.loc 1 285 0
 714 0340 4FF44070 		mov	r0, #768
 715 0344 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 286:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_PKA);
 716              		.loc 1 286 0
 717 0348 4FF48060 		mov	r0, #1024
 718 034c FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 287:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_AES);
 719              		.loc 1 287 0
 720 0350 40F20140 		movw	r0, #1025
 721 0354 FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 288:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   SysCtrlPeripheralDeepSleepDisable(SYS_CTRL_PERIPH_RFC);
 722              		.loc 1 288 0
 723 0358 4FF4A060 		mov	r0, #1280
 724 035c FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
 289:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 725              		.loc 1 289 0
 726 0360 00BF     		nop
 727 0362 80BD     		pop	{r7, pc}
 728              		.cfi_endproc
 729              	.LFE12:
 731              		.align	2
 732              		.thumb
 733              		.thumb_func
 735              	SysCtrlWakeupSetting:
 736              	.LFB13:
 290:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 291:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void SysCtrlWakeupSetting(void) {
 737              		.loc 1 291 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741 0364 80B5     		push	{r7, lr}
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 7, -8
 744              		.cfi_offset 14, -4
 745 0366 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 292:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   /* Allow the SMTimer to wake up the processor */
 293:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****   GPIOIntWakeupEnable(GPIO_IWE_SM_TIMER);
 747              		.loc 1 293 0
 748 0368 2020     		movs	r0, #32
 749 036a FFF7FEFF 		bl	GPIOIntWakeupEnable
 294:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 750              		.loc 1 294 0
 751 036e 00BF     		nop
 752 0370 80BD     		pop	{r7, pc}
 753              		.cfi_endproc
 754              	.LFE13:
 756 0372 00BF     		.align	2
 757              		.thumb
 758              		.thumb_func
 760              	GPIO_C_Handler:
 761              	.LFB14:
 295:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 296:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** //=========================== interrupt handlers ==============================
 297:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 298:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** /**
 299:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * GPIO_C interrupt handler. User button is GPIO_C_3
 300:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  * Erases a Flash sector to trigger the bootloader backdoor
 301:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****  */
 302:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** static void GPIO_C_Handler(void) {
 762              		.loc 1 302 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766 0374 80B5     		push	{r7, lr}
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0376 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 303:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     if (!user_button_initialized) return;
 772              		.loc 1 303 0
 773 0378 0A4B     		ldr	r3, .L42
 774 037a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 775 037c 83F00103 		eor	r3, r3, #1
 776 0380 DBB2     		uxtb	r3, r3
 777 0382 002B     		cmp	r3, #0
 778 0384 0BD1     		bne	.L41
 304:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Disable the interrupts */
 305:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     IntMasterDisable();
 779              		.loc 1 305 0
 780 0386 FFF7FEFF 		bl	IntMasterDisable
 306:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     leds_all_off();
 781              		.loc 1 306 0
 782 038a FFF7FEFF 		bl	leds_all_off
 307:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 308:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Eras the CCA flash page */
 309:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     FlashMainPageErase(CC2538_FLASH_ADDRESS);
 783              		.loc 1 309 0
 784 038e 0648     		ldr	r0, .L42+4
 785 0390 FFF7FEFF 		bl	FlashMainPageErase
 310:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** 
 311:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     leds_circular_shift();
 786              		.loc 1 311 0
 787 0394 FFF7FEFF 		bl	leds_circular_shift
 312:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     
 313:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Reset the board */
 314:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     SysCtrlReset();
 788              		.loc 1 314 0
 789 0398 FFF7FEFF 		bl	SysCtrlReset
 790 039c 00E0     		b	.L38
 791              	.L41:
 303:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c ****     /* Disable the interrupts */
 792              		.loc 1 303 0
 793 039e 00BF     		nop
 794              	.L38:
 315:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/board.c **** }
 795              		.loc 1 315 0
 796 03a0 80BD     		pop	{r7, pc}
 797              	.L43:
 798 03a2 00BF     		.align	2
 799              	.L42:
 800 03a4 00000000 		.word	user_button_initialized
 801 03a8 00F82700 		.word	2619392
 802              		.cfi_endproc
 803              	.LFE14:
 805              	.Letext0:
 806              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 807              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 808              		.file 4 "bsp/boards/openmote-cc2538/board_info.h"
 809              		.file 5 "inc/opendefs.h"
 810              		.file 6 "bsp/boards/sensors.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 board.c
     /tmp/ccoV0MEb.s:20     .rodata:0000000000000000 $d
     /tmp/ccoV0MEb.s:23     .rodata:0000000000000000 rreg_uriquery
     /tmp/ccoV0MEb.s:28     .rodata:0000000000000008 infoBoardname
     /tmp/ccoV0MEb.s:33     .rodata:0000000000000010 infouCName
     /tmp/ccoV0MEb.s:38     .rodata:0000000000000018 infoRadioName
     /tmp/ccoV0MEb.s:43     .rodata:0000000000000024 infoStackName
                            *COM*:0000000000000001 user_button_initialized
     /tmp/ccoV0MEb.s:47     .text:0000000000000000 $t
     /tmp/ccoV0MEb.s:52     .text:0000000000000000 main
     /tmp/ccoV0MEb.s:79     .text:0000000000000010 board_init
     /tmp/ccoV0MEb.s:322    .text:00000000000000f0 gpio_init
     /tmp/ccoV0MEb.s:387    .text:0000000000000150 clock_init
     /tmp/ccoV0MEb.s:162    .text:0000000000000068 board_timer_init
     /tmp/ccoV0MEb.s:479    .text:00000000000001d4 button_init
     /tmp/ccoV0MEb.s:125    .text:0000000000000050 $d
     /tmp/ccoV0MEb.s:129    .text:0000000000000054 $t
     /tmp/ccoV0MEb.s:134    .text:0000000000000054 board_sleep
     /tmp/ccoV0MEb.s:188    .text:0000000000000084 $d
     /tmp/ccoV0MEb.s:192    .text:0000000000000088 $t
     /tmp/ccoV0MEb.s:197    .text:0000000000000088 board_timer_get
     /tmp/ccoV0MEb.s:231    .text:00000000000000a8 $d
     /tmp/ccoV0MEb.s:235    .text:00000000000000ac $t
     /tmp/ccoV0MEb.s:240    .text:00000000000000ac board_timer_expired
     /tmp/ccoV0MEb.s:289    .text:00000000000000e0 $d
     /tmp/ccoV0MEb.s:293    .text:00000000000000e4 $t
     /tmp/ccoV0MEb.s:298    .text:00000000000000e4 board_reset
     /tmp/ccoV0MEb.s:376    .text:0000000000000140 $d
     /tmp/ccoV0MEb.s:383    .text:0000000000000150 $t
     /tmp/ccoV0MEb.s:561    .text:0000000000000244 SysCtrlRunSetting
     /tmp/ccoV0MEb.s:619    .text:00000000000002a4 SysCtrlSleepSetting
     /tmp/ccoV0MEb.s:677    .text:0000000000000304 SysCtrlDeepSleepSetting
     /tmp/ccoV0MEb.s:735    .text:0000000000000364 SysCtrlWakeupSetting
     /tmp/ccoV0MEb.s:470    .text:00000000000001cc $d
     /tmp/ccoV0MEb.s:475    .text:00000000000001d4 $t
     /tmp/ccoV0MEb.s:551    .text:0000000000000238 $d
     /tmp/ccoV0MEb.s:760    .text:0000000000000374 GPIO_C_Handler
     /tmp/ccoV0MEb.s:557    .text:0000000000000244 $t
     /tmp/ccoV0MEb.s:800    .text:00000000000003a4 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.8e445c0106ab795ab4704214cba6f089
                           .group:0000000000000000 wm4.hw_ioc.h.39.7722cce4a3cc0e3380c3cd135aee3b21
                           .group:0000000000000000 wm4.hw_memmap.h.39.19283c377d449c9bca5fdd8ccb62628c
                           .group:0000000000000000 wm4.hw_ssi.h.39.9082f14e87d6077894a6e46eebe76d2f
                           .group:0000000000000000 wm4.hw_sys_ctrl.h.39.50b4d7775c38e82076d0eb3bdc2daf82
                           .group:0000000000000000 wm4._newlib_version.h.4.ad342815780c8db09778091a421b5b5b
                           .group:0000000000000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.b82bf99f69d6a5c085fc866de0d3eb9b
                           .group:0000000000000000 wm4._stdint.h.10.7a5f60e6741af4a5594a3867d347e1f9
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.flash.h.41.1b4c606036d8f71c3434e1ed199afc8d
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.ioc.h.41.7444fe7016a1d045dd9fea497d615b28
                           .group:0000000000000000 wm4.gpio.h.41.604fa3d9f70fb140a75ada50bffeaeff
                           .group:0000000000000000 wm4.gptimer.h.41.51b4a65e82289454ba49ea8dab75309e
                           .group:0000000000000000 wm4.sys_ctrl.h.41.c6bbd4dace326d685c1afa45bc1ba1e2
                           .group:0000000000000000 wm4.newlib.h.8.36dd0417407b0a085bc04c49cc2ed13a
                           .group:0000000000000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:0000000000000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:0000000000000000 wm4.reent.h.17.850ac0a908956e5fb788be1b80de2f32
                           .group:0000000000000000 wm4.cdefs.h.47.ba62642086d429b4f95c2381cae1c0aa
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.board_info.h.22.1291259c351bc018e4d4402148b3c6db
                           .group:0000000000000000 wm4.toolchain_defs.h.2.1de8df52ab2567aa1aa0a288d2325900
                           .group:0000000000000000 wm4.i2c.h.2.c40f7396ee1937cb7d6a6e6fcec1c344
                           .group:0000000000000000 wm4.leds.h.2.746f2c4bd224f28046dfa242de7e3f3d
                           .group:0000000000000000 wm4.opendefs.h.23.7cebe26102c97c54bd8b5c6c980ef012

UNDEFINED SYMBOLS
mote_main
leds_init
debugpins_init
sctimer_init
uart_init
radio_init
i2c_init
sensors_init
cryptoengine_init
SysCtrlPowerModeSet
SysCtrlSleep
TimerConfigure
TimerEnable
TimerValueGet
SysCtrlReset
GPIOPinTypeGPIOOutput
GPIOPinWrite
IntMasterDisable
GPIODirModeSet
IOCPadConfigSet
SysCtrlClockSet
SysCtrlIOClockSet
IntMasterEnable
GPIOPinIntDisable
GPIOPinIntClear
GPIOPinTypeGPIOInput
GPIOIntTypeSet
GPIOPortIntRegister
GPIOPinIntEnable
SysCtrlPeripheralDisable
SysCtrlPeripheralEnable
SysCtrlPeripheralSleepDisable
SysCtrlPeripheralSleepEnable
SysCtrlPeripheralDeepSleepDisable
GPIOIntWakeupEnable
leds_all_off
FlashMainPageErase
leds_circular_shift
