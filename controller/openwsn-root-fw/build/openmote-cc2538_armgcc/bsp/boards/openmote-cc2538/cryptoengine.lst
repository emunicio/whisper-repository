   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cryptoengine.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  23              	rreg_uriquery:
  24 0000 683D7563 		.ascii	"h=ucb\000"
  24      6200
  25 0006 0000     		.align	2
  28              	infoBoardname:
  29 0008 43433235 		.ascii	"CC2538\000"
  29      333800
  30 000f 00       		.align	2
  33              	infouCName:
  34 0010 43433235 		.ascii	"CC2538\000"
  34      333800
  35 0017 00       		.align	2
  38              	infoRadioName:
  39 0018 43433235 		.ascii	"CC2538 SoC\000"
  39      33382053 
  39      6F4300
  40 0023 00       		.align	2
  43              	infoStackName:
  44 0024 4F70656E 		.ascii	"OpenWSN \000"
  44      57534E20 
  44      00
  45              		.text
  46              		.align	2
  47              		.global	cryptoengine_init
  48              		.thumb
  49              		.thumb_func
  51              	cryptoengine_init:
  52              	.LFB0:
  53              		.file 1 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c"
   1:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** /**
   2:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** \brief Crypto engine implementation for OpenMote-CC2538
   3:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****   
   4:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** \author Malisa Vucinic <malishav@gmail.com>, March 2015.
   5:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** */
   6:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** #include <stdint.h>
   7:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
   8:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** #include <headers/hw_sys_ctrl.h>
   9:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  10:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** #include <source/sys_ctrl.h>
  11:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** #include <source/aes.h>
  12:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** #include <source/ccm.h>
  13:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  14:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** #include "cryptoengine.h"
  15:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  16:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** #define DEFAULT_KEY_AREA KEY_AREA_0
  17:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  18:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  19:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** //=========================== prototypes ======================================
  20:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  21:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** static owerror_t load_key(uint8_t key[16], uint8_t* /* out */ key_location);
  22:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  23:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  24:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** //=========================== public ==========================================
  25:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  26:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** owerror_t cryptoengine_init(void) {
  54              		.loc 1 26 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58 0000 80B5     		push	{r7, lr}
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  27:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    //
  28:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    // Enable AES peripheral
  29:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    //
  30:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    SysCtrlPeripheralReset(SYS_CTRL_PERIPH_AES);
  64              		.loc 1 30 0
  65 0004 40F20140 		movw	r0, #1025
  66 0008 FFF7FEFF 		bl	SysCtrlPeripheralReset
  31:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    SysCtrlPeripheralEnable(SYS_CTRL_PERIPH_AES);
  67              		.loc 1 31 0
  68 000c 40F20140 		movw	r0, #1025
  69 0010 FFF7FEFF 		bl	SysCtrlPeripheralEnable
  32:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    return E_SUCCESS;
  70              		.loc 1 32 0
  71 0014 0023     		movs	r3, #0
  33:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** }
  72              		.loc 1 33 0
  73 0016 1846     		mov	r0, r3
  74 0018 80BD     		pop	{r7, pc}
  75              		.cfi_endproc
  76              	.LFE0:
  78 001a 00BF     		.align	2
  79              		.global	cryptoengine_aes_ccms_enc
  80              		.thumb
  81              		.thumb_func
  83              	cryptoengine_aes_ccms_enc:
  84              	.LFB1:
  34:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  35:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** owerror_t cryptoengine_aes_ccms_enc(uint8_t* a,
  36:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t len_a,
  37:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t* m,
  38:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t* len_m,
  39:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t* nonce,
  40:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t l,
  41:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t key[16],
  42:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t len_mac) {
  85              		.loc 1 42 0
  86              		.cfi_startproc
  87              		@ args = 16, pretend = 0, frame = 24
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89 001c F0B5     		push	{r4, r5, r6, r7, lr}
  90              		.cfi_def_cfa_offset 20
  91              		.cfi_offset 4, -20
  92              		.cfi_offset 5, -16
  93              		.cfi_offset 6, -12
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 001e 8FB0     		sub	sp, sp, #60
  97              		.cfi_def_cfa_offset 80
  98 0020 08AF     		add	r7, sp, #32
  99              		.cfi_def_cfa 7, 48
 100 0022 F860     		str	r0, [r7, #12]
 101 0024 7A60     		str	r2, [r7, #4]
 102 0026 3B60     		str	r3, [r7]
 103 0028 0B46     		mov	r3, r1
 104 002a FB72     		strb	r3, [r7, #11]
  43:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  44:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    bool encrypt;
  45:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    uint8_t key_location;
  46:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****   
  47:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    encrypt = *len_m > 0 ? true : false;
 105              		.loc 1 47 0
 106 002c 3B68     		ldr	r3, [r7]
 107 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 108 0030 002B     		cmp	r3, #0
 109 0032 14BF     		ite	ne
 110 0034 0123     		movne	r3, #1
 111 0036 0023     		moveq	r3, #0
 112 0038 FB75     		strb	r3, [r7, #23]
  48:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  49:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    if(load_key(key, &key_location) == E_SUCCESS) {
 113              		.loc 1 49 0
 114 003a 07F11603 		add	r3, r7, #22
 115 003e 1946     		mov	r1, r3
 116 0040 B86B     		ldr	r0, [r7, #56]
 117 0042 00F0D7F8 		bl	load_key
 118 0046 0346     		mov	r3, r0
 119 0048 002B     		cmp	r3, #0
 120 004a 41D1     		bne	.L4
  50:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       if(CCMAuthEncryptStart(encrypt,
  51:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               len_mac,
  52:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               nonce,
  53:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               m,
  54:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               (uint16_t) *len_m,
 121              		.loc 1 54 0
 122 004c 3B68     		ldr	r3, [r7]
 123 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       if(CCMAuthEncryptStart(encrypt,
 124              		.loc 1 50 0
 125 0050 9BB2     		uxth	r3, r3
 126 0052 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 127 0054 92B2     		uxth	r2, r2
 128 0056 B97D     		ldrb	r1, [r7, #22]	@ zero_extendqisi2
  55:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               a,
  56:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               (uint16_t) len_a,
  57:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               key_location,
  58:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               &m[*len_m],
 129              		.loc 1 58 0
 130 0058 3868     		ldr	r0, [r7]
 131 005a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  50:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       if(CCMAuthEncryptStart(encrypt,
 132              		.loc 1 50 0
 133 005c 0446     		mov	r4, r0
 134 005e 7868     		ldr	r0, [r7, #4]
 135 0060 2044     		add	r0, r0, r4
 136 0062 97F83C60 		ldrb	r6, [r7, #60]	@ zero_extendqisi2
 137 0066 FD7D     		ldrb	r5, [r7, #23]	@ zero_extendqisi2
 138 0068 0024     		movs	r4, #0
 139 006a 0694     		str	r4, [sp, #24]
 140 006c 97F83440 		ldrb	r4, [r7, #52]	@ zero_extendqisi2
 141 0070 0594     		str	r4, [sp, #20]
 142 0072 0490     		str	r0, [sp, #16]
 143 0074 0391     		str	r1, [sp, #12]
 144 0076 0292     		str	r2, [sp, #8]
 145 0078 FA68     		ldr	r2, [r7, #12]
 146 007a 0192     		str	r2, [sp, #4]
 147 007c 0093     		str	r3, [sp]
 148 007e 7B68     		ldr	r3, [r7, #4]
 149 0080 3A6B     		ldr	r2, [r7, #48]
 150 0082 3146     		mov	r1, r6
 151 0084 2846     		mov	r0, r5
 152 0086 FFF7FEFF 		bl	CCMAuthEncryptStart
 153 008a 0346     		mov	r3, r0
 154 008c 002B     		cmp	r3, #0
 155 008e 1FD1     		bne	.L4
 156              	.L5:
  59:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               l,
  60:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               /* polling */ 0) == AES_SUCCESS) {
  61:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  62:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          do {
  63:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****             ASM_NOP;
 157              		.loc 1 63 0 discriminator 1
 158              		.syntax unified
 159              	@ 63 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c" 1
 160 0090 00BF     		NOP
 161              	@ 0 "" 2
  64:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          } while(CCMAuthEncryptCheckResult() == 0);
 162              		.loc 1 64 0 discriminator 1
 163              		.thumb
 164              		.syntax unified
 165 0092 FFF7FEFF 		bl	CCMAuthEncryptCheckResult
 166 0096 0346     		mov	r3, r0
 167 0098 002B     		cmp	r3, #0
 168 009a F9D0     		beq	.L5
  65:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****         
  66:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          if(CCMAuthEncryptGetResult(len_mac, 
  67:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                                     (uint16_t) *len_m,
 169              		.loc 1 67 0
 170 009c 3B68     		ldr	r3, [r7]
 171 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                                     (uint16_t) *len_m,
 172              		.loc 1 66 0
 173 00a0 99B2     		uxth	r1, r3
  68:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                                     &m[*len_m]) == AES_SUCCESS) {
 174              		.loc 1 68 0
 175 00a2 3B68     		ldr	r3, [r7]
 176 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                                     (uint16_t) *len_m,
 177              		.loc 1 66 0
 178 00a6 1A46     		mov	r2, r3
 179 00a8 7B68     		ldr	r3, [r7, #4]
 180 00aa 1A44     		add	r2, r2, r3
 181 00ac 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 182 00b0 1846     		mov	r0, r3
 183 00b2 FFF7FEFF 		bl	CCMAuthEncryptGetResult
 184 00b6 0346     		mov	r3, r0
 185 00b8 002B     		cmp	r3, #0
 186 00ba 09D1     		bne	.L4
  69:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  70:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****             *len_m += len_mac;
 187              		.loc 1 70 0
 188 00bc 3B68     		ldr	r3, [r7]
 189 00be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 190 00c0 97F83C30 		ldrb	r3, [r7, #60]
 191 00c4 1344     		add	r3, r3, r2
 192 00c6 DAB2     		uxtb	r2, r3
 193 00c8 3B68     		ldr	r3, [r7]
 194 00ca 1A70     		strb	r2, [r3]
  71:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****             return E_SUCCESS;
 195              		.loc 1 71 0
 196 00cc 0023     		movs	r3, #0
 197 00ce 00E0     		b	.L7
 198              	.L4:
  72:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          }
  73:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       }
  74:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    }
  75:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  76:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    return E_FAIL;
 199              		.loc 1 76 0
 200 00d0 0123     		movs	r3, #1
 201              	.L7:
  77:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** }
 202              		.loc 1 77 0 discriminator 1
 203 00d2 1846     		mov	r0, r3
 204 00d4 1C37     		adds	r7, r7, #28
 205              		.cfi_def_cfa_offset 20
 206 00d6 BD46     		mov	sp, r7
 207              		.cfi_def_cfa_register 13
 208              		@ sp needed
 209 00d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 210              		.cfi_endproc
 211              	.LFE1:
 213 00da 00BF     		.align	2
 214              		.global	cryptoengine_aes_ccms_dec
 215              		.thumb
 216              		.thumb_func
 218              	cryptoengine_aes_ccms_dec:
 219              	.LFB2:
  78:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  79:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** owerror_t cryptoengine_aes_ccms_dec(uint8_t* a,
  80:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t len_a,
  81:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t* m,
  82:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t* len_m,
  83:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t* nonce,
  84:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t l,
  85:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t key[16],
  86:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          uint8_t len_mac) {
 220              		.loc 1 86 0
 221              		.cfi_startproc
 222              		@ args = 16, pretend = 0, frame = 40
 223              		@ frame_needed = 1, uses_anonymous_args = 0
 224 00dc B0B5     		push	{r4, r5, r7, lr}
 225              		.cfi_def_cfa_offset 16
 226              		.cfi_offset 4, -16
 227              		.cfi_offset 5, -12
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230 00de 92B0     		sub	sp, sp, #72
 231              		.cfi_def_cfa_offset 88
 232 00e0 08AF     		add	r7, sp, #32
 233              		.cfi_def_cfa 7, 56
 234 00e2 F860     		str	r0, [r7, #12]
 235 00e4 7A60     		str	r2, [r7, #4]
 236 00e6 3B60     		str	r3, [r7]
 237 00e8 0B46     		mov	r3, r1
 238 00ea FB72     		strb	r3, [r7, #11]
  87:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  88:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    bool decrypt;
  89:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    uint8_t key_location;
  90:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    uint8_t tag[CBC_MAX_MAC_SIZE];
  91:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****   
  92:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    decrypt = *len_m - len_mac > 0 ? true : false;
 239              		.loc 1 92 0
 240 00ec 3B68     		ldr	r3, [r7]
 241 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 242 00f0 1A46     		mov	r2, r3
 243 00f2 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 244 00f6 D31A     		subs	r3, r2, r3
 245 00f8 002B     		cmp	r3, #0
 246 00fa CCBF     		ite	gt
 247 00fc 0123     		movgt	r3, #1
 248 00fe 0023     		movle	r3, #0
 249 0100 87F82730 		strb	r3, [r7, #39]
  93:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
  94:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    if(load_key(key, &key_location) == E_SUCCESS) {
 250              		.loc 1 94 0
 251 0104 07F12603 		add	r3, r7, #38
 252 0108 1946     		mov	r1, r3
 253 010a 386C     		ldr	r0, [r7, #64]
 254 010c 00F072F8 		bl	load_key
 255 0110 0346     		mov	r3, r0
 256 0112 002B     		cmp	r3, #0
 257 0114 3DD1     		bne	.L9
  95:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       if(CCMInvAuthDecryptStart(decrypt,
  96:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               len_mac,
  97:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               nonce,
  98:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               m,
  99:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               (uint16_t) *len_m,
 258              		.loc 1 99 0
 259 0116 3B68     		ldr	r3, [r7]
 260 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  95:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       if(CCMInvAuthDecryptStart(decrypt,
 261              		.loc 1 95 0
 262 011a 9BB2     		uxth	r3, r3
 263 011c FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 264 011e 92B2     		uxth	r2, r2
 265 0120 97F82610 		ldrb	r1, [r7, #38]	@ zero_extendqisi2
 266 0124 97F84450 		ldrb	r5, [r7, #68]	@ zero_extendqisi2
 267 0128 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 268 012c 0020     		movs	r0, #0
 269 012e 0690     		str	r0, [sp, #24]
 270 0130 97F83C00 		ldrb	r0, [r7, #60]	@ zero_extendqisi2
 271 0134 0590     		str	r0, [sp, #20]
 272 0136 07F11400 		add	r0, r7, #20
 273 013a 0490     		str	r0, [sp, #16]
 274 013c 0391     		str	r1, [sp, #12]
 275 013e 0292     		str	r2, [sp, #8]
 276 0140 FA68     		ldr	r2, [r7, #12]
 277 0142 0192     		str	r2, [sp, #4]
 278 0144 0093     		str	r3, [sp]
 279 0146 7B68     		ldr	r3, [r7, #4]
 280 0148 BA6B     		ldr	r2, [r7, #56]
 281 014a 2946     		mov	r1, r5
 282 014c 2046     		mov	r0, r4
 283 014e FFF7FEFF 		bl	CCMInvAuthDecryptStart
 284 0152 0346     		mov	r3, r0
 285 0154 002B     		cmp	r3, #0
 286 0156 1CD1     		bne	.L9
 287              	.L10:
 100:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               a,
 101:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               (uint16_t) len_a,
 102:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               key_location,
 103:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               tag,
 104:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               l,
 105:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                               /* polling */ 0) == AES_SUCCESS) {
 106:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
 107:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          do {
 108:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****             ASM_NOP;
 288              		.loc 1 108 0 discriminator 1
 289              		.syntax unified
 290              	@ 108 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c" 1
 291 0158 00BF     		NOP
 292              	@ 0 "" 2
 109:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          } while(CCMInvAuthDecryptCheckResult() == 0);
 293              		.loc 1 109 0 discriminator 1
 294              		.thumb
 295              		.syntax unified
 296 015a FFF7FEFF 		bl	CCMInvAuthDecryptCheckResult
 297 015e 0346     		mov	r3, r0
 298 0160 002B     		cmp	r3, #0
 299 0162 F9D0     		beq	.L10
 110:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****        
 111:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          if(CCMInvAuthDecryptGetResult(len_mac, 
 112:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                                        m,
 113:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                                        (uint16_t) *len_m,
 300              		.loc 1 113 0
 301 0164 3B68     		ldr	r3, [r7]
 302 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 111:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                                        m,
 303              		.loc 1 111 0
 304 0168 9AB2     		uxth	r2, r3
 305 016a 07F11403 		add	r3, r7, #20
 306 016e 97F84400 		ldrb	r0, [r7, #68]	@ zero_extendqisi2
 307 0172 7968     		ldr	r1, [r7, #4]
 308 0174 FFF7FEFF 		bl	CCMInvAuthDecryptGetResult
 309 0178 0346     		mov	r3, r0
 310 017a 002B     		cmp	r3, #0
 311 017c 09D1     		bne	.L9
 114:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****                                        tag) == AES_SUCCESS) {
 115:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
 116:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****             *len_m -= len_mac;
 312              		.loc 1 116 0
 313 017e 3B68     		ldr	r3, [r7]
 314 0180 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 315 0182 97F84430 		ldrb	r3, [r7, #68]
 316 0186 D31A     		subs	r3, r2, r3
 317 0188 DAB2     		uxtb	r2, r3
 318 018a 3B68     		ldr	r3, [r7]
 319 018c 1A70     		strb	r2, [r3]
 117:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****             return E_SUCCESS;
 320              		.loc 1 117 0
 321 018e 0023     		movs	r3, #0
 322 0190 00E0     		b	.L12
 323              	.L9:
 118:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          }
 119:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       }
 120:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    }
 121:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    return E_FAIL;
 324              		.loc 1 121 0
 325 0192 0123     		movs	r3, #1
 326              	.L12:
 122:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** }
 327              		.loc 1 122 0 discriminator 1
 328 0194 1846     		mov	r0, r3
 329 0196 2837     		adds	r7, r7, #40
 330              		.cfi_def_cfa_offset 16
 331 0198 BD46     		mov	sp, r7
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 019a B0BD     		pop	{r4, r5, r7, pc}
 335              		.cfi_endproc
 336              	.LFE2:
 338              		.align	2
 339              		.global	cryptoengine_aes_ecb_enc
 340              		.thumb
 341              		.thumb_func
 343              	cryptoengine_aes_ecb_enc:
 344              	.LFB3:
 123:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
 124:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** owerror_t cryptoengine_aes_ecb_enc(uint8_t* buffer, uint8_t* key) {
 345              		.loc 1 124 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 16
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349 019c 80B5     		push	{r7, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 019e 86B0     		sub	sp, sp, #24
 354              		.cfi_def_cfa_offset 32
 355 01a0 02AF     		add	r7, sp, #8
 356              		.cfi_def_cfa 7, 24
 357 01a2 7860     		str	r0, [r7, #4]
 358 01a4 3960     		str	r1, [r7]
 125:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    uint8_t key_location;
 126:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    if(load_key(key, &key_location) == E_SUCCESS) {
 359              		.loc 1 126 0
 360 01a6 07F10F03 		add	r3, r7, #15
 361 01aa 1946     		mov	r1, r3
 362 01ac 3868     		ldr	r0, [r7]
 363 01ae 00F021F8 		bl	load_key
 364 01b2 0346     		mov	r3, r0
 365 01b4 002B     		cmp	r3, #0
 366 01b6 17D1     		bne	.L14
 127:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       // Polling
 128:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       if(AESECBStart(buffer, buffer, key_location, 1, 0) == AES_SUCCESS) {
 367              		.loc 1 128 0
 368 01b8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 369 01ba 0023     		movs	r3, #0
 370 01bc 0093     		str	r3, [sp]
 371 01be 0123     		movs	r3, #1
 372 01c0 7968     		ldr	r1, [r7, #4]
 373 01c2 7868     		ldr	r0, [r7, #4]
 374 01c4 FFF7FEFF 		bl	AESECBStart
 375 01c8 0346     		mov	r3, r0
 376 01ca 002B     		cmp	r3, #0
 377 01cc 0CD1     		bne	.L14
 378              	.L15:
 129:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          do {
 130:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****             ASM_NOP;
 379              		.loc 1 130 0 discriminator 1
 380              		.syntax unified
 381              	@ 130 "build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c" 1
 382 01ce 00BF     		NOP
 383              	@ 0 "" 2
 131:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          } while(AESECBCheckResult() == 0);
 384              		.loc 1 131 0 discriminator 1
 385              		.thumb
 386              		.syntax unified
 387 01d0 FFF7FEFF 		bl	AESECBCheckResult
 388 01d4 0346     		mov	r3, r0
 389 01d6 002B     		cmp	r3, #0
 390 01d8 F9D0     		beq	.L15
 132:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
 133:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          if(AESECBGetResult() == AES_SUCCESS) {
 391              		.loc 1 133 0
 392 01da FFF7FEFF 		bl	AESECBGetResult
 393 01de 0346     		mov	r3, r0
 394 01e0 002B     		cmp	r3, #0
 395 01e2 01D1     		bne	.L14
 134:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****             return E_SUCCESS;
 396              		.loc 1 134 0
 397 01e4 0023     		movs	r3, #0
 398 01e6 00E0     		b	.L17
 399              	.L14:
 135:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          }
 136:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       }
 137:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    }
 138:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    return E_FAIL;
 400              		.loc 1 138 0
 401 01e8 0123     		movs	r3, #1
 402              	.L17:
 139:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** }
 403              		.loc 1 139 0 discriminator 1
 404 01ea 1846     		mov	r0, r3
 405 01ec 1037     		adds	r7, r7, #16
 406              		.cfi_def_cfa_offset 8
 407 01ee BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 01f0 80BD     		pop	{r7, pc}
 411              		.cfi_endproc
 412              	.LFE3:
 414 01f2 00BF     		.align	2
 415              		.thumb
 416              		.thumb_func
 418              	load_key:
 419              	.LFB4:
 140:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
 141:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** //=========================== private ==========================================
 142:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** 
 143:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** /**
 144:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** \brief On success, returns by reference the location in key RAM where the 
 145:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    new/existing key is stored.
 146:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** */
 147:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** static owerror_t load_key(uint8_t key[16], uint8_t* /* out */ key_location) {
 420              		.loc 1 147 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 8
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424 01f4 90B5     		push	{r4, r7, lr}
 425              		.cfi_def_cfa_offset 12
 426              		.cfi_offset 4, -12
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 01f6 83B0     		sub	sp, sp, #12
 430              		.cfi_def_cfa_offset 24
 431 01f8 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
 433 01fa 7860     		str	r0, [r7, #4]
 434 01fc 3960     		str	r1, [r7]
 148:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    static uint8_t loaded_key[16];
 149:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    
 150:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    if(memcmp(loaded_key, key, 16) != 0) {
 435              		.loc 1 150 0
 436 01fe 1022     		movs	r2, #16
 437 0200 7968     		ldr	r1, [r7, #4]
 438 0202 0F48     		ldr	r0, .L21
 439 0204 FFF7FEFF 		bl	memcmp
 440 0208 0346     		mov	r3, r0
 441 020a 002B     		cmp	r3, #0
 442 020c 10D0     		beq	.L19
 151:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       memcpy(loaded_key, key, 16);
 443              		.loc 1 151 0
 444 020e 0C4A     		ldr	r2, .L21
 445 0210 7B68     		ldr	r3, [r7, #4]
 446 0212 1446     		mov	r4, r2
 447 0214 1868     		ldr	r0, [r3]	@ unaligned
 448 0216 5968     		ldr	r1, [r3, #4]	@ unaligned
 449 0218 9A68     		ldr	r2, [r3, #8]	@ unaligned
 450 021a DB68     		ldr	r3, [r3, #12]	@ unaligned
 451 021c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 152:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       // Load the key in key RAM
 153:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       if(AESLoadKey(loaded_key, DEFAULT_KEY_AREA) != AES_SUCCESS) {
 452              		.loc 1 153 0
 453 021e 0021     		movs	r1, #0
 454 0220 0748     		ldr	r0, .L21
 455 0222 FFF7FEFF 		bl	AESLoadKey
 456 0226 0346     		mov	r3, r0
 457 0228 002B     		cmp	r3, #0
 458 022a 01D0     		beq	.L19
 154:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****          return E_FAIL;
 459              		.loc 1 154 0
 460 022c 0123     		movs	r3, #1
 461 022e 03E0     		b	.L20
 462              	.L19:
 155:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****       }
 156:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    }
 157:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    *key_location = DEFAULT_KEY_AREA;
 463              		.loc 1 157 0
 464 0230 3B68     		ldr	r3, [r7]
 465 0232 0022     		movs	r2, #0
 466 0234 1A70     		strb	r2, [r3]
 158:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c ****    return E_SUCCESS;
 467              		.loc 1 158 0
 468 0236 0023     		movs	r3, #0
 469              	.L20:
 159:build/openmote-cc2538_armgcc/bsp/boards/openmote-cc2538/cryptoengine.c **** }
 470              		.loc 1 159 0
 471 0238 1846     		mov	r0, r3
 472 023a 0C37     		adds	r7, r7, #12
 473              		.cfi_def_cfa_offset 12
 474 023c BD46     		mov	sp, r7
 475              		.cfi_def_cfa_register 13
 476              		@ sp needed
 477 023e 90BD     		pop	{r4, r7, pc}
 478              	.L22:
 479              		.align	2
 480              	.L21:
 481 0240 00000000 		.word	loaded_key.5071
 482              		.cfi_endproc
 483              	.LFE4:
 485              		.bss
 486              		.align	2
 487              	loaded_key.5071:
 488 0000 00000000 		.space	16
 488      00000000 
 488      00000000 
 488      00000000 
 489              		.text
 490              	.Letext0:
 491              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 492              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 493              		.file 4 "bsp/boards/openmote-cc2538/source/aes.h"
 494              		.file 5 "inc/opendefs.h"
 495              		.file 6 "bsp/boards/openmote-cc2538/board_info.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 cryptoengine.c
     /tmp/ccPmv3Kg.s:20     .rodata:0000000000000000 $d
     /tmp/ccPmv3Kg.s:23     .rodata:0000000000000000 rreg_uriquery
     /tmp/ccPmv3Kg.s:28     .rodata:0000000000000008 infoBoardname
     /tmp/ccPmv3Kg.s:33     .rodata:0000000000000010 infouCName
     /tmp/ccPmv3Kg.s:38     .rodata:0000000000000018 infoRadioName
     /tmp/ccPmv3Kg.s:43     .rodata:0000000000000024 infoStackName
     /tmp/ccPmv3Kg.s:46     .text:0000000000000000 $t
     /tmp/ccPmv3Kg.s:51     .text:0000000000000000 cryptoengine_init
     /tmp/ccPmv3Kg.s:83     .text:000000000000001c cryptoengine_aes_ccms_enc
     /tmp/ccPmv3Kg.s:418    .text:00000000000001f4 load_key
     /tmp/ccPmv3Kg.s:218    .text:00000000000000dc cryptoengine_aes_ccms_dec
     /tmp/ccPmv3Kg.s:343    .text:000000000000019c cryptoengine_aes_ecb_enc
     /tmp/ccPmv3Kg.s:481    .text:0000000000000240 $d
     /tmp/ccPmv3Kg.s:487    .bss:0000000000000000 loaded_key.5071
     /tmp/ccPmv3Kg.s:486    .bss:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.8e445c0106ab795ab4704214cba6f089
                           .group:0000000000000000 wm4._newlib_version.h.4.ad342815780c8db09778091a421b5b5b
                           .group:0000000000000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.b82bf99f69d6a5c085fc866de0d3eb9b
                           .group:0000000000000000 wm4._stdint.h.10.7a5f60e6741af4a5594a3867d347e1f9
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.hw_sys_ctrl.h.39.50b4d7775c38e82076d0eb3bdc2daf82
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.sys_ctrl.h.62.2f03f4949954c40d60d71df89cf310cb
                           .group:0000000000000000 wm4.hw_aes.h.39.77ecc3829d96bb0e5669b1f36ecffb12
                           .group:0000000000000000 wm4.hw_ints.h.42.85b9479f2be35b086f1bb7cbb15bc097
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.aes.h.66.0fb976edb685649779bd34f5f8f7ef75
                           .group:0000000000000000 wm4.toolchain_defs.h.2.1de8df52ab2567aa1aa0a288d2325900
                           .group:0000000000000000 wm4.newlib.h.8.36dd0417407b0a085bc04c49cc2ed13a
                           .group:0000000000000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:0000000000000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:0000000000000000 wm4.reent.h.17.850ac0a908956e5fb788be1b80de2f32
                           .group:0000000000000000 wm4.cdefs.h.47.ba62642086d429b4f95c2381cae1c0aa
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.board_info.h.22.1291259c351bc018e4d4402148b3c6db
                           .group:0000000000000000 wm4.opendefs.h.23.47191652995b7fa35f12da40c3552cda

UNDEFINED SYMBOLS
SysCtrlPeripheralReset
SysCtrlPeripheralEnable
CCMAuthEncryptStart
CCMAuthEncryptCheckResult
CCMAuthEncryptGetResult
CCMInvAuthDecryptStart
CCMInvAuthDecryptCheckResult
CCMInvAuthDecryptGetResult
AESECBStart
AESECBCheckResult
AESECBGetResult
memcmp
AESLoadKey
